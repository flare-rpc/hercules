// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hercules/proto/hercules_service.proto

#include "hercules/proto/hercules_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace hercules {
namespace proto {
PROTOBUF_CONSTEXPR ServerLiveRequest::ServerLiveRequest(
    ::_pbi::ConstantInitialized){}
struct ServerLiveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerLiveRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerLiveRequestDefaultTypeInternal() {}
  union {
    ServerLiveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerLiveRequestDefaultTypeInternal _ServerLiveRequest_default_instance_;
PROTOBUF_CONSTEXPR ServerLiveResponse::ServerLiveResponse(
    ::_pbi::ConstantInitialized)
  : live_(false){}
struct ServerLiveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerLiveResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerLiveResponseDefaultTypeInternal() {}
  union {
    ServerLiveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerLiveResponseDefaultTypeInternal _ServerLiveResponse_default_instance_;
PROTOBUF_CONSTEXPR ServerReadyRequest::ServerReadyRequest(
    ::_pbi::ConstantInitialized){}
struct ServerReadyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerReadyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerReadyRequestDefaultTypeInternal() {}
  union {
    ServerReadyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerReadyRequestDefaultTypeInternal _ServerReadyRequest_default_instance_;
PROTOBUF_CONSTEXPR ServerReadyResponse::ServerReadyResponse(
    ::_pbi::ConstantInitialized)
  : ready_(false){}
struct ServerReadyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerReadyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerReadyResponseDefaultTypeInternal() {}
  union {
    ServerReadyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerReadyResponseDefaultTypeInternal _ServerReadyResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelReadyRequest::ModelReadyRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelReadyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelReadyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelReadyRequestDefaultTypeInternal() {}
  union {
    ModelReadyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelReadyRequestDefaultTypeInternal _ModelReadyRequest_default_instance_;
PROTOBUF_CONSTEXPR ModelReadyResponse::ModelReadyResponse(
    ::_pbi::ConstantInitialized)
  : ready_(false){}
struct ModelReadyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelReadyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelReadyResponseDefaultTypeInternal() {}
  union {
    ModelReadyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelReadyResponseDefaultTypeInternal _ModelReadyResponse_default_instance_;
PROTOBUF_CONSTEXPR ServerMetadataRequest::ServerMetadataRequest(
    ::_pbi::ConstantInitialized){}
struct ServerMetadataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerMetadataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerMetadataRequestDefaultTypeInternal() {}
  union {
    ServerMetadataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerMetadataRequestDefaultTypeInternal _ServerMetadataRequest_default_instance_;
PROTOBUF_CONSTEXPR ServerMetadataResponse::ServerMetadataResponse(
    ::_pbi::ConstantInitialized)
  : extensions_()
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ServerMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerMetadataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerMetadataResponseDefaultTypeInternal() {}
  union {
    ServerMetadataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerMetadataResponseDefaultTypeInternal _ServerMetadataResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelMetadataRequest::ModelMetadataRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelMetadataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelMetadataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelMetadataRequestDefaultTypeInternal() {}
  union {
    ModelMetadataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelMetadataRequestDefaultTypeInternal _ModelMetadataRequest_default_instance_;
PROTOBUF_CONSTEXPR ModelMetadataResponse_TensorMetadata::ModelMetadataResponse_TensorMetadata(
    ::_pbi::ConstantInitialized)
  : shape_()
  , _shape_cached_byte_size_(0)
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , datatype_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelMetadataResponse_TensorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelMetadataResponse_TensorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelMetadataResponse_TensorMetadataDefaultTypeInternal() {}
  union {
    ModelMetadataResponse_TensorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelMetadataResponse_TensorMetadataDefaultTypeInternal _ModelMetadataResponse_TensorMetadata_default_instance_;
PROTOBUF_CONSTEXPR ModelMetadataResponse::ModelMetadataResponse(
    ::_pbi::ConstantInitialized)
  : versions_()
  , inputs_()
  , outputs_()
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , platform_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelMetadataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelMetadataResponseDefaultTypeInternal() {}
  union {
    ModelMetadataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelMetadataResponseDefaultTypeInternal _ModelMetadataResponse_default_instance_;
PROTOBUF_CONSTEXPR InferParameter::InferParameter(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct InferParameterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferParameterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferParameterDefaultTypeInternal() {}
  union {
    InferParameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferParameterDefaultTypeInternal _InferParameter_default_instance_;
PROTOBUF_CONSTEXPR InferTensorContents::InferTensorContents(
    ::_pbi::ConstantInitialized)
  : bool_contents_()
  , int_contents_()
  , _int_contents_cached_byte_size_(0)
  , int64_contents_()
  , _int64_contents_cached_byte_size_(0)
  , uint_contents_()
  , _uint_contents_cached_byte_size_(0)
  , uint64_contents_()
  , _uint64_contents_cached_byte_size_(0)
  , fp32_contents_()
  , fp64_contents_()
  , bytes_contents_(){}
struct InferTensorContentsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferTensorContentsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferTensorContentsDefaultTypeInternal() {}
  union {
    InferTensorContents _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferTensorContentsDefaultTypeInternal _InferTensorContents_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUseDefaultTypeInternal _ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest_InferInputTensor::ModelInferRequest_InferInputTensor(
    ::_pbi::ConstantInitialized)
  : shape_()
  , _shape_cached_byte_size_(0)
  , parameters_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , datatype_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , contents_(nullptr){}
struct ModelInferRequest_InferInputTensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequest_InferInputTensorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequest_InferInputTensorDefaultTypeInternal() {}
  union {
    ModelInferRequest_InferInputTensor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequest_InferInputTensorDefaultTypeInternal _ModelInferRequest_InferInputTensor_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal _ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest_InferRequestedOutputTensor::ModelInferRequest_InferRequestedOutputTensor(
    ::_pbi::ConstantInitialized)
  : parameters_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelInferRequest_InferRequestedOutputTensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequest_InferRequestedOutputTensorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequest_InferRequestedOutputTensorDefaultTypeInternal() {}
  union {
    ModelInferRequest_InferRequestedOutputTensor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequest_InferRequestedOutputTensorDefaultTypeInternal _ModelInferRequest_InferRequestedOutputTensor_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest_ParametersEntry_DoNotUse::ModelInferRequest_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ModelInferRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequest_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelInferRequest_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequest_ParametersEntry_DoNotUseDefaultTypeInternal _ModelInferRequest_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest::ModelInferRequest(
    ::_pbi::ConstantInitialized)
  : parameters_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , inputs_()
  , outputs_()
  , raw_input_contents_()
  , model_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , model_version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelInferRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequestDefaultTypeInternal() {}
  union {
    ModelInferRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequestDefaultTypeInternal _ModelInferRequest_default_instance_;
PROTOBUF_CONSTEXPR ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal _ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelInferResponse_InferOutputTensor::ModelInferResponse_InferOutputTensor(
    ::_pbi::ConstantInitialized)
  : shape_()
  , _shape_cached_byte_size_(0)
  , parameters_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , datatype_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , contents_(nullptr){}
struct ModelInferResponse_InferOutputTensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferResponse_InferOutputTensorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferResponse_InferOutputTensorDefaultTypeInternal() {}
  union {
    ModelInferResponse_InferOutputTensor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferResponse_InferOutputTensorDefaultTypeInternal _ModelInferResponse_InferOutputTensor_default_instance_;
PROTOBUF_CONSTEXPR ModelInferResponse_ParametersEntry_DoNotUse::ModelInferResponse_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ModelInferResponse_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferResponse_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferResponse_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelInferResponse_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferResponse_ParametersEntry_DoNotUseDefaultTypeInternal _ModelInferResponse_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelInferResponse::ModelInferResponse(
    ::_pbi::ConstantInitialized)
  : parameters_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , outputs_()
  , raw_output_contents_()
  , model_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , model_version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelInferResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferResponseDefaultTypeInternal() {}
  union {
    ModelInferResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferResponseDefaultTypeInternal _ModelInferResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelStreamInferResponse::ModelStreamInferResponse(
    ::_pbi::ConstantInitialized)
  : error_message_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , infer_response_(nullptr){}
struct ModelStreamInferResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelStreamInferResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelStreamInferResponseDefaultTypeInternal() {}
  union {
    ModelStreamInferResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelStreamInferResponseDefaultTypeInternal _ModelStreamInferResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelConfigRequest::ModelConfigRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelConfigRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelConfigRequestDefaultTypeInternal() {}
  union {
    ModelConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelConfigRequestDefaultTypeInternal _ModelConfigRequest_default_instance_;
PROTOBUF_CONSTEXPR ModelConfigResponse::ModelConfigResponse(
    ::_pbi::ConstantInitialized)
  : config_(nullptr){}
struct ModelConfigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelConfigResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelConfigResponseDefaultTypeInternal() {}
  union {
    ModelConfigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelConfigResponseDefaultTypeInternal _ModelConfigResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelStatisticsRequest::ModelStatisticsRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelStatisticsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelStatisticsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelStatisticsRequestDefaultTypeInternal() {}
  union {
    ModelStatisticsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelStatisticsRequestDefaultTypeInternal _ModelStatisticsRequest_default_instance_;
PROTOBUF_CONSTEXPR StatisticDuration::StatisticDuration(
    ::_pbi::ConstantInitialized)
  : count_(uint64_t{0u})
  , ns_(uint64_t{0u}){}
struct StatisticDurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatisticDurationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatisticDurationDefaultTypeInternal() {}
  union {
    StatisticDuration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatisticDurationDefaultTypeInternal _StatisticDuration_default_instance_;
PROTOBUF_CONSTEXPR InferStatistics::InferStatistics(
    ::_pbi::ConstantInitialized)
  : success_(nullptr)
  , fail_(nullptr)
  , queue_(nullptr)
  , compute_input_(nullptr)
  , compute_infer_(nullptr)
  , compute_output_(nullptr)
  , cache_hit_(nullptr)
  , cache_miss_(nullptr){}
struct InferStatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferStatisticsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferStatisticsDefaultTypeInternal() {}
  union {
    InferStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferStatisticsDefaultTypeInternal _InferStatistics_default_instance_;
PROTOBUF_CONSTEXPR InferBatchStatistics::InferBatchStatistics(
    ::_pbi::ConstantInitialized)
  : compute_input_(nullptr)
  , compute_infer_(nullptr)
  , compute_output_(nullptr)
  , batch_size_(uint64_t{0u}){}
struct InferBatchStatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferBatchStatisticsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferBatchStatisticsDefaultTypeInternal() {}
  union {
    InferBatchStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferBatchStatisticsDefaultTypeInternal _InferBatchStatistics_default_instance_;
PROTOBUF_CONSTEXPR ModelStatistics::ModelStatistics(
    ::_pbi::ConstantInitialized)
  : batch_stats_()
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , inference_stats_(nullptr)
  , last_inference_(uint64_t{0u})
  , inference_count_(uint64_t{0u})
  , execution_count_(uint64_t{0u}){}
struct ModelStatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelStatisticsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelStatisticsDefaultTypeInternal() {}
  union {
    ModelStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelStatisticsDefaultTypeInternal _ModelStatistics_default_instance_;
PROTOBUF_CONSTEXPR ModelStatisticsResponse::ModelStatisticsResponse(
    ::_pbi::ConstantInitialized)
  : model_stats_(){}
struct ModelStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelStatisticsResponseDefaultTypeInternal() {}
  union {
    ModelStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelStatisticsResponseDefaultTypeInternal _ModelStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelRepositoryParameter::ModelRepositoryParameter(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct ModelRepositoryParameterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelRepositoryParameterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelRepositoryParameterDefaultTypeInternal() {}
  union {
    ModelRepositoryParameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelRepositoryParameterDefaultTypeInternal _ModelRepositoryParameter_default_instance_;
PROTOBUF_CONSTEXPR RepositoryIndexRequest::RepositoryIndexRequest(
    ::_pbi::ConstantInitialized)
  : repository_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , ready_(false){}
struct RepositoryIndexRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryIndexRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryIndexRequestDefaultTypeInternal() {}
  union {
    RepositoryIndexRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryIndexRequestDefaultTypeInternal _RepositoryIndexRequest_default_instance_;
PROTOBUF_CONSTEXPR RepositoryIndexResponse_ModelIndex::RepositoryIndexResponse_ModelIndex(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , state_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , reason_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RepositoryIndexResponse_ModelIndexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryIndexResponse_ModelIndexDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryIndexResponse_ModelIndexDefaultTypeInternal() {}
  union {
    RepositoryIndexResponse_ModelIndex _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryIndexResponse_ModelIndexDefaultTypeInternal _RepositoryIndexResponse_ModelIndex_default_instance_;
PROTOBUF_CONSTEXPR RepositoryIndexResponse::RepositoryIndexResponse(
    ::_pbi::ConstantInitialized)
  : models_(){}
struct RepositoryIndexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryIndexResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryIndexResponseDefaultTypeInternal() {}
  union {
    RepositoryIndexResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryIndexResponseDefaultTypeInternal _RepositoryIndexResponse_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelLoadRequest_ParametersEntry_DoNotUse::RepositoryModelLoadRequest_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct RepositoryModelLoadRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelLoadRequest_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelLoadRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RepositoryModelLoadRequest_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelLoadRequest_ParametersEntry_DoNotUseDefaultTypeInternal _RepositoryModelLoadRequest_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelLoadRequest::RepositoryModelLoadRequest(
    ::_pbi::ConstantInitialized)
  : parameters_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , repository_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , model_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RepositoryModelLoadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelLoadRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelLoadRequestDefaultTypeInternal() {}
  union {
    RepositoryModelLoadRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelLoadRequestDefaultTypeInternal _RepositoryModelLoadRequest_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelLoadResponse::RepositoryModelLoadResponse(
    ::_pbi::ConstantInitialized){}
struct RepositoryModelLoadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelLoadResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelLoadResponseDefaultTypeInternal() {}
  union {
    RepositoryModelLoadResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelLoadResponseDefaultTypeInternal _RepositoryModelLoadResponse_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct RepositoryModelUnloadRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelUnloadRequest_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelUnloadRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RepositoryModelUnloadRequest_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelUnloadRequest_ParametersEntry_DoNotUseDefaultTypeInternal _RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelUnloadRequest::RepositoryModelUnloadRequest(
    ::_pbi::ConstantInitialized)
  : parameters_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , repository_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , model_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RepositoryModelUnloadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelUnloadRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelUnloadRequestDefaultTypeInternal() {}
  union {
    RepositoryModelUnloadRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelUnloadRequestDefaultTypeInternal _RepositoryModelUnloadRequest_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelUnloadResponse::RepositoryModelUnloadResponse(
    ::_pbi::ConstantInitialized){}
struct RepositoryModelUnloadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelUnloadResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelUnloadResponseDefaultTypeInternal() {}
  union {
    RepositoryModelUnloadResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelUnloadResponseDefaultTypeInternal _RepositoryModelUnloadResponse_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryStatusRequest::SystemSharedMemoryStatusRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct SystemSharedMemoryStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryStatusRequestDefaultTypeInternal() {}
  union {
    SystemSharedMemoryStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryStatusRequestDefaultTypeInternal _SystemSharedMemoryStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponse_RegionStatus::SystemSharedMemoryStatusResponse_RegionStatus(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , key_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , offset_(uint64_t{0u})
  , byte_size_(uint64_t{0u}){}
struct SystemSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal() {}
  union {
    SystemSharedMemoryStatusResponse_RegionStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal _SystemSharedMemoryStatusResponse_RegionStatus_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal _SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponse::SystemSharedMemoryStatusResponse(
    ::_pbi::ConstantInitialized)
  : regions_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct SystemSharedMemoryStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryStatusResponseDefaultTypeInternal() {}
  union {
    SystemSharedMemoryStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryStatusResponseDefaultTypeInternal _SystemSharedMemoryStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryRegisterRequest::SystemSharedMemoryRegisterRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , key_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , offset_(uint64_t{0u})
  , byte_size_(uint64_t{0u}){}
struct SystemSharedMemoryRegisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryRegisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryRegisterRequestDefaultTypeInternal() {}
  union {
    SystemSharedMemoryRegisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryRegisterRequestDefaultTypeInternal _SystemSharedMemoryRegisterRequest_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryRegisterResponse::SystemSharedMemoryRegisterResponse(
    ::_pbi::ConstantInitialized){}
struct SystemSharedMemoryRegisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryRegisterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryRegisterResponseDefaultTypeInternal() {}
  union {
    SystemSharedMemoryRegisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryRegisterResponseDefaultTypeInternal _SystemSharedMemoryRegisterResponse_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryUnregisterRequest::SystemSharedMemoryUnregisterRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct SystemSharedMemoryUnregisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryUnregisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryUnregisterRequestDefaultTypeInternal() {}
  union {
    SystemSharedMemoryUnregisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryUnregisterRequestDefaultTypeInternal _SystemSharedMemoryUnregisterRequest_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryUnregisterResponse::SystemSharedMemoryUnregisterResponse(
    ::_pbi::ConstantInitialized){}
struct SystemSharedMemoryUnregisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryUnregisterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryUnregisterResponseDefaultTypeInternal() {}
  union {
    SystemSharedMemoryUnregisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryUnregisterResponseDefaultTypeInternal _SystemSharedMemoryUnregisterResponse_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryStatusRequest::CudaSharedMemoryStatusRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CudaSharedMemoryStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryStatusRequestDefaultTypeInternal() {}
  union {
    CudaSharedMemoryStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryStatusRequestDefaultTypeInternal _CudaSharedMemoryStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponse_RegionStatus::CudaSharedMemoryStatusResponse_RegionStatus(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , device_id_(uint64_t{0u})
  , byte_size_(uint64_t{0u}){}
struct CudaSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal() {}
  union {
    CudaSharedMemoryStatusResponse_RegionStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal _CudaSharedMemoryStatusResponse_RegionStatus_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal _CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponse::CudaSharedMemoryStatusResponse(
    ::_pbi::ConstantInitialized)
  : regions_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct CudaSharedMemoryStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryStatusResponseDefaultTypeInternal() {}
  union {
    CudaSharedMemoryStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryStatusResponseDefaultTypeInternal _CudaSharedMemoryStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryRegisterRequest::CudaSharedMemoryRegisterRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , raw_handle_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , device_id_(int64_t{0})
  , byte_size_(uint64_t{0u}){}
struct CudaSharedMemoryRegisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryRegisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryRegisterRequestDefaultTypeInternal() {}
  union {
    CudaSharedMemoryRegisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryRegisterRequestDefaultTypeInternal _CudaSharedMemoryRegisterRequest_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryRegisterResponse::CudaSharedMemoryRegisterResponse(
    ::_pbi::ConstantInitialized){}
struct CudaSharedMemoryRegisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryRegisterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryRegisterResponseDefaultTypeInternal() {}
  union {
    CudaSharedMemoryRegisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryRegisterResponseDefaultTypeInternal _CudaSharedMemoryRegisterResponse_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryUnregisterRequest::CudaSharedMemoryUnregisterRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CudaSharedMemoryUnregisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryUnregisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryUnregisterRequestDefaultTypeInternal() {}
  union {
    CudaSharedMemoryUnregisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryUnregisterRequestDefaultTypeInternal _CudaSharedMemoryUnregisterRequest_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryUnregisterResponse::CudaSharedMemoryUnregisterResponse(
    ::_pbi::ConstantInitialized){}
struct CudaSharedMemoryUnregisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryUnregisterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryUnregisterResponseDefaultTypeInternal() {}
  union {
    CudaSharedMemoryUnregisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryUnregisterResponseDefaultTypeInternal _CudaSharedMemoryUnregisterResponse_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingRequest_SettingValue::TraceSettingRequest_SettingValue(
    ::_pbi::ConstantInitialized)
  : value_(){}
struct TraceSettingRequest_SettingValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingRequest_SettingValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingRequest_SettingValueDefaultTypeInternal() {}
  union {
    TraceSettingRequest_SettingValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingRequest_SettingValueDefaultTypeInternal _TraceSettingRequest_SettingValue_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingRequest_SettingsEntry_DoNotUse::TraceSettingRequest_SettingsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TraceSettingRequest_SettingsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingRequest_SettingsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingRequest_SettingsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TraceSettingRequest_SettingsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingRequest_SettingsEntry_DoNotUseDefaultTypeInternal _TraceSettingRequest_SettingsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingRequest::TraceSettingRequest(
    ::_pbi::ConstantInitialized)
  : settings_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , model_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct TraceSettingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingRequestDefaultTypeInternal() {}
  union {
    TraceSettingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingRequestDefaultTypeInternal _TraceSettingRequest_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingResponse_SettingValue::TraceSettingResponse_SettingValue(
    ::_pbi::ConstantInitialized)
  : value_(){}
struct TraceSettingResponse_SettingValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingResponse_SettingValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingResponse_SettingValueDefaultTypeInternal() {}
  union {
    TraceSettingResponse_SettingValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingResponse_SettingValueDefaultTypeInternal _TraceSettingResponse_SettingValue_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingResponse_SettingsEntry_DoNotUse::TraceSettingResponse_SettingsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TraceSettingResponse_SettingsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingResponse_SettingsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingResponse_SettingsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TraceSettingResponse_SettingsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingResponse_SettingsEntry_DoNotUseDefaultTypeInternal _TraceSettingResponse_SettingsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingResponse::TraceSettingResponse(
    ::_pbi::ConstantInitialized)
  : settings_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct TraceSettingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingResponseDefaultTypeInternal() {}
  union {
    TraceSettingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingResponseDefaultTypeInternal _TraceSettingResponse_default_instance_;
}  // namespace proto
}  // namespace hercules
static ::_pb::Metadata file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[64];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_hercules_2fproto_2fhercules_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_hercules_2fproto_2fhercules_5fservice_2eproto = nullptr;

const uint32_t TableStruct_hercules_2fproto_2fhercules_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerLiveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerLiveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerLiveResponse, live_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerReadyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerReadyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerReadyResponse, ready_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelReadyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelReadyRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelReadyRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelReadyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelReadyResponse, ready_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerMetadataResponse, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerMetadataResponse, version_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerMetadataResponse, extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse_TensorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse_TensorMetadata, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse_TensorMetadata, datatype_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse_TensorMetadata, shape_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, versions_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, platform_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, inputs_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, outputs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferParameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferParameter, parameter_choice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, bool_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, int_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, int64_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, uint_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, uint64_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, fp32_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, fp64_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, bytes_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, datatype_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, shape_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, parameters_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor, parameters_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, model_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, model_version_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, id_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, parameters_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, inputs_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, outputs_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, raw_input_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, datatype_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, shape_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, parameters_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, model_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, model_version_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, id_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, parameters_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, outputs_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, raw_output_contents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStreamInferResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStreamInferResponse, error_message_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStreamInferResponse, infer_response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelConfigRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelConfigRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelConfigResponse, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatisticsRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatisticsRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::StatisticDuration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::StatisticDuration, count_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::StatisticDuration, ns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, success_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, fail_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, queue_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, compute_input_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, compute_infer_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, compute_output_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, cache_hit_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, cache_miss_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferBatchStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferBatchStatistics, batch_size_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferBatchStatistics, compute_input_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferBatchStatistics, compute_infer_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferBatchStatistics, compute_output_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, version_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, last_inference_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, inference_count_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, execution_count_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, inference_stats_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, batch_stats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatisticsResponse, model_stats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelRepositoryParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelRepositoryParameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelRepositoryParameter, parameter_choice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexRequest, repository_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexRequest, ready_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse_ModelIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse_ModelIndex, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse_ModelIndex, version_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse_ModelIndex, state_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse_ModelIndex, reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse, models_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest, repository_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest, model_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest, parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest, repository_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest, model_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest, parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus, offset_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus, byte_size_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse, regions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterRequest, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterRequest, offset_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterRequest, byte_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryUnregisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryUnregisterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryUnregisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus, device_id_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus, byte_size_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse, regions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterRequest, raw_handle_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterRequest, device_id_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterRequest, byte_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryUnregisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryUnregisterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryUnregisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingValue, value_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest, settings_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest, model_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingValue, value_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse, settings_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::hercules::proto::ServerLiveRequest)},
  { 6, -1, -1, sizeof(::hercules::proto::ServerLiveResponse)},
  { 13, -1, -1, sizeof(::hercules::proto::ServerReadyRequest)},
  { 19, -1, -1, sizeof(::hercules::proto::ServerReadyResponse)},
  { 26, -1, -1, sizeof(::hercules::proto::ModelReadyRequest)},
  { 34, -1, -1, sizeof(::hercules::proto::ModelReadyResponse)},
  { 41, -1, -1, sizeof(::hercules::proto::ServerMetadataRequest)},
  { 47, -1, -1, sizeof(::hercules::proto::ServerMetadataResponse)},
  { 56, -1, -1, sizeof(::hercules::proto::ModelMetadataRequest)},
  { 64, -1, -1, sizeof(::hercules::proto::ModelMetadataResponse_TensorMetadata)},
  { 73, -1, -1, sizeof(::hercules::proto::ModelMetadataResponse)},
  { 84, -1, -1, sizeof(::hercules::proto::InferParameter)},
  { 94, -1, -1, sizeof(::hercules::proto::InferTensorContents)},
  { 108, 116, -1, sizeof(::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse)},
  { 118, -1, -1, sizeof(::hercules::proto::ModelInferRequest_InferInputTensor)},
  { 129, 137, -1, sizeof(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse)},
  { 139, -1, -1, sizeof(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor)},
  { 147, 155, -1, sizeof(::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse)},
  { 157, -1, -1, sizeof(::hercules::proto::ModelInferRequest)},
  { 170, 178, -1, sizeof(::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse)},
  { 180, -1, -1, sizeof(::hercules::proto::ModelInferResponse_InferOutputTensor)},
  { 191, 199, -1, sizeof(::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse)},
  { 201, -1, -1, sizeof(::hercules::proto::ModelInferResponse)},
  { 213, -1, -1, sizeof(::hercules::proto::ModelStreamInferResponse)},
  { 221, -1, -1, sizeof(::hercules::proto::ModelConfigRequest)},
  { 229, -1, -1, sizeof(::hercules::proto::ModelConfigResponse)},
  { 236, -1, -1, sizeof(::hercules::proto::ModelStatisticsRequest)},
  { 244, -1, -1, sizeof(::hercules::proto::StatisticDuration)},
  { 252, -1, -1, sizeof(::hercules::proto::InferStatistics)},
  { 266, -1, -1, sizeof(::hercules::proto::InferBatchStatistics)},
  { 276, -1, -1, sizeof(::hercules::proto::ModelStatistics)},
  { 289, -1, -1, sizeof(::hercules::proto::ModelStatisticsResponse)},
  { 296, -1, -1, sizeof(::hercules::proto::ModelRepositoryParameter)},
  { 307, -1, -1, sizeof(::hercules::proto::RepositoryIndexRequest)},
  { 315, -1, -1, sizeof(::hercules::proto::RepositoryIndexResponse_ModelIndex)},
  { 325, -1, -1, sizeof(::hercules::proto::RepositoryIndexResponse)},
  { 332, 340, -1, sizeof(::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse)},
  { 342, -1, -1, sizeof(::hercules::proto::RepositoryModelLoadRequest)},
  { 351, -1, -1, sizeof(::hercules::proto::RepositoryModelLoadResponse)},
  { 357, 365, -1, sizeof(::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse)},
  { 367, -1, -1, sizeof(::hercules::proto::RepositoryModelUnloadRequest)},
  { 376, -1, -1, sizeof(::hercules::proto::RepositoryModelUnloadResponse)},
  { 382, -1, -1, sizeof(::hercules::proto::SystemSharedMemoryStatusRequest)},
  { 389, -1, -1, sizeof(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus)},
  { 399, 407, -1, sizeof(::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse)},
  { 409, -1, -1, sizeof(::hercules::proto::SystemSharedMemoryStatusResponse)},
  { 416, -1, -1, sizeof(::hercules::proto::SystemSharedMemoryRegisterRequest)},
  { 426, -1, -1, sizeof(::hercules::proto::SystemSharedMemoryRegisterResponse)},
  { 432, -1, -1, sizeof(::hercules::proto::SystemSharedMemoryUnregisterRequest)},
  { 439, -1, -1, sizeof(::hercules::proto::SystemSharedMemoryUnregisterResponse)},
  { 445, -1, -1, sizeof(::hercules::proto::CudaSharedMemoryStatusRequest)},
  { 452, -1, -1, sizeof(::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus)},
  { 461, 469, -1, sizeof(::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse)},
  { 471, -1, -1, sizeof(::hercules::proto::CudaSharedMemoryStatusResponse)},
  { 478, -1, -1, sizeof(::hercules::proto::CudaSharedMemoryRegisterRequest)},
  { 488, -1, -1, sizeof(::hercules::proto::CudaSharedMemoryRegisterResponse)},
  { 494, -1, -1, sizeof(::hercules::proto::CudaSharedMemoryUnregisterRequest)},
  { 501, -1, -1, sizeof(::hercules::proto::CudaSharedMemoryUnregisterResponse)},
  { 507, -1, -1, sizeof(::hercules::proto::TraceSettingRequest_SettingValue)},
  { 514, 522, -1, sizeof(::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse)},
  { 524, -1, -1, sizeof(::hercules::proto::TraceSettingRequest)},
  { 532, -1, -1, sizeof(::hercules::proto::TraceSettingResponse_SettingValue)},
  { 539, 547, -1, sizeof(::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse)},
  { 549, -1, -1, sizeof(::hercules::proto::TraceSettingResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::hercules::proto::_ServerLiveRequest_default_instance_._instance,
  &::hercules::proto::_ServerLiveResponse_default_instance_._instance,
  &::hercules::proto::_ServerReadyRequest_default_instance_._instance,
  &::hercules::proto::_ServerReadyResponse_default_instance_._instance,
  &::hercules::proto::_ModelReadyRequest_default_instance_._instance,
  &::hercules::proto::_ModelReadyResponse_default_instance_._instance,
  &::hercules::proto::_ServerMetadataRequest_default_instance_._instance,
  &::hercules::proto::_ServerMetadataResponse_default_instance_._instance,
  &::hercules::proto::_ModelMetadataRequest_default_instance_._instance,
  &::hercules::proto::_ModelMetadataResponse_TensorMetadata_default_instance_._instance,
  &::hercules::proto::_ModelMetadataResponse_default_instance_._instance,
  &::hercules::proto::_InferParameter_default_instance_._instance,
  &::hercules::proto::_InferTensorContents_default_instance_._instance,
  &::hercules::proto::_ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_ModelInferRequest_InferInputTensor_default_instance_._instance,
  &::hercules::proto::_ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_ModelInferRequest_InferRequestedOutputTensor_default_instance_._instance,
  &::hercules::proto::_ModelInferRequest_ParametersEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_ModelInferRequest_default_instance_._instance,
  &::hercules::proto::_ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_ModelInferResponse_InferOutputTensor_default_instance_._instance,
  &::hercules::proto::_ModelInferResponse_ParametersEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_ModelInferResponse_default_instance_._instance,
  &::hercules::proto::_ModelStreamInferResponse_default_instance_._instance,
  &::hercules::proto::_ModelConfigRequest_default_instance_._instance,
  &::hercules::proto::_ModelConfigResponse_default_instance_._instance,
  &::hercules::proto::_ModelStatisticsRequest_default_instance_._instance,
  &::hercules::proto::_StatisticDuration_default_instance_._instance,
  &::hercules::proto::_InferStatistics_default_instance_._instance,
  &::hercules::proto::_InferBatchStatistics_default_instance_._instance,
  &::hercules::proto::_ModelStatistics_default_instance_._instance,
  &::hercules::proto::_ModelStatisticsResponse_default_instance_._instance,
  &::hercules::proto::_ModelRepositoryParameter_default_instance_._instance,
  &::hercules::proto::_RepositoryIndexRequest_default_instance_._instance,
  &::hercules::proto::_RepositoryIndexResponse_ModelIndex_default_instance_._instance,
  &::hercules::proto::_RepositoryIndexResponse_default_instance_._instance,
  &::hercules::proto::_RepositoryModelLoadRequest_ParametersEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_RepositoryModelLoadRequest_default_instance_._instance,
  &::hercules::proto::_RepositoryModelLoadResponse_default_instance_._instance,
  &::hercules::proto::_RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_RepositoryModelUnloadRequest_default_instance_._instance,
  &::hercules::proto::_RepositoryModelUnloadResponse_default_instance_._instance,
  &::hercules::proto::_SystemSharedMemoryStatusRequest_default_instance_._instance,
  &::hercules::proto::_SystemSharedMemoryStatusResponse_RegionStatus_default_instance_._instance,
  &::hercules::proto::_SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_SystemSharedMemoryStatusResponse_default_instance_._instance,
  &::hercules::proto::_SystemSharedMemoryRegisterRequest_default_instance_._instance,
  &::hercules::proto::_SystemSharedMemoryRegisterResponse_default_instance_._instance,
  &::hercules::proto::_SystemSharedMemoryUnregisterRequest_default_instance_._instance,
  &::hercules::proto::_SystemSharedMemoryUnregisterResponse_default_instance_._instance,
  &::hercules::proto::_CudaSharedMemoryStatusRequest_default_instance_._instance,
  &::hercules::proto::_CudaSharedMemoryStatusResponse_RegionStatus_default_instance_._instance,
  &::hercules::proto::_CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_CudaSharedMemoryStatusResponse_default_instance_._instance,
  &::hercules::proto::_CudaSharedMemoryRegisterRequest_default_instance_._instance,
  &::hercules::proto::_CudaSharedMemoryRegisterResponse_default_instance_._instance,
  &::hercules::proto::_CudaSharedMemoryUnregisterRequest_default_instance_._instance,
  &::hercules::proto::_CudaSharedMemoryUnregisterResponse_default_instance_._instance,
  &::hercules::proto::_TraceSettingRequest_SettingValue_default_instance_._instance,
  &::hercules::proto::_TraceSettingRequest_SettingsEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_TraceSettingRequest_default_instance_._instance,
  &::hercules::proto::_TraceSettingResponse_SettingValue_default_instance_._instance,
  &::hercules::proto::_TraceSettingResponse_SettingsEntry_DoNotUse_default_instance_._instance,
  &::hercules::proto::_TraceSettingResponse_default_instance_._instance,
};

const char descriptor_table_protodef_hercules_2fproto_2fhercules_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%hercules/proto/hercules_service.proto\022"
  "\016hercules.proto\032!hercules/proto/model_co"
  "nfig.proto\"\023\n\021ServerLiveRequest\"\"\n\022Serve"
  "rLiveResponse\022\014\n\004live\030\001 \001(\010\"\024\n\022ServerRea"
  "dyRequest\"$\n\023ServerReadyResponse\022\r\n\005read"
  "y\030\001 \001(\010\"2\n\021ModelReadyRequest\022\014\n\004name\030\001 \001"
  "(\t\022\017\n\007version\030\002 \001(\t\"#\n\022ModelReadyRespons"
  "e\022\r\n\005ready\030\001 \001(\010\"\027\n\025ServerMetadataReques"
  "t\"K\n\026ServerMetadataResponse\022\014\n\004name\030\001 \001("
  "\t\022\017\n\007version\030\002 \001(\t\022\022\n\nextensions\030\003 \003(\t\"5"
  "\n\024ModelMetadataRequest\022\014\n\004name\030\001 \001(\t\022\017\n\007"
  "version\030\002 \001(\t\"\227\002\n\025ModelMetadataResponse\022"
  "\014\n\004name\030\001 \001(\t\022\020\n\010versions\030\002 \003(\t\022\020\n\010platf"
  "orm\030\003 \001(\t\022D\n\006inputs\030\004 \003(\01324.hercules.pro"
  "to.ModelMetadataResponse.TensorMetadata\022"
  "E\n\007outputs\030\005 \003(\01324.hercules.proto.ModelM"
  "etadataResponse.TensorMetadata\032\?\n\016Tensor"
  "Metadata\022\014\n\004name\030\001 \001(\t\022\020\n\010datatype\030\002 \001(\t"
  "\022\r\n\005shape\030\003 \003(\003\"i\n\016InferParameter\022\024\n\nboo"
  "l_param\030\001 \001(\010H\000\022\025\n\013int64_param\030\002 \001(\003H\000\022\026"
  "\n\014string_param\030\003 \001(\tH\000B\022\n\020parameter_choi"
  "ce\"\320\001\n\023InferTensorContents\022\025\n\rbool_conte"
  "nts\030\001 \003(\010\022\024\n\014int_contents\030\002 \003(\005\022\026\n\016int64"
  "_contents\030\003 \003(\003\022\025\n\ruint_contents\030\004 \003(\r\022\027"
  "\n\017uint64_contents\030\005 \003(\004\022\025\n\rfp32_contents"
  "\030\006 \003(\002\022\025\n\rfp64_contents\030\007 \003(\001\022\026\n\016bytes_c"
  "ontents\030\010 \003(\014\"\233\007\n\021ModelInferRequest\022\022\n\nm"
  "odel_name\030\001 \001(\t\022\025\n\rmodel_version\030\002 \001(\t\022\n"
  "\n\002id\030\003 \001(\t\022E\n\nparameters\030\004 \003(\01321.hercule"
  "s.proto.ModelInferRequest.ParametersEntr"
  "y\022B\n\006inputs\030\005 \003(\01322.hercules.proto.Model"
  "InferRequest.InferInputTensor\022M\n\007outputs"
  "\030\006 \003(\0132<.hercules.proto.ModelInferReques"
  "t.InferRequestedOutputTensor\022\032\n\022raw_inpu"
  "t_contents\030\007 \003(\014\032\243\002\n\020InferInputTensor\022\014\n"
  "\004name\030\001 \001(\t\022\020\n\010datatype\030\002 \001(\t\022\r\n\005shape\030\003"
  " \003(\003\022V\n\nparameters\030\004 \003(\0132B.hercules.prot"
  "o.ModelInferRequest.InferInputTensor.Par"
  "ametersEntry\0225\n\010contents\030\005 \001(\0132#.hercule"
  "s.proto.InferTensorContents\032Q\n\017Parameter"
  "sEntry\022\013\n\003key\030\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.her"
  "cules.proto.InferParameter:\0028\001\032\337\001\n\032Infer"
  "RequestedOutputTensor\022\014\n\004name\030\001 \001(\t\022`\n\np"
  "arameters\030\002 \003(\0132L.hercules.proto.ModelIn"
  "ferRequest.InferRequestedOutputTensor.Pa"
  "rametersEntry\032Q\n\017ParametersEntry\022\013\n\003key\030"
  "\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.hercules.proto.In"
  "ferParameter:\0028\001\032Q\n\017ParametersEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.hercules.proto"
  ".InferParameter:\0028\001\"\363\004\n\022ModelInferRespon"
  "se\022\022\n\nmodel_name\030\001 \001(\t\022\025\n\rmodel_version\030"
  "\002 \001(\t\022\n\n\002id\030\003 \001(\t\022F\n\nparameters\030\004 \003(\01322."
  "hercules.proto.ModelInferResponse.Parame"
  "tersEntry\022E\n\007outputs\030\005 \003(\01324.hercules.pr"
  "oto.ModelInferResponse.InferOutputTensor"
  "\022\033\n\023raw_output_contents\030\006 \003(\014\032\246\002\n\021InferO"
  "utputTensor\022\014\n\004name\030\001 \001(\t\022\020\n\010datatype\030\002 "
  "\001(\t\022\r\n\005shape\030\003 \003(\003\022X\n\nparameters\030\004 \003(\0132D"
  ".hercules.proto.ModelInferResponse.Infer"
  "OutputTensor.ParametersEntry\0225\n\010contents"
  "\030\005 \001(\0132#.hercules.proto.InferTensorConte"
  "nts\032Q\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\022-\n\005v"
  "alue\030\002 \001(\0132\036.hercules.proto.InferParamet"
  "er:\0028\001\032Q\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\022-"
  "\n\005value\030\002 \001(\0132\036.hercules.proto.InferPara"
  "meter:\0028\001\"m\n\030ModelStreamInferResponse\022\025\n"
  "\rerror_message\030\001 \001(\t\022:\n\016infer_response\030\002"
  " \001(\0132\".hercules.proto.ModelInferResponse"
  "\"3\n\022ModelConfigRequest\022\014\n\004name\030\001 \001(\t\022\017\n\007"
  "version\030\002 \001(\t\"B\n\023ModelConfigResponse\022+\n\006"
  "config\030\001 \001(\0132\033.hercules.proto.ModelConfi"
  "g\"7\n\026ModelStatisticsRequest\022\014\n\004name\030\001 \001("
  "\t\022\017\n\007version\030\002 \001(\t\".\n\021StatisticDuration\022"
  "\r\n\005count\030\001 \001(\004\022\n\n\002ns\030\002 \001(\004\"\304\003\n\017InferStat"
  "istics\0222\n\007success\030\001 \001(\0132!.hercules.proto"
  ".StatisticDuration\022/\n\004fail\030\002 \001(\0132!.hercu"
  "les.proto.StatisticDuration\0220\n\005queue\030\003 \001"
  "(\0132!.hercules.proto.StatisticDuration\0228\n"
  "\rcompute_input\030\004 \001(\0132!.hercules.proto.St"
  "atisticDuration\0228\n\rcompute_infer\030\005 \001(\0132!"
  ".hercules.proto.StatisticDuration\0229\n\016com"
  "pute_output\030\006 \001(\0132!.hercules.proto.Stati"
  "sticDuration\0224\n\tcache_hit\030\007 \001(\0132!.hercul"
  "es.proto.StatisticDuration\0225\n\ncache_miss"
  "\030\010 \001(\0132!.hercules.proto.StatisticDuratio"
  "n\"\331\001\n\024InferBatchStatistics\022\022\n\nbatch_size"
  "\030\001 \001(\004\0228\n\rcompute_input\030\002 \001(\0132!.hercules"
  ".proto.StatisticDuration\0228\n\rcompute_infe"
  "r\030\003 \001(\0132!.hercules.proto.StatisticDurati"
  "on\0229\n\016compute_output\030\004 \001(\0132!.hercules.pr"
  "oto.StatisticDuration\"\357\001\n\017ModelStatistic"
  "s\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\022\026\n\016last"
  "_inference\030\003 \001(\004\022\027\n\017inference_count\030\004 \001("
  "\004\022\027\n\017execution_count\030\005 \001(\004\0228\n\017inference_"
  "stats\030\006 \001(\0132\037.hercules.proto.InferStatis"
  "tics\0229\n\013batch_stats\030\007 \003(\0132$.hercules.pro"
  "to.InferBatchStatistics\"O\n\027ModelStatisti"
  "csResponse\0224\n\013model_stats\030\001 \003(\0132\037.hercul"
  "es.proto.ModelStatistics\"\212\001\n\030ModelReposi"
  "toryParameter\022\024\n\nbool_param\030\001 \001(\010H\000\022\025\n\013i"
  "nt64_param\030\002 \001(\003H\000\022\026\n\014string_param\030\003 \001(\t"
  "H\000\022\025\n\013bytes_param\030\004 \001(\014H\000B\022\n\020parameter_c"
  "hoice\"@\n\026RepositoryIndexRequest\022\027\n\017repos"
  "itory_name\030\001 \001(\t\022\r\n\005ready\030\002 \001(\010\"\251\001\n\027Repo"
  "sitoryIndexResponse\022B\n\006models\030\001 \003(\01322.he"
  "rcules.proto.RepositoryIndexResponse.Mod"
  "elIndex\032J\n\nModelIndex\022\014\n\004name\030\001 \001(\t\022\017\n\007v"
  "ersion\030\002 \001(\t\022\r\n\005state\030\003 \001(\t\022\016\n\006reason\030\004 "
  "\001(\t\"\366\001\n\032RepositoryModelLoadRequest\022\027\n\017re"
  "pository_name\030\001 \001(\t\022\022\n\nmodel_name\030\002 \001(\t\022"
  "N\n\nparameters\030\003 \003(\0132:.hercules.proto.Rep"
  "ositoryModelLoadRequest.ParametersEntry\032"
  "[\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\0227\n\005value"
  "\030\002 \001(\0132(.hercules.proto.ModelRepositoryP"
  "arameter:\0028\001\"\035\n\033RepositoryModelLoadRespo"
  "nse\"\372\001\n\034RepositoryModelUnloadRequest\022\027\n\017"
  "repository_name\030\001 \001(\t\022\022\n\nmodel_name\030\002 \001("
  "\t\022P\n\nparameters\030\003 \003(\0132<.hercules.proto.R"
  "epositoryModelUnloadRequest.ParametersEn"
  "try\032[\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\0227\n\005v"
  "alue\030\002 \001(\0132(.hercules.proto.ModelReposit"
  "oryParameter:\0028\001\"\037\n\035RepositoryModelUnloa"
  "dResponse\"/\n\037SystemSharedMemoryStatusReq"
  "uest\022\014\n\004name\030\001 \001(\t\"\257\002\n SystemSharedMemor"
  "yStatusResponse\022N\n\007regions\030\001 \003(\0132=.hercu"
  "les.proto.SystemSharedMemoryStatusRespon"
  "se.RegionsEntry\032L\n\014RegionStatus\022\014\n\004name\030"
  "\001 \001(\t\022\013\n\003key\030\002 \001(\t\022\016\n\006offset\030\003 \001(\004\022\021\n\tby"
  "te_size\030\004 \001(\004\032m\n\014RegionsEntry\022\013\n\003key\030\001 \001"
  "(\t\022L\n\005value\030\002 \001(\0132=.hercules.proto.Syste"
  "mSharedMemoryStatusResponse.RegionStatus"
  ":\0028\001\"a\n!SystemSharedMemoryRegisterReques"
  "t\022\014\n\004name\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022\016\n\006offset\030\003"
  " \001(\004\022\021\n\tbyte_size\030\004 \001(\004\"$\n\"SystemSharedM"
  "emoryRegisterResponse\"3\n#SystemSharedMem"
  "oryUnregisterRequest\022\014\n\004name\030\001 \001(\t\"&\n$Sy"
  "stemSharedMemoryUnregisterResponse\"-\n\035Cu"
  "daSharedMemoryStatusRequest\022\014\n\004name\030\001 \001("
  "\t\"\237\002\n\036CudaSharedMemoryStatusResponse\022L\n\007"
  "regions\030\001 \003(\0132;.hercules.proto.CudaShare"
  "dMemoryStatusResponse.RegionsEntry\032B\n\014Re"
  "gionStatus\022\014\n\004name\030\001 \001(\t\022\021\n\tdevice_id\030\002 "
  "\001(\004\022\021\n\tbyte_size\030\003 \001(\004\032k\n\014RegionsEntry\022\013"
  "\n\003key\030\001 \001(\t\022J\n\005value\030\002 \001(\0132;.hercules.pr"
  "oto.CudaSharedMemoryStatusResponse.Regio"
  "nStatus:\0028\001\"i\n\037CudaSharedMemoryRegisterR"
  "equest\022\014\n\004name\030\001 \001(\t\022\022\n\nraw_handle\030\002 \001(\014"
  "\022\021\n\tdevice_id\030\003 \001(\003\022\021\n\tbyte_size\030\004 \001(\004\"\""
  "\n CudaSharedMemoryRegisterResponse\"1\n!Cu"
  "daSharedMemoryUnregisterRequest\022\014\n\004name\030"
  "\001 \001(\t\"$\n\"CudaSharedMemoryUnregisterRespo"
  "nse\"\360\001\n\023TraceSettingRequest\022C\n\010settings\030"
  "\001 \003(\01321.hercules.proto.TraceSettingReque"
  "st.SettingsEntry\022\022\n\nmodel_name\030\002 \001(\t\032\035\n\014"
  "SettingValue\022\r\n\005value\030\001 \003(\t\032a\n\rSettingsE"
  "ntry\022\013\n\003key\030\001 \001(\t\022\?\n\005value\030\002 \001(\01320.hercu"
  "les.proto.TraceSettingRequest.SettingVal"
  "ue:\0028\001\"\337\001\n\024TraceSettingResponse\022D\n\010setti"
  "ngs\030\001 \003(\01322.hercules.proto.TraceSettingR"
  "esponse.SettingsEntry\032\035\n\014SettingValue\022\r\n"
  "\005value\030\001 \003(\t\032b\n\rSettingsEntry\022\013\n\003key\030\001 \001"
  "(\t\022@\n\005value\030\002 \001(\01321.hercules.proto.Trace"
  "SettingResponse.SettingValue:\0028\0012\247\020\n\024GRP"
  "CInferenceService\022U\n\nServerLive\022!.hercul"
  "es.proto.ServerLiveRequest\032\".hercules.pr"
  "oto.ServerLiveResponse\"\000\022X\n\013ServerReady\022"
  "\".hercules.proto.ServerReadyRequest\032#.he"
  "rcules.proto.ServerReadyResponse\"\000\022U\n\nMo"
  "delReady\022!.hercules.proto.ModelReadyRequ"
  "est\032\".hercules.proto.ModelReadyResponse\""
  "\000\022a\n\016ServerMetadata\022%.hercules.proto.Ser"
  "verMetadataRequest\032&.hercules.proto.Serv"
  "erMetadataResponse\"\000\022^\n\rModelMetadata\022$."
  "hercules.proto.ModelMetadataRequest\032%.he"
  "rcules.proto.ModelMetadataResponse\"\000\022U\n\n"
  "ModelInfer\022!.hercules.proto.ModelInferRe"
  "quest\032\".hercules.proto.ModelInferRespons"
  "e\"\000\022e\n\020ModelStreamInfer\022!.hercules.proto"
  ".ModelInferRequest\032(.hercules.proto.Mode"
  "lStreamInferResponse\"\000(\0010\001\022X\n\013ModelConfi"
  "g\022\".hercules.proto.ModelConfigRequest\032#."
  "hercules.proto.ModelConfigResponse\"\000\022d\n\017"
  "ModelStatistics\022&.hercules.proto.ModelSt"
  "atisticsRequest\032\'.hercules.proto.ModelSt"
  "atisticsResponse\"\000\022d\n\017RepositoryIndex\022&."
  "hercules.proto.RepositoryIndexRequest\032\'."
  "hercules.proto.RepositoryIndexResponse\"\000"
  "\022p\n\023RepositoryModelLoad\022*.hercules.proto"
  ".RepositoryModelLoadRequest\032+.hercules.p"
  "roto.RepositoryModelLoadResponse\"\000\022v\n\025Re"
  "positoryModelUnload\022,.hercules.proto.Rep"
  "ositoryModelUnloadRequest\032-.hercules.pro"
  "to.RepositoryModelUnloadResponse\"\000\022\177\n\030Sy"
  "stemSharedMemoryStatus\022/.hercules.proto."
  "SystemSharedMemoryStatusRequest\0320.hercul"
  "es.proto.SystemSharedMemoryStatusRespons"
  "e\"\000\022\205\001\n\032SystemSharedMemoryRegister\0221.her"
  "cules.proto.SystemSharedMemoryRegisterRe"
  "quest\0322.hercules.proto.SystemSharedMemor"
  "yRegisterResponse\"\000\022\213\001\n\034SystemSharedMemo"
  "ryUnregister\0223.hercules.proto.SystemShar"
  "edMemoryUnregisterRequest\0324.hercules.pro"
  "to.SystemSharedMemoryUnregisterResponse\""
  "\000\022y\n\026CudaSharedMemoryStatus\022-.hercules.p"
  "roto.CudaSharedMemoryStatusRequest\032..her"
  "cules.proto.CudaSharedMemoryStatusRespon"
  "se\"\000\022\177\n\030CudaSharedMemoryRegister\022/.hercu"
  "les.proto.CudaSharedMemoryRegisterReques"
  "t\0320.hercules.proto.CudaSharedMemoryRegis"
  "terResponse\"\000\022\205\001\n\032CudaSharedMemoryUnregi"
  "ster\0221.hercules.proto.CudaSharedMemoryUn"
  "registerRequest\0322.hercules.proto.CudaSha"
  "redMemoryUnregisterResponse\"\000\022[\n\014TraceSe"
  "tting\022#.hercules.proto.TraceSettingReque"
  "st\032$.hercules.proto.TraceSettingResponse"
  "\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_deps[1] = {
  &::descriptor_table_hercules_2fproto_2fmodel_5fconfig_2eproto,
};
static ::_pbi::once_flag descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto = {
    false, false, 8610, descriptor_table_protodef_hercules_2fproto_2fhercules_5fservice_2eproto,
    "hercules/proto/hercules_service.proto",
    &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once, descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_deps, 1, 64,
    schemas, file_default_instances, TableStruct_hercules_2fproto_2fhercules_5fservice_2eproto::offsets,
    file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto, file_level_enum_descriptors_hercules_2fproto_2fhercules_5fservice_2eproto,
    file_level_service_descriptors_hercules_2fproto_2fhercules_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter() {
  return &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_hercules_2fproto_2fhercules_5fservice_2eproto(&descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto);
namespace hercules {
namespace proto {

// ===================================================================

class ServerLiveRequest::_Internal {
 public:
};

ServerLiveRequest::ServerLiveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerLiveRequest)
}
ServerLiveRequest::ServerLiveRequest(const ServerLiveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerLiveRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerLiveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerLiveRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ServerLiveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[0]);
}

// ===================================================================

class ServerLiveResponse::_Internal {
 public:
};

ServerLiveResponse::ServerLiveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerLiveResponse)
}
ServerLiveResponse::ServerLiveResponse(const ServerLiveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  live_ = from.live_;
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerLiveResponse)
}

inline void ServerLiveResponse::SharedCtor() {
live_ = false;
}

ServerLiveResponse::~ServerLiveResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ServerLiveResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServerLiveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ServerLiveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerLiveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ServerLiveResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  live_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerLiveResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool live = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          live_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServerLiveResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ServerLiveResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool live = 1;
  if (this->_internal_live() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_live(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ServerLiveResponse)
  return target;
}

size_t ServerLiveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ServerLiveResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool live = 1;
  if (this->_internal_live() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerLiveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ServerLiveResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerLiveResponse::GetClassData() const { return &_class_data_; }

void ServerLiveResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ServerLiveResponse *>(to)->MergeFrom(
      static_cast<const ServerLiveResponse &>(from));
}


void ServerLiveResponse::MergeFrom(const ServerLiveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ServerLiveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_live() != 0) {
    _internal_set_live(from._internal_live());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServerLiveResponse::CopyFrom(const ServerLiveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ServerLiveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerLiveResponse::IsInitialized() const {
  return true;
}

void ServerLiveResponse::InternalSwap(ServerLiveResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(live_, other->live_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerLiveResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[1]);
}

// ===================================================================

class ServerReadyRequest::_Internal {
 public:
};

ServerReadyRequest::ServerReadyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerReadyRequest)
}
ServerReadyRequest::ServerReadyRequest(const ServerReadyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerReadyRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerReadyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerReadyRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ServerReadyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[2]);
}

// ===================================================================

class ServerReadyResponse::_Internal {
 public:
};

ServerReadyResponse::ServerReadyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerReadyResponse)
}
ServerReadyResponse::ServerReadyResponse(const ServerReadyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ready_ = from.ready_;
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerReadyResponse)
}

inline void ServerReadyResponse::SharedCtor() {
ready_ = false;
}

ServerReadyResponse::~ServerReadyResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ServerReadyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServerReadyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ServerReadyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerReadyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ServerReadyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ready_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerReadyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ready = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServerReadyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ServerReadyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->_internal_ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ready(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ServerReadyResponse)
  return target;
}

size_t ServerReadyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ServerReadyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->_internal_ready() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerReadyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ServerReadyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerReadyResponse::GetClassData() const { return &_class_data_; }

void ServerReadyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ServerReadyResponse *>(to)->MergeFrom(
      static_cast<const ServerReadyResponse &>(from));
}


void ServerReadyResponse::MergeFrom(const ServerReadyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ServerReadyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ready() != 0) {
    _internal_set_ready(from._internal_ready());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServerReadyResponse::CopyFrom(const ServerReadyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ServerReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReadyResponse::IsInitialized() const {
  return true;
}

void ServerReadyResponse::InternalSwap(ServerReadyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ready_, other->ready_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerReadyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[3]);
}

// ===================================================================

class ModelReadyRequest::_Internal {
 public:
};

ModelReadyRequest::ModelReadyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelReadyRequest)
}
ModelReadyRequest::ModelReadyRequest(const ModelReadyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelReadyRequest)
}

inline void ModelReadyRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelReadyRequest::~ModelReadyRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelReadyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelReadyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  version_.Destroy();
}

void ModelReadyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelReadyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelReadyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelReadyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelReadyRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelReadyRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelReadyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelReadyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelReadyRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelReadyRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelReadyRequest)
  return target;
}

size_t ModelReadyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelReadyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelReadyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelReadyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelReadyRequest::GetClassData() const { return &_class_data_; }

void ModelReadyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelReadyRequest *>(to)->MergeFrom(
      static_cast<const ModelReadyRequest &>(from));
}


void ModelReadyRequest::MergeFrom(const ModelReadyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelReadyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelReadyRequest::CopyFrom(const ModelReadyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelReadyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelReadyRequest::IsInitialized() const {
  return true;
}

void ModelReadyRequest::InternalSwap(ModelReadyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelReadyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[4]);
}

// ===================================================================

class ModelReadyResponse::_Internal {
 public:
};

ModelReadyResponse::ModelReadyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelReadyResponse)
}
ModelReadyResponse::ModelReadyResponse(const ModelReadyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ready_ = from.ready_;
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelReadyResponse)
}

inline void ModelReadyResponse::SharedCtor() {
ready_ = false;
}

ModelReadyResponse::~ModelReadyResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelReadyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelReadyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModelReadyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelReadyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelReadyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ready_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelReadyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ready = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelReadyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelReadyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->_internal_ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ready(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelReadyResponse)
  return target;
}

size_t ModelReadyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelReadyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->_internal_ready() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelReadyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelReadyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelReadyResponse::GetClassData() const { return &_class_data_; }

void ModelReadyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelReadyResponse *>(to)->MergeFrom(
      static_cast<const ModelReadyResponse &>(from));
}


void ModelReadyResponse::MergeFrom(const ModelReadyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelReadyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ready() != 0) {
    _internal_set_ready(from._internal_ready());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelReadyResponse::CopyFrom(const ModelReadyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelReadyResponse::IsInitialized() const {
  return true;
}

void ModelReadyResponse::InternalSwap(ModelReadyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ready_, other->ready_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelReadyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[5]);
}

// ===================================================================

class ServerMetadataRequest::_Internal {
 public:
};

ServerMetadataRequest::ServerMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerMetadataRequest)
}
ServerMetadataRequest::ServerMetadataRequest(const ServerMetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerMetadataRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerMetadataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerMetadataRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ServerMetadataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[6]);
}

// ===================================================================

class ServerMetadataResponse::_Internal {
 public:
};

ServerMetadataResponse::ServerMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  extensions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerMetadataResponse)
}
ServerMetadataResponse::ServerMetadataResponse(const ServerMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      extensions_(from.extensions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerMetadataResponse)
}

inline void ServerMetadataResponse::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ServerMetadataResponse::~ServerMetadataResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ServerMetadataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServerMetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  version_.Destroy();
}

void ServerMetadataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ServerMetadataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extensions_.Clear();
  name_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMetadataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ServerMetadataResponse.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ServerMetadataResponse.version"));
        } else
          goto handle_unusual;
        continue;
      // repeated string extensions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_extensions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ServerMetadataResponse.extensions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServerMetadataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ServerMetadataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ServerMetadataResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ServerMetadataResponse.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // repeated string extensions = 3;
  for (int i = 0, n = this->_internal_extensions_size(); i < n; i++) {
    const auto& s = this->_internal_extensions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ServerMetadataResponse.extensions");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ServerMetadataResponse)
  return target;
}

size_t ServerMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ServerMetadataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string extensions = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(extensions_.size());
  for (int i = 0, n = extensions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      extensions_.Get(i));
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerMetadataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ServerMetadataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerMetadataResponse::GetClassData() const { return &_class_data_; }

void ServerMetadataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ServerMetadataResponse *>(to)->MergeFrom(
      static_cast<const ServerMetadataResponse &>(from));
}


void ServerMetadataResponse::MergeFrom(const ServerMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ServerMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  extensions_.MergeFrom(from.extensions_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServerMetadataResponse::CopyFrom(const ServerMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ServerMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMetadataResponse::IsInitialized() const {
  return true;
}

void ServerMetadataResponse::InternalSwap(ServerMetadataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  extensions_.InternalSwap(&other->extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMetadataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[7]);
}

// ===================================================================

class ModelMetadataRequest::_Internal {
 public:
};

ModelMetadataRequest::ModelMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelMetadataRequest)
}
ModelMetadataRequest::ModelMetadataRequest(const ModelMetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelMetadataRequest)
}

inline void ModelMetadataRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelMetadataRequest::~ModelMetadataRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelMetadataRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelMetadataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  version_.Destroy();
}

void ModelMetadataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelMetadataRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelMetadataRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelMetadataRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelMetadataRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelMetadataRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelMetadataRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelMetadataRequest)
  return target;
}

size_t ModelMetadataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelMetadataRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelMetadataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelMetadataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelMetadataRequest::GetClassData() const { return &_class_data_; }

void ModelMetadataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelMetadataRequest *>(to)->MergeFrom(
      static_cast<const ModelMetadataRequest &>(from));
}


void ModelMetadataRequest::MergeFrom(const ModelMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelMetadataRequest::CopyFrom(const ModelMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMetadataRequest::IsInitialized() const {
  return true;
}

void ModelMetadataRequest::InternalSwap(ModelMetadataRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelMetadataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[8]);
}

// ===================================================================

class ModelMetadataResponse_TensorMetadata::_Internal {
 public:
};

ModelMetadataResponse_TensorMetadata::ModelMetadataResponse_TensorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  shape_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelMetadataResponse.TensorMetadata)
}
ModelMetadataResponse_TensorMetadata::ModelMetadataResponse_TensorMetadata(const ModelMetadataResponse_TensorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  datatype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    datatype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_datatype().empty()) {
    datatype_.Set(from._internal_datatype(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelMetadataResponse.TensorMetadata)
}

inline void ModelMetadataResponse_TensorMetadata::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
datatype_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  datatype_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelMetadataResponse_TensorMetadata::~ModelMetadataResponse_TensorMetadata() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelMetadataResponse.TensorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelMetadataResponse_TensorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  datatype_.Destroy();
}

void ModelMetadataResponse_TensorMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelMetadataResponse_TensorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  name_.ClearToEmpty();
  datatype_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelMetadataResponse_TensorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelMetadataResponse.TensorMetadata.name"));
        } else
          goto handle_unusual;
        continue;
      // string datatype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_datatype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelMetadataResponse.TensorMetadata.datatype"));
        } else
          goto handle_unusual;
        continue;
      // repeated int64 shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelMetadataResponse_TensorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataResponse.TensorMetadata.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datatype().data(), static_cast<int>(this->_internal_datatype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataResponse.TensorMetadata.datatype");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_datatype(), target);
  }

  // repeated int64 shape = 3;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_shape(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelMetadataResponse.TensorMetadata)
  return target;
}

size_t ModelMetadataResponse_TensorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 shape = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datatype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelMetadataResponse_TensorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelMetadataResponse_TensorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelMetadataResponse_TensorMetadata::GetClassData() const { return &_class_data_; }

void ModelMetadataResponse_TensorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelMetadataResponse_TensorMetadata *>(to)->MergeFrom(
      static_cast<const ModelMetadataResponse_TensorMetadata &>(from));
}


void ModelMetadataResponse_TensorMetadata::MergeFrom(const ModelMetadataResponse_TensorMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_datatype().empty()) {
    _internal_set_datatype(from._internal_datatype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelMetadataResponse_TensorMetadata::CopyFrom(const ModelMetadataResponse_TensorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMetadataResponse_TensorMetadata::IsInitialized() const {
  return true;
}

void ModelMetadataResponse_TensorMetadata::InternalSwap(ModelMetadataResponse_TensorMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &datatype_, lhs_arena,
      &other->datatype_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelMetadataResponse_TensorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[9]);
}

// ===================================================================

class ModelMetadataResponse::_Internal {
 public:
};

ModelMetadataResponse::ModelMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  versions_(arena),
  inputs_(arena),
  outputs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelMetadataResponse)
}
ModelMetadataResponse::ModelMetadataResponse(const ModelMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      versions_(from.versions_),
      inputs_(from.inputs_),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_platform().empty()) {
    platform_.Set(from._internal_platform(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelMetadataResponse)
}

inline void ModelMetadataResponse::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
platform_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  platform_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelMetadataResponse::~ModelMetadataResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelMetadataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelMetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  platform_.Destroy();
}

void ModelMetadataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelMetadataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versions_.Clear();
  inputs_.Clear();
  outputs_.Clear();
  name_.ClearToEmpty();
  platform_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelMetadataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelMetadataResponse.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated string versions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_versions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelMetadataResponse.versions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string platform = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_platform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelMetadataResponse.platform"));
        } else
          goto handle_unusual;
        continue;
      // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata inputs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata outputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelMetadataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelMetadataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated string versions = 2;
  for (int i = 0, n = this->_internal_versions_size(); i < n; i++) {
    const auto& s = this->_internal_versions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataResponse.versions");
    target = stream->WriteString(2, s, target);
  }

  // string platform = 3;
  if (!this->_internal_platform().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataResponse.platform");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_platform(), target);
  }

  // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata inputs = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_inputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_inputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata outputs = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_outputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_outputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelMetadataResponse)
  return target;
}

size_t ModelMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelMetadataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string versions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(versions_.size());
  for (int i = 0, n = versions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      versions_.Get(i));
  }

  // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata inputs = 4;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata outputs = 5;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string platform = 3;
  if (!this->_internal_platform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelMetadataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelMetadataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelMetadataResponse::GetClassData() const { return &_class_data_; }

void ModelMetadataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelMetadataResponse *>(to)->MergeFrom(
      static_cast<const ModelMetadataResponse &>(from));
}


void ModelMetadataResponse::MergeFrom(const ModelMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  versions_.MergeFrom(from.versions_);
  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_platform().empty()) {
    _internal_set_platform(from._internal_platform());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelMetadataResponse::CopyFrom(const ModelMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMetadataResponse::IsInitialized() const {
  return true;
}

void ModelMetadataResponse::InternalSwap(ModelMetadataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  versions_.InternalSwap(&other->versions_);
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &platform_, lhs_arena,
      &other->platform_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelMetadataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[10]);
}

// ===================================================================

class InferParameter::_Internal {
 public:
};

InferParameter::InferParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.InferParameter)
}
InferParameter::InferParameter(const InferParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_parameter_choice();
  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _internal_set_string_param(from._internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.InferParameter)
}

inline void InferParameter::SharedCtor() {
clear_has_parameter_choice();
}

InferParameter::~InferParameter() {
  // @@protoc_insertion_point(destructor:hercules.proto.InferParameter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InferParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_parameter_choice()) {
    clear_parameter_choice();
  }
}

void InferParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InferParameter::clear_parameter_choice() {
// @@protoc_insertion_point(one_of_clear_start:hercules.proto.InferParameter)
  switch (parameter_choice_case()) {
    case kBoolParam: {
      // No need to clear
      break;
    }
    case kInt64Param: {
      // No need to clear
      break;
    }
    case kStringParam: {
      parameter_choice_.string_param_.Destroy();
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETER_CHOICE_NOT_SET;
}


void InferParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.InferParameter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameter_choice();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferParameter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool bool_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_bool_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 int64_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_int64_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string string_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_string_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.InferParameter.string_param"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InferParameter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.InferParameter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_param = 1;
  if (_internal_has_bool_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_bool_param(), target);
  }

  // int64 int64_param = 2;
  if (_internal_has_int64_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_int64_param(), target);
  }

  // string string_param = 3;
  if (_internal_has_string_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_param().data(), static_cast<int>(this->_internal_string_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.InferParameter.string_param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_string_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.InferParameter)
  return target;
}

size_t InferParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.InferParameter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (parameter_choice_case()) {
    // bool bool_param = 1;
    case kBoolParam: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_param = 2;
    case kInt64Param: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_int64_param());
      break;
    }
    // string string_param = 3;
    case kStringParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InferParameter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InferParameter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InferParameter::GetClassData() const { return &_class_data_; }

void InferParameter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InferParameter *>(to)->MergeFrom(
      static_cast<const InferParameter &>(from));
}


void InferParameter::MergeFrom(const InferParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.InferParameter)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _internal_set_string_param(from._internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InferParameter::CopyFrom(const InferParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.InferParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferParameter::IsInitialized() const {
  return true;
}

void InferParameter::InternalSwap(InferParameter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(parameter_choice_, other->parameter_choice_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InferParameter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[11]);
}

// ===================================================================

class InferTensorContents::_Internal {
 public:
};

InferTensorContents::InferTensorContents(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  bool_contents_(arena),
  int_contents_(arena),
  int64_contents_(arena),
  uint_contents_(arena),
  uint64_contents_(arena),
  fp32_contents_(arena),
  fp64_contents_(arena),
  bytes_contents_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.InferTensorContents)
}
InferTensorContents::InferTensorContents(const InferTensorContents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bool_contents_(from.bool_contents_),
      int_contents_(from.int_contents_),
      int64_contents_(from.int64_contents_),
      uint_contents_(from.uint_contents_),
      uint64_contents_(from.uint64_contents_),
      fp32_contents_(from.fp32_contents_),
      fp64_contents_(from.fp64_contents_),
      bytes_contents_(from.bytes_contents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.InferTensorContents)
}

inline void InferTensorContents::SharedCtor() {
}

InferTensorContents::~InferTensorContents() {
  // @@protoc_insertion_point(destructor:hercules.proto.InferTensorContents)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InferTensorContents::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InferTensorContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InferTensorContents::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.InferTensorContents)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bool_contents_.Clear();
  int_contents_.Clear();
  int64_contents_.Clear();
  uint_contents_.Clear();
  uint64_contents_.Clear();
  fp32_contents_.Clear();
  fp64_contents_.Clear();
  bytes_contents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferTensorContents::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bool bool_contents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_bool_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_bool_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 int_contents = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_int_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_int_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 int64_contents = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_int64_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_int64_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 uint_contents = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_uint_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_uint_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 uint64_contents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_uint64_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_uint64_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float fp32_contents = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_fp32_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 53) {
          _internal_add_fp32_contents(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated double fp64_contents = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_fp64_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 57) {
          _internal_add_fp64_contents(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // repeated bytes bytes_contents = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_bytes_contents();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InferTensorContents::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.InferTensorContents)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool bool_contents = 1;
  if (this->_internal_bool_contents_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_bool_contents(), target);
  }

  // repeated int32 int_contents = 2;
  {
    int byte_size = _int_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_int_contents(), byte_size, target);
    }
  }

  // repeated int64 int64_contents = 3;
  {
    int byte_size = _int64_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_int64_contents(), byte_size, target);
    }
  }

  // repeated uint32 uint_contents = 4;
  {
    int byte_size = _uint_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, _internal_uint_contents(), byte_size, target);
    }
  }

  // repeated uint64 uint64_contents = 5;
  {
    int byte_size = _uint64_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          5, _internal_uint64_contents(), byte_size, target);
    }
  }

  // repeated float fp32_contents = 6;
  if (this->_internal_fp32_contents_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_fp32_contents(), target);
  }

  // repeated double fp64_contents = 7;
  if (this->_internal_fp64_contents_size() > 0) {
    target = stream->WriteFixedPacked(7, _internal_fp64_contents(), target);
  }

  // repeated bytes bytes_contents = 8;
  for (int i = 0, n = this->_internal_bytes_contents_size(); i < n; i++) {
    const auto& s = this->_internal_bytes_contents(i);
    target = stream->WriteBytes(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.InferTensorContents)
  return target;
}

size_t InferTensorContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.InferTensorContents)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool bool_contents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_bool_contents_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated int32 int_contents = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->int_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _int_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int64 int64_contents = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->int64_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _int64_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 uint_contents = 4;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->uint_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _uint_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint64 uint64_contents = 5;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->uint64_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _uint64_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float fp32_contents = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_fp32_contents_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated double fp64_contents = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_fp64_contents_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated bytes bytes_contents = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(bytes_contents_.size());
  for (int i = 0, n = bytes_contents_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      bytes_contents_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InferTensorContents::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InferTensorContents::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InferTensorContents::GetClassData() const { return &_class_data_; }

void InferTensorContents::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InferTensorContents *>(to)->MergeFrom(
      static_cast<const InferTensorContents &>(from));
}


void InferTensorContents::MergeFrom(const InferTensorContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.InferTensorContents)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  bool_contents_.MergeFrom(from.bool_contents_);
  int_contents_.MergeFrom(from.int_contents_);
  int64_contents_.MergeFrom(from.int64_contents_);
  uint_contents_.MergeFrom(from.uint_contents_);
  uint64_contents_.MergeFrom(from.uint64_contents_);
  fp32_contents_.MergeFrom(from.fp32_contents_);
  fp64_contents_.MergeFrom(from.fp64_contents_);
  bytes_contents_.MergeFrom(from.bytes_contents_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InferTensorContents::CopyFrom(const InferTensorContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.InferTensorContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferTensorContents::IsInitialized() const {
  return true;
}

void InferTensorContents::InternalSwap(InferTensorContents* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  bool_contents_.InternalSwap(&other->bool_contents_);
  int_contents_.InternalSwap(&other->int_contents_);
  int64_contents_.InternalSwap(&other->int64_contents_);
  uint_contents_.InternalSwap(&other->uint_contents_);
  uint64_contents_.InternalSwap(&other->uint64_contents_);
  fp32_contents_.InternalSwap(&other->fp32_contents_);
  fp64_contents_.InternalSwap(&other->fp64_contents_);
  bytes_contents_.InternalSwap(&other->bytes_contents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InferTensorContents::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[12]);
}

// ===================================================================

ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse() {}
ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::MergeFrom(const ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[13]);
}

// ===================================================================

class ModelInferRequest_InferInputTensor::_Internal {
 public:
  static const ::hercules::proto::InferTensorContents& contents(const ModelInferRequest_InferInputTensor* msg);
};

const ::hercules::proto::InferTensorContents&
ModelInferRequest_InferInputTensor::_Internal::contents(const ModelInferRequest_InferInputTensor* msg) {
  return *msg->contents_;
}
ModelInferRequest_InferInputTensor::ModelInferRequest_InferInputTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  shape_(arena),
  parameters_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelInferRequest_InferInputTensor::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelInferRequest.InferInputTensor)
}
ModelInferRequest_InferInputTensor::ModelInferRequest_InferInputTensor(const ModelInferRequest_InferInputTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  datatype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    datatype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_datatype().empty()) {
    datatype_.Set(from._internal_datatype(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_contents()) {
    contents_ = new ::hercules::proto::InferTensorContents(*from.contents_);
  } else {
    contents_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelInferRequest.InferInputTensor)
}

inline void ModelInferRequest_InferInputTensor::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
datatype_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  datatype_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contents_ = nullptr;
}

ModelInferRequest_InferInputTensor::~ModelInferRequest_InferInputTensor() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelInferRequest.InferInputTensor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelInferRequest_InferInputTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parameters_.Destruct();
  name_.Destroy();
  datatype_.Destroy();
  if (this != internal_default_instance()) delete contents_;
}

void ModelInferRequest_InferInputTensor::ArenaDtor(void* object) {
  ModelInferRequest_InferInputTensor* _this = reinterpret_cast< ModelInferRequest_InferInputTensor* >(object);
  _this->parameters_.Destruct();
}
void ModelInferRequest_InferInputTensor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelInferRequest_InferInputTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelInferRequest.InferInputTensor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  parameters_.Clear();
  name_.ClearToEmpty();
  datatype_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && contents_ != nullptr) {
    delete contents_;
  }
  contents_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferRequest_InferInputTensor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferRequest.InferInputTensor.name"));
        } else
          goto handle_unusual;
        continue;
      // string datatype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_datatype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferRequest.InferInputTensor.datatype"));
        } else
          goto handle_unusual;
        continue;
      // repeated int64 shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .hercules.proto.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.InferTensorContents contents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_contents(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInferRequest_InferInputTensor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelInferRequest.InferInputTensor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.InferInputTensor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datatype().data(), static_cast<int>(this->_internal_datatype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.InferInputTensor.datatype");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_datatype(), target);
  }

  // repeated int64 shape = 3;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_shape(), byte_size, target);
    }
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::InferParameter>;
    using WireHelper = ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.ModelInferRequest.InferInputTensor.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .hercules.proto.InferTensorContents contents = 5;
  if (this->_internal_has_contents()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::contents(this),
        _Internal::contents(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelInferRequest.InferInputTensor)
  return target;
}

size_t ModelInferRequest_InferInputTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelInferRequest.InferInputTensor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 shape = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datatype());
  }

  // .hercules.proto.InferTensorContents contents = 5;
  if (this->_internal_has_contents()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contents_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInferRequest_InferInputTensor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelInferRequest_InferInputTensor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInferRequest_InferInputTensor::GetClassData() const { return &_class_data_; }

void ModelInferRequest_InferInputTensor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelInferRequest_InferInputTensor *>(to)->MergeFrom(
      static_cast<const ModelInferRequest_InferInputTensor &>(from));
}


void ModelInferRequest_InferInputTensor::MergeFrom(const ModelInferRequest_InferInputTensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelInferRequest.InferInputTensor)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  parameters_.MergeFrom(from.parameters_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_datatype().empty()) {
    _internal_set_datatype(from._internal_datatype());
  }
  if (from._internal_has_contents()) {
    _internal_mutable_contents()->::hercules::proto::InferTensorContents::MergeFrom(from._internal_contents());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInferRequest_InferInputTensor::CopyFrom(const ModelInferRequest_InferInputTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelInferRequest.InferInputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferRequest_InferInputTensor::IsInitialized() const {
  return true;
}

void ModelInferRequest_InferInputTensor::InternalSwap(ModelInferRequest_InferInputTensor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  parameters_.InternalSwap(&other->parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &datatype_, lhs_arena,
      &other->datatype_, rhs_arena
  );
  swap(contents_, other->contents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferInputTensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[14]);
}

// ===================================================================

ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse() {}
ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::MergeFrom(const ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[15]);
}

// ===================================================================

class ModelInferRequest_InferRequestedOutputTensor::_Internal {
 public:
};

ModelInferRequest_InferRequestedOutputTensor::ModelInferRequest_InferRequestedOutputTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parameters_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelInferRequest_InferRequestedOutputTensor::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
}
ModelInferRequest_InferRequestedOutputTensor::ModelInferRequest_InferRequestedOutputTensor(const ModelInferRequest_InferRequestedOutputTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
}

inline void ModelInferRequest_InferRequestedOutputTensor::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelInferRequest_InferRequestedOutputTensor::~ModelInferRequest_InferRequestedOutputTensor() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelInferRequest_InferRequestedOutputTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parameters_.Destruct();
  name_.Destroy();
}

void ModelInferRequest_InferRequestedOutputTensor::ArenaDtor(void* object) {
  ModelInferRequest_InferRequestedOutputTensor* _this = reinterpret_cast< ModelInferRequest_InferRequestedOutputTensor* >(object);
  _this->parameters_.Destruct();
}
void ModelInferRequest_InferRequestedOutputTensor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelInferRequest_InferRequestedOutputTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferRequest_InferRequestedOutputTensor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferRequest.InferRequestedOutputTensor.name"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .hercules.proto.InferParameter> parameters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInferRequest_InferRequestedOutputTensor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.InferRequestedOutputTensor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // map<string, .hercules.proto.InferParameter> parameters = 2;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::InferParameter>;
    using WireHelper = ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.ModelInferRequest.InferRequestedOutputTensor.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  return target;
}

size_t ModelInferRequest_InferRequestedOutputTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.InferParameter> parameters = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInferRequest_InferRequestedOutputTensor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelInferRequest_InferRequestedOutputTensor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInferRequest_InferRequestedOutputTensor::GetClassData() const { return &_class_data_; }

void ModelInferRequest_InferRequestedOutputTensor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelInferRequest_InferRequestedOutputTensor *>(to)->MergeFrom(
      static_cast<const ModelInferRequest_InferRequestedOutputTensor &>(from));
}


void ModelInferRequest_InferRequestedOutputTensor::MergeFrom(const ModelInferRequest_InferRequestedOutputTensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInferRequest_InferRequestedOutputTensor::CopyFrom(const ModelInferRequest_InferRequestedOutputTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferRequest_InferRequestedOutputTensor::IsInitialized() const {
  return true;
}

void ModelInferRequest_InferRequestedOutputTensor::InternalSwap(ModelInferRequest_InferRequestedOutputTensor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parameters_.InternalSwap(&other->parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferRequestedOutputTensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[16]);
}

// ===================================================================

ModelInferRequest_ParametersEntry_DoNotUse::ModelInferRequest_ParametersEntry_DoNotUse() {}
ModelInferRequest_ParametersEntry_DoNotUse::ModelInferRequest_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferRequest_ParametersEntry_DoNotUse::MergeFrom(const ModelInferRequest_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[17]);
}

// ===================================================================

class ModelInferRequest::_Internal {
 public:
};

ModelInferRequest::ModelInferRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parameters_(arena),
  inputs_(arena),
  outputs_(arena),
  raw_input_contents_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelInferRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelInferRequest)
}
ModelInferRequest::ModelInferRequest(const ModelInferRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      inputs_(from.inputs_),
      outputs_(from.outputs_),
      raw_input_contents_(from.raw_input_contents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    model_name_.Set(from._internal_model_name(), 
      GetArenaForAllocation());
  }
  model_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_version().empty()) {
    model_version_.Set(from._internal_model_version(), 
      GetArenaForAllocation());
  }
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelInferRequest)
}

inline void ModelInferRequest::SharedCtor() {
model_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
model_version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelInferRequest::~ModelInferRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelInferRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelInferRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parameters_.Destruct();
  model_name_.Destroy();
  model_version_.Destroy();
  id_.Destroy();
}

void ModelInferRequest::ArenaDtor(void* object) {
  ModelInferRequest* _this = reinterpret_cast< ModelInferRequest* >(object);
  _this->parameters_.Destruct();
}
void ModelInferRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelInferRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelInferRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  inputs_.Clear();
  outputs_.Clear();
  raw_input_contents_.Clear();
  model_name_.ClearToEmpty();
  model_version_.ClearToEmpty();
  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string model_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferRequest.model_name"));
        } else
          goto handle_unusual;
        continue;
      // string model_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferRequest.model_version"));
        } else
          goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .hercules.proto.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .hercules.proto.ModelInferRequest.InferInputTensor inputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .hercules.proto.ModelInferRequest.InferRequestedOutputTensor outputs = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated bytes raw_input_contents = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_raw_input_contents();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInferRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelInferRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // string model_version = 2;
  if (!this->_internal_model_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_version().data(), static_cast<int>(this->_internal_model_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.model_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_version(), target);
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::InferParameter>;
    using WireHelper = ModelInferRequest_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.ModelInferRequest.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // repeated .hercules.proto.ModelInferRequest.InferInputTensor inputs = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_inputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_inputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .hercules.proto.ModelInferRequest.InferRequestedOutputTensor outputs = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_outputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_outputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated bytes raw_input_contents = 7;
  for (int i = 0, n = this->_internal_raw_input_contents_size(); i < n; i++) {
    const auto& s = this->_internal_raw_input_contents(i);
    target = stream->WriteBytes(7, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelInferRequest)
  return target;
}

size_t ModelInferRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelInferRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferRequest_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .hercules.proto.ModelInferRequest.InferInputTensor inputs = 5;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .hercules.proto.ModelInferRequest.InferRequestedOutputTensor outputs = 6;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated bytes raw_input_contents = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(raw_input_contents_.size());
  for (int i = 0, n = raw_input_contents_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      raw_input_contents_.Get(i));
  }

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string model_version = 2;
  if (!this->_internal_model_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_version());
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInferRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelInferRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInferRequest::GetClassData() const { return &_class_data_; }

void ModelInferRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelInferRequest *>(to)->MergeFrom(
      static_cast<const ModelInferRequest &>(from));
}


void ModelInferRequest::MergeFrom(const ModelInferRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelInferRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  raw_input_contents_.MergeFrom(from.raw_input_contents_);
  if (!from._internal_model_name().empty()) {
    _internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_model_version().empty()) {
    _internal_set_model_version(from._internal_model_version());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInferRequest::CopyFrom(const ModelInferRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelInferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferRequest::IsInitialized() const {
  return true;
}

void ModelInferRequest::InternalSwap(ModelInferRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parameters_.InternalSwap(&other->parameters_);
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  raw_input_contents_.InternalSwap(&other->raw_input_contents_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_name_, lhs_arena,
      &other->model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_version_, lhs_arena,
      &other->model_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[18]);
}

// ===================================================================

ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse() {}
ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::MergeFrom(const ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[19]);
}

// ===================================================================

class ModelInferResponse_InferOutputTensor::_Internal {
 public:
  static const ::hercules::proto::InferTensorContents& contents(const ModelInferResponse_InferOutputTensor* msg);
};

const ::hercules::proto::InferTensorContents&
ModelInferResponse_InferOutputTensor::_Internal::contents(const ModelInferResponse_InferOutputTensor* msg) {
  return *msg->contents_;
}
ModelInferResponse_InferOutputTensor::ModelInferResponse_InferOutputTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  shape_(arena),
  parameters_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelInferResponse_InferOutputTensor::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelInferResponse.InferOutputTensor)
}
ModelInferResponse_InferOutputTensor::ModelInferResponse_InferOutputTensor(const ModelInferResponse_InferOutputTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  datatype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    datatype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_datatype().empty()) {
    datatype_.Set(from._internal_datatype(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_contents()) {
    contents_ = new ::hercules::proto::InferTensorContents(*from.contents_);
  } else {
    contents_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelInferResponse.InferOutputTensor)
}

inline void ModelInferResponse_InferOutputTensor::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
datatype_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  datatype_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contents_ = nullptr;
}

ModelInferResponse_InferOutputTensor::~ModelInferResponse_InferOutputTensor() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelInferResponse.InferOutputTensor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelInferResponse_InferOutputTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parameters_.Destruct();
  name_.Destroy();
  datatype_.Destroy();
  if (this != internal_default_instance()) delete contents_;
}

void ModelInferResponse_InferOutputTensor::ArenaDtor(void* object) {
  ModelInferResponse_InferOutputTensor* _this = reinterpret_cast< ModelInferResponse_InferOutputTensor* >(object);
  _this->parameters_.Destruct();
}
void ModelInferResponse_InferOutputTensor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelInferResponse_InferOutputTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  parameters_.Clear();
  name_.ClearToEmpty();
  datatype_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && contents_ != nullptr) {
    delete contents_;
  }
  contents_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferResponse_InferOutputTensor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferResponse.InferOutputTensor.name"));
        } else
          goto handle_unusual;
        continue;
      // string datatype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_datatype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferResponse.InferOutputTensor.datatype"));
        } else
          goto handle_unusual;
        continue;
      // repeated int64 shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .hercules.proto.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.InferTensorContents contents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_contents(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInferResponse_InferOutputTensor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferResponse.InferOutputTensor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datatype().data(), static_cast<int>(this->_internal_datatype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferResponse.InferOutputTensor.datatype");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_datatype(), target);
  }

  // repeated int64 shape = 3;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_shape(), byte_size, target);
    }
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::InferParameter>;
    using WireHelper = ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.ModelInferResponse.InferOutputTensor.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .hercules.proto.InferTensorContents contents = 5;
  if (this->_internal_has_contents()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::contents(this),
        _Internal::contents(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelInferResponse.InferOutputTensor)
  return target;
}

size_t ModelInferResponse_InferOutputTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 shape = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datatype());
  }

  // .hercules.proto.InferTensorContents contents = 5;
  if (this->_internal_has_contents()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contents_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInferResponse_InferOutputTensor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelInferResponse_InferOutputTensor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInferResponse_InferOutputTensor::GetClassData() const { return &_class_data_; }

void ModelInferResponse_InferOutputTensor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelInferResponse_InferOutputTensor *>(to)->MergeFrom(
      static_cast<const ModelInferResponse_InferOutputTensor &>(from));
}


void ModelInferResponse_InferOutputTensor::MergeFrom(const ModelInferResponse_InferOutputTensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  parameters_.MergeFrom(from.parameters_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_datatype().empty()) {
    _internal_set_datatype(from._internal_datatype());
  }
  if (from._internal_has_contents()) {
    _internal_mutable_contents()->::hercules::proto::InferTensorContents::MergeFrom(from._internal_contents());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInferResponse_InferOutputTensor::CopyFrom(const ModelInferResponse_InferOutputTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferResponse_InferOutputTensor::IsInitialized() const {
  return true;
}

void ModelInferResponse_InferOutputTensor::InternalSwap(ModelInferResponse_InferOutputTensor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  parameters_.InternalSwap(&other->parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &datatype_, lhs_arena,
      &other->datatype_, rhs_arena
  );
  swap(contents_, other->contents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse_InferOutputTensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[20]);
}

// ===================================================================

ModelInferResponse_ParametersEntry_DoNotUse::ModelInferResponse_ParametersEntry_DoNotUse() {}
ModelInferResponse_ParametersEntry_DoNotUse::ModelInferResponse_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferResponse_ParametersEntry_DoNotUse::MergeFrom(const ModelInferResponse_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[21]);
}

// ===================================================================

class ModelInferResponse::_Internal {
 public:
};

ModelInferResponse::ModelInferResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parameters_(arena),
  outputs_(arena),
  raw_output_contents_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelInferResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelInferResponse)
}
ModelInferResponse::ModelInferResponse(const ModelInferResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      outputs_(from.outputs_),
      raw_output_contents_(from.raw_output_contents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    model_name_.Set(from._internal_model_name(), 
      GetArenaForAllocation());
  }
  model_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_version().empty()) {
    model_version_.Set(from._internal_model_version(), 
      GetArenaForAllocation());
  }
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelInferResponse)
}

inline void ModelInferResponse::SharedCtor() {
model_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
model_version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelInferResponse::~ModelInferResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelInferResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelInferResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parameters_.Destruct();
  model_name_.Destroy();
  model_version_.Destroy();
  id_.Destroy();
}

void ModelInferResponse::ArenaDtor(void* object) {
  ModelInferResponse* _this = reinterpret_cast< ModelInferResponse* >(object);
  _this->parameters_.Destruct();
}
void ModelInferResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelInferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelInferResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  outputs_.Clear();
  raw_output_contents_.Clear();
  model_name_.ClearToEmpty();
  model_version_.ClearToEmpty();
  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string model_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferResponse.model_name"));
        } else
          goto handle_unusual;
        continue;
      // string model_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferResponse.model_version"));
        } else
          goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelInferResponse.id"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .hercules.proto.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .hercules.proto.ModelInferResponse.InferOutputTensor outputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated bytes raw_output_contents = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_raw_output_contents();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInferResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelInferResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferResponse.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // string model_version = 2;
  if (!this->_internal_model_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_version().data(), static_cast<int>(this->_internal_model_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferResponse.model_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_version(), target);
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferResponse.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::InferParameter>;
    using WireHelper = ModelInferResponse_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.ModelInferResponse.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // repeated .hercules.proto.ModelInferResponse.InferOutputTensor outputs = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_outputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_outputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated bytes raw_output_contents = 6;
  for (int i = 0, n = this->_internal_raw_output_contents_size(); i < n; i++) {
    const auto& s = this->_internal_raw_output_contents(i);
    target = stream->WriteBytes(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelInferResponse)
  return target;
}

size_t ModelInferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelInferResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferResponse_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .hercules.proto.ModelInferResponse.InferOutputTensor outputs = 5;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated bytes raw_output_contents = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(raw_output_contents_.size());
  for (int i = 0, n = raw_output_contents_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      raw_output_contents_.Get(i));
  }

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string model_version = 2;
  if (!this->_internal_model_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_version());
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInferResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelInferResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInferResponse::GetClassData() const { return &_class_data_; }

void ModelInferResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelInferResponse *>(to)->MergeFrom(
      static_cast<const ModelInferResponse &>(from));
}


void ModelInferResponse::MergeFrom(const ModelInferResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelInferResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  outputs_.MergeFrom(from.outputs_);
  raw_output_contents_.MergeFrom(from.raw_output_contents_);
  if (!from._internal_model_name().empty()) {
    _internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_model_version().empty()) {
    _internal_set_model_version(from._internal_model_version());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInferResponse::CopyFrom(const ModelInferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelInferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferResponse::IsInitialized() const {
  return true;
}

void ModelInferResponse::InternalSwap(ModelInferResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parameters_.InternalSwap(&other->parameters_);
  outputs_.InternalSwap(&other->outputs_);
  raw_output_contents_.InternalSwap(&other->raw_output_contents_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_name_, lhs_arena,
      &other->model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_version_, lhs_arena,
      &other->model_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[22]);
}

// ===================================================================

class ModelStreamInferResponse::_Internal {
 public:
  static const ::hercules::proto::ModelInferResponse& infer_response(const ModelStreamInferResponse* msg);
};

const ::hercules::proto::ModelInferResponse&
ModelStreamInferResponse::_Internal::infer_response(const ModelStreamInferResponse* msg) {
  return *msg->infer_response_;
}
ModelStreamInferResponse::ModelStreamInferResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelStreamInferResponse)
}
ModelStreamInferResponse::ModelStreamInferResponse(const ModelStreamInferResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    error_message_.Set(from._internal_error_message(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_infer_response()) {
    infer_response_ = new ::hercules::proto::ModelInferResponse(*from.infer_response_);
  } else {
    infer_response_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelStreamInferResponse)
}

inline void ModelStreamInferResponse::SharedCtor() {
error_message_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  error_message_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
infer_response_ = nullptr;
}

ModelStreamInferResponse::~ModelStreamInferResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelStreamInferResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelStreamInferResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  error_message_.Destroy();
  if (this != internal_default_instance()) delete infer_response_;
}

void ModelStreamInferResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelStreamInferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelStreamInferResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && infer_response_ != nullptr) {
    delete infer_response_;
  }
  infer_response_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStreamInferResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string error_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelStreamInferResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.ModelInferResponse infer_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_infer_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelStreamInferResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelStreamInferResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelStreamInferResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error_message(), target);
  }

  // .hercules.proto.ModelInferResponse infer_response = 2;
  if (this->_internal_has_infer_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::infer_response(this),
        _Internal::infer_response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelStreamInferResponse)
  return target;
}

size_t ModelStreamInferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelStreamInferResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 1;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .hercules.proto.ModelInferResponse infer_response = 2;
  if (this->_internal_has_infer_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *infer_response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelStreamInferResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelStreamInferResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelStreamInferResponse::GetClassData() const { return &_class_data_; }

void ModelStreamInferResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelStreamInferResponse *>(to)->MergeFrom(
      static_cast<const ModelStreamInferResponse &>(from));
}


void ModelStreamInferResponse::MergeFrom(const ModelStreamInferResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelStreamInferResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_has_infer_response()) {
    _internal_mutable_infer_response()->::hercules::proto::ModelInferResponse::MergeFrom(from._internal_infer_response());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelStreamInferResponse::CopyFrom(const ModelStreamInferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelStreamInferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStreamInferResponse::IsInitialized() const {
  return true;
}

void ModelStreamInferResponse::InternalSwap(ModelStreamInferResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &error_message_, lhs_arena,
      &other->error_message_, rhs_arena
  );
  swap(infer_response_, other->infer_response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStreamInferResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[23]);
}

// ===================================================================

class ModelConfigRequest::_Internal {
 public:
};

ModelConfigRequest::ModelConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelConfigRequest)
}
ModelConfigRequest::ModelConfigRequest(const ModelConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelConfigRequest)
}

inline void ModelConfigRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelConfigRequest::~ModelConfigRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelConfigRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  version_.Destroy();
}

void ModelConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelConfigRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelConfigRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelConfigRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelConfigRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelConfigRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelConfigRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelConfigRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelConfigRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelConfigRequest)
  return target;
}

size_t ModelConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelConfigRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelConfigRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelConfigRequest::GetClassData() const { return &_class_data_; }

void ModelConfigRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelConfigRequest *>(to)->MergeFrom(
      static_cast<const ModelConfigRequest &>(from));
}


void ModelConfigRequest::MergeFrom(const ModelConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelConfigRequest::CopyFrom(const ModelConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigRequest::IsInitialized() const {
  return true;
}

void ModelConfigRequest::InternalSwap(ModelConfigRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelConfigRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[24]);
}

// ===================================================================

class ModelConfigResponse::_Internal {
 public:
  static const ::hercules::proto::ModelConfig& config(const ModelConfigResponse* msg);
};

const ::hercules::proto::ModelConfig&
ModelConfigResponse::_Internal::config(const ModelConfigResponse* msg) {
  return *msg->config_;
}
void ModelConfigResponse::clear_config() {
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
ModelConfigResponse::ModelConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelConfigResponse)
}
ModelConfigResponse::ModelConfigResponse(const ModelConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    config_ = new ::hercules::proto::ModelConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelConfigResponse)
}

inline void ModelConfigResponse::SharedCtor() {
config_ = nullptr;
}

ModelConfigResponse::~ModelConfigResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelConfigResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete config_;
}

void ModelConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelConfigResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelConfigResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .hercules.proto.ModelConfig config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelConfigResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelConfigResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .hercules.proto.ModelConfig config = 1;
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelConfigResponse)
  return target;
}

size_t ModelConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelConfigResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hercules.proto.ModelConfig config = 1;
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelConfigResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelConfigResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelConfigResponse::GetClassData() const { return &_class_data_; }

void ModelConfigResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelConfigResponse *>(to)->MergeFrom(
      static_cast<const ModelConfigResponse &>(from));
}


void ModelConfigResponse::MergeFrom(const ModelConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_config()) {
    _internal_mutable_config()->::hercules::proto::ModelConfig::MergeFrom(from._internal_config());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelConfigResponse::CopyFrom(const ModelConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigResponse::IsInitialized() const {
  return true;
}

void ModelConfigResponse::InternalSwap(ModelConfigResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(config_, other->config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelConfigResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[25]);
}

// ===================================================================

class ModelStatisticsRequest::_Internal {
 public:
};

ModelStatisticsRequest::ModelStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelStatisticsRequest)
}
ModelStatisticsRequest::ModelStatisticsRequest(const ModelStatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelStatisticsRequest)
}

inline void ModelStatisticsRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelStatisticsRequest::~ModelStatisticsRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelStatisticsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelStatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  version_.Destroy();
}

void ModelStatisticsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelStatisticsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStatisticsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelStatisticsRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelStatisticsRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelStatisticsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelStatisticsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelStatisticsRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelStatisticsRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelStatisticsRequest)
  return target;
}

size_t ModelStatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelStatisticsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelStatisticsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelStatisticsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelStatisticsRequest::GetClassData() const { return &_class_data_; }

void ModelStatisticsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelStatisticsRequest *>(to)->MergeFrom(
      static_cast<const ModelStatisticsRequest &>(from));
}


void ModelStatisticsRequest::MergeFrom(const ModelStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelStatisticsRequest::CopyFrom(const ModelStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStatisticsRequest::IsInitialized() const {
  return true;
}

void ModelStatisticsRequest::InternalSwap(ModelStatisticsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStatisticsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[26]);
}

// ===================================================================

class StatisticDuration::_Internal {
 public:
};

StatisticDuration::StatisticDuration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.StatisticDuration)
}
StatisticDuration::StatisticDuration(const StatisticDuration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&ns_) -
    reinterpret_cast<char*>(&count_)) + sizeof(ns_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.StatisticDuration)
}

inline void StatisticDuration::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&count_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ns_) -
    reinterpret_cast<char*>(&count_)) + sizeof(ns_));
}

StatisticDuration::~StatisticDuration() {
  // @@protoc_insertion_point(destructor:hercules.proto.StatisticDuration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatisticDuration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StatisticDuration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StatisticDuration::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.StatisticDuration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ns_) -
      reinterpret_cast<char*>(&count_)) + sizeof(ns_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatisticDuration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 ns = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatisticDuration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.StatisticDuration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 count = 1;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_count(), target);
  }

  // uint64 ns = 2;
  if (this->_internal_ns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_ns(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.StatisticDuration)
  return target;
}

size_t StatisticDuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.StatisticDuration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 count = 1;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_count());
  }

  // uint64 ns = 2;
  if (this->_internal_ns() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_ns());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatisticDuration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StatisticDuration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatisticDuration::GetClassData() const { return &_class_data_; }

void StatisticDuration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StatisticDuration *>(to)->MergeFrom(
      static_cast<const StatisticDuration &>(from));
}


void StatisticDuration::MergeFrom(const StatisticDuration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.StatisticDuration)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_ns() != 0) {
    _internal_set_ns(from._internal_ns());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatisticDuration::CopyFrom(const StatisticDuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.StatisticDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticDuration::IsInitialized() const {
  return true;
}

void StatisticDuration::InternalSwap(StatisticDuration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatisticDuration, ns_)
      + sizeof(StatisticDuration::ns_)
      - PROTOBUF_FIELD_OFFSET(StatisticDuration, count_)>(
          reinterpret_cast<char*>(&count_),
          reinterpret_cast<char*>(&other->count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StatisticDuration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[27]);
}

// ===================================================================

class InferStatistics::_Internal {
 public:
  static const ::hercules::proto::StatisticDuration& success(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& fail(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& queue(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& compute_input(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& compute_infer(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& compute_output(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& cache_hit(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& cache_miss(const InferStatistics* msg);
};

const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::success(const InferStatistics* msg) {
  return *msg->success_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::fail(const InferStatistics* msg) {
  return *msg->fail_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::queue(const InferStatistics* msg) {
  return *msg->queue_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::compute_input(const InferStatistics* msg) {
  return *msg->compute_input_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::compute_infer(const InferStatistics* msg) {
  return *msg->compute_infer_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::compute_output(const InferStatistics* msg) {
  return *msg->compute_output_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::cache_hit(const InferStatistics* msg) {
  return *msg->cache_hit_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::cache_miss(const InferStatistics* msg) {
  return *msg->cache_miss_;
}
InferStatistics::InferStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.InferStatistics)
}
InferStatistics::InferStatistics(const InferStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_success()) {
    success_ = new ::hercules::proto::StatisticDuration(*from.success_);
  } else {
    success_ = nullptr;
  }
  if (from._internal_has_fail()) {
    fail_ = new ::hercules::proto::StatisticDuration(*from.fail_);
  } else {
    fail_ = nullptr;
  }
  if (from._internal_has_queue()) {
    queue_ = new ::hercules::proto::StatisticDuration(*from.queue_);
  } else {
    queue_ = nullptr;
  }
  if (from._internal_has_compute_input()) {
    compute_input_ = new ::hercules::proto::StatisticDuration(*from.compute_input_);
  } else {
    compute_input_ = nullptr;
  }
  if (from._internal_has_compute_infer()) {
    compute_infer_ = new ::hercules::proto::StatisticDuration(*from.compute_infer_);
  } else {
    compute_infer_ = nullptr;
  }
  if (from._internal_has_compute_output()) {
    compute_output_ = new ::hercules::proto::StatisticDuration(*from.compute_output_);
  } else {
    compute_output_ = nullptr;
  }
  if (from._internal_has_cache_hit()) {
    cache_hit_ = new ::hercules::proto::StatisticDuration(*from.cache_hit_);
  } else {
    cache_hit_ = nullptr;
  }
  if (from._internal_has_cache_miss()) {
    cache_miss_ = new ::hercules::proto::StatisticDuration(*from.cache_miss_);
  } else {
    cache_miss_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.InferStatistics)
}

inline void InferStatistics::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&success_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cache_miss_) -
    reinterpret_cast<char*>(&success_)) + sizeof(cache_miss_));
}

InferStatistics::~InferStatistics() {
  // @@protoc_insertion_point(destructor:hercules.proto.InferStatistics)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InferStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete success_;
  if (this != internal_default_instance()) delete fail_;
  if (this != internal_default_instance()) delete queue_;
  if (this != internal_default_instance()) delete compute_input_;
  if (this != internal_default_instance()) delete compute_infer_;
  if (this != internal_default_instance()) delete compute_output_;
  if (this != internal_default_instance()) delete cache_hit_;
  if (this != internal_default_instance()) delete cache_miss_;
}

void InferStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InferStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.InferStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  if (GetArenaForAllocation() == nullptr && fail_ != nullptr) {
    delete fail_;
  }
  fail_ = nullptr;
  if (GetArenaForAllocation() == nullptr && queue_ != nullptr) {
    delete queue_;
  }
  queue_ = nullptr;
  if (GetArenaForAllocation() == nullptr && compute_input_ != nullptr) {
    delete compute_input_;
  }
  compute_input_ = nullptr;
  if (GetArenaForAllocation() == nullptr && compute_infer_ != nullptr) {
    delete compute_infer_;
  }
  compute_infer_ = nullptr;
  if (GetArenaForAllocation() == nullptr && compute_output_ != nullptr) {
    delete compute_output_;
  }
  compute_output_ = nullptr;
  if (GetArenaForAllocation() == nullptr && cache_hit_ != nullptr) {
    delete cache_hit_;
  }
  cache_hit_ = nullptr;
  if (GetArenaForAllocation() == nullptr && cache_miss_ != nullptr) {
    delete cache_miss_;
  }
  cache_miss_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferStatistics::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .hercules.proto.StatisticDuration success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration fail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fail(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration queue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_queue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_input = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_input(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_infer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_infer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_output = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_output(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration cache_hit = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_cache_hit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration cache_miss = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_cache_miss(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InferStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.InferStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .hercules.proto.StatisticDuration success = 1;
  if (this->_internal_has_success()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::success(this),
        _Internal::success(this).GetCachedSize(), target, stream);
  }

  // .hercules.proto.StatisticDuration fail = 2;
  if (this->_internal_has_fail()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::fail(this),
        _Internal::fail(this).GetCachedSize(), target, stream);
  }

  // .hercules.proto.StatisticDuration queue = 3;
  if (this->_internal_has_queue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::queue(this),
        _Internal::queue(this).GetCachedSize(), target, stream);
  }

  // .hercules.proto.StatisticDuration compute_input = 4;
  if (this->_internal_has_compute_input()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::compute_input(this),
        _Internal::compute_input(this).GetCachedSize(), target, stream);
  }

  // .hercules.proto.StatisticDuration compute_infer = 5;
  if (this->_internal_has_compute_infer()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::compute_infer(this),
        _Internal::compute_infer(this).GetCachedSize(), target, stream);
  }

  // .hercules.proto.StatisticDuration compute_output = 6;
  if (this->_internal_has_compute_output()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::compute_output(this),
        _Internal::compute_output(this).GetCachedSize(), target, stream);
  }

  // .hercules.proto.StatisticDuration cache_hit = 7;
  if (this->_internal_has_cache_hit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::cache_hit(this),
        _Internal::cache_hit(this).GetCachedSize(), target, stream);
  }

  // .hercules.proto.StatisticDuration cache_miss = 8;
  if (this->_internal_has_cache_miss()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::cache_miss(this),
        _Internal::cache_miss(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.InferStatistics)
  return target;
}

size_t InferStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.InferStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hercules.proto.StatisticDuration success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  // .hercules.proto.StatisticDuration fail = 2;
  if (this->_internal_has_fail()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fail_);
  }

  // .hercules.proto.StatisticDuration queue = 3;
  if (this->_internal_has_queue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *queue_);
  }

  // .hercules.proto.StatisticDuration compute_input = 4;
  if (this->_internal_has_compute_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_input_);
  }

  // .hercules.proto.StatisticDuration compute_infer = 5;
  if (this->_internal_has_compute_infer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_infer_);
  }

  // .hercules.proto.StatisticDuration compute_output = 6;
  if (this->_internal_has_compute_output()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_output_);
  }

  // .hercules.proto.StatisticDuration cache_hit = 7;
  if (this->_internal_has_cache_hit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cache_hit_);
  }

  // .hercules.proto.StatisticDuration cache_miss = 8;
  if (this->_internal_has_cache_miss()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cache_miss_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InferStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InferStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InferStatistics::GetClassData() const { return &_class_data_; }

void InferStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InferStatistics *>(to)->MergeFrom(
      static_cast<const InferStatistics &>(from));
}


void InferStatistics::MergeFrom(const InferStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.InferStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _internal_mutable_success()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_success());
  }
  if (from._internal_has_fail()) {
    _internal_mutable_fail()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_fail());
  }
  if (from._internal_has_queue()) {
    _internal_mutable_queue()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_queue());
  }
  if (from._internal_has_compute_input()) {
    _internal_mutable_compute_input()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_input());
  }
  if (from._internal_has_compute_infer()) {
    _internal_mutable_compute_infer()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_infer());
  }
  if (from._internal_has_compute_output()) {
    _internal_mutable_compute_output()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_output());
  }
  if (from._internal_has_cache_hit()) {
    _internal_mutable_cache_hit()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_cache_hit());
  }
  if (from._internal_has_cache_miss()) {
    _internal_mutable_cache_miss()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_cache_miss());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InferStatistics::CopyFrom(const InferStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.InferStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferStatistics::IsInitialized() const {
  return true;
}

void InferStatistics::InternalSwap(InferStatistics* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InferStatistics, cache_miss_)
      + sizeof(InferStatistics::cache_miss_)
      - PROTOBUF_FIELD_OFFSET(InferStatistics, success_)>(
          reinterpret_cast<char*>(&success_),
          reinterpret_cast<char*>(&other->success_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InferStatistics::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[28]);
}

// ===================================================================

class InferBatchStatistics::_Internal {
 public:
  static const ::hercules::proto::StatisticDuration& compute_input(const InferBatchStatistics* msg);
  static const ::hercules::proto::StatisticDuration& compute_infer(const InferBatchStatistics* msg);
  static const ::hercules::proto::StatisticDuration& compute_output(const InferBatchStatistics* msg);
};

const ::hercules::proto::StatisticDuration&
InferBatchStatistics::_Internal::compute_input(const InferBatchStatistics* msg) {
  return *msg->compute_input_;
}
const ::hercules::proto::StatisticDuration&
InferBatchStatistics::_Internal::compute_infer(const InferBatchStatistics* msg) {
  return *msg->compute_infer_;
}
const ::hercules::proto::StatisticDuration&
InferBatchStatistics::_Internal::compute_output(const InferBatchStatistics* msg) {
  return *msg->compute_output_;
}
InferBatchStatistics::InferBatchStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.InferBatchStatistics)
}
InferBatchStatistics::InferBatchStatistics(const InferBatchStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_compute_input()) {
    compute_input_ = new ::hercules::proto::StatisticDuration(*from.compute_input_);
  } else {
    compute_input_ = nullptr;
  }
  if (from._internal_has_compute_infer()) {
    compute_infer_ = new ::hercules::proto::StatisticDuration(*from.compute_infer_);
  } else {
    compute_infer_ = nullptr;
  }
  if (from._internal_has_compute_output()) {
    compute_output_ = new ::hercules::proto::StatisticDuration(*from.compute_output_);
  } else {
    compute_output_ = nullptr;
  }
  batch_size_ = from.batch_size_;
  // @@protoc_insertion_point(copy_constructor:hercules.proto.InferBatchStatistics)
}

inline void InferBatchStatistics::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&compute_input_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&batch_size_) -
    reinterpret_cast<char*>(&compute_input_)) + sizeof(batch_size_));
}

InferBatchStatistics::~InferBatchStatistics() {
  // @@protoc_insertion_point(destructor:hercules.proto.InferBatchStatistics)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InferBatchStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete compute_input_;
  if (this != internal_default_instance()) delete compute_infer_;
  if (this != internal_default_instance()) delete compute_output_;
}

void InferBatchStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InferBatchStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.InferBatchStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && compute_input_ != nullptr) {
    delete compute_input_;
  }
  compute_input_ = nullptr;
  if (GetArenaForAllocation() == nullptr && compute_infer_ != nullptr) {
    delete compute_infer_;
  }
  compute_infer_ = nullptr;
  if (GetArenaForAllocation() == nullptr && compute_output_ != nullptr) {
    delete compute_output_;
  }
  compute_output_ = nullptr;
  batch_size_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferBatchStatistics::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 batch_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          batch_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_input = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_input(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_infer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_infer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_output = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_output(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InferBatchStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.InferBatchStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 batch_size = 1;
  if (this->_internal_batch_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_batch_size(), target);
  }

  // .hercules.proto.StatisticDuration compute_input = 2;
  if (this->_internal_has_compute_input()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::compute_input(this),
        _Internal::compute_input(this).GetCachedSize(), target, stream);
  }

  // .hercules.proto.StatisticDuration compute_infer = 3;
  if (this->_internal_has_compute_infer()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::compute_infer(this),
        _Internal::compute_infer(this).GetCachedSize(), target, stream);
  }

  // .hercules.proto.StatisticDuration compute_output = 4;
  if (this->_internal_has_compute_output()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::compute_output(this),
        _Internal::compute_output(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.InferBatchStatistics)
  return target;
}

size_t InferBatchStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.InferBatchStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hercules.proto.StatisticDuration compute_input = 2;
  if (this->_internal_has_compute_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_input_);
  }

  // .hercules.proto.StatisticDuration compute_infer = 3;
  if (this->_internal_has_compute_infer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_infer_);
  }

  // .hercules.proto.StatisticDuration compute_output = 4;
  if (this->_internal_has_compute_output()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_output_);
  }

  // uint64 batch_size = 1;
  if (this->_internal_batch_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_batch_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InferBatchStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InferBatchStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InferBatchStatistics::GetClassData() const { return &_class_data_; }

void InferBatchStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InferBatchStatistics *>(to)->MergeFrom(
      static_cast<const InferBatchStatistics &>(from));
}


void InferBatchStatistics::MergeFrom(const InferBatchStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.InferBatchStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_compute_input()) {
    _internal_mutable_compute_input()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_input());
  }
  if (from._internal_has_compute_infer()) {
    _internal_mutable_compute_infer()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_infer());
  }
  if (from._internal_has_compute_output()) {
    _internal_mutable_compute_output()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_output());
  }
  if (from._internal_batch_size() != 0) {
    _internal_set_batch_size(from._internal_batch_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InferBatchStatistics::CopyFrom(const InferBatchStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.InferBatchStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferBatchStatistics::IsInitialized() const {
  return true;
}

void InferBatchStatistics::InternalSwap(InferBatchStatistics* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InferBatchStatistics, batch_size_)
      + sizeof(InferBatchStatistics::batch_size_)
      - PROTOBUF_FIELD_OFFSET(InferBatchStatistics, compute_input_)>(
          reinterpret_cast<char*>(&compute_input_),
          reinterpret_cast<char*>(&other->compute_input_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InferBatchStatistics::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[29]);
}

// ===================================================================

class ModelStatistics::_Internal {
 public:
  static const ::hercules::proto::InferStatistics& inference_stats(const ModelStatistics* msg);
};

const ::hercules::proto::InferStatistics&
ModelStatistics::_Internal::inference_stats(const ModelStatistics* msg) {
  return *msg->inference_stats_;
}
ModelStatistics::ModelStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  batch_stats_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelStatistics)
}
ModelStatistics::ModelStatistics(const ModelStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      batch_stats_(from.batch_stats_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_inference_stats()) {
    inference_stats_ = new ::hercules::proto::InferStatistics(*from.inference_stats_);
  } else {
    inference_stats_ = nullptr;
  }
  ::memcpy(&last_inference_, &from.last_inference_,
    static_cast<size_t>(reinterpret_cast<char*>(&execution_count_) -
    reinterpret_cast<char*>(&last_inference_)) + sizeof(execution_count_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelStatistics)
}

inline void ModelStatistics::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&inference_stats_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&execution_count_) -
    reinterpret_cast<char*>(&inference_stats_)) + sizeof(execution_count_));
}

ModelStatistics::~ModelStatistics() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelStatistics)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  version_.Destroy();
  if (this != internal_default_instance()) delete inference_stats_;
}

void ModelStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  batch_stats_.Clear();
  name_.ClearToEmpty();
  version_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && inference_stats_ != nullptr) {
    delete inference_stats_;
  }
  inference_stats_ = nullptr;
  ::memset(&last_inference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&execution_count_) -
      reinterpret_cast<char*>(&last_inference_)) + sizeof(execution_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStatistics::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelStatistics.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelStatistics.version"));
        } else
          goto handle_unusual;
        continue;
      // uint64 last_inference = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          last_inference_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 inference_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          inference_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 execution_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          execution_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .hercules.proto.InferStatistics inference_stats = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_inference_stats(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .hercules.proto.InferBatchStatistics batch_stats = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_batch_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelStatistics.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelStatistics.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // uint64 last_inference = 3;
  if (this->_internal_last_inference() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_last_inference(), target);
  }

  // uint64 inference_count = 4;
  if (this->_internal_inference_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_inference_count(), target);
  }

  // uint64 execution_count = 5;
  if (this->_internal_execution_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_execution_count(), target);
  }

  // .hercules.proto.InferStatistics inference_stats = 6;
  if (this->_internal_has_inference_stats()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::inference_stats(this),
        _Internal::inference_stats(this).GetCachedSize(), target, stream);
  }

  // repeated .hercules.proto.InferBatchStatistics batch_stats = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_batch_stats_size()); i < n; i++) {
    const auto& repfield = this->_internal_batch_stats(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelStatistics)
  return target;
}

size_t ModelStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hercules.proto.InferBatchStatistics batch_stats = 7;
  total_size += 1UL * this->_internal_batch_stats_size();
  for (const auto& msg : this->batch_stats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // .hercules.proto.InferStatistics inference_stats = 6;
  if (this->_internal_has_inference_stats()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *inference_stats_);
  }

  // uint64 last_inference = 3;
  if (this->_internal_last_inference() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_last_inference());
  }

  // uint64 inference_count = 4;
  if (this->_internal_inference_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_inference_count());
  }

  // uint64 execution_count = 5;
  if (this->_internal_execution_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_execution_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelStatistics::GetClassData() const { return &_class_data_; }

void ModelStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelStatistics *>(to)->MergeFrom(
      static_cast<const ModelStatistics &>(from));
}


void ModelStatistics::MergeFrom(const ModelStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  batch_stats_.MergeFrom(from.batch_stats_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (from._internal_has_inference_stats()) {
    _internal_mutable_inference_stats()->::hercules::proto::InferStatistics::MergeFrom(from._internal_inference_stats());
  }
  if (from._internal_last_inference() != 0) {
    _internal_set_last_inference(from._internal_last_inference());
  }
  if (from._internal_inference_count() != 0) {
    _internal_set_inference_count(from._internal_inference_count());
  }
  if (from._internal_execution_count() != 0) {
    _internal_set_execution_count(from._internal_execution_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelStatistics::CopyFrom(const ModelStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStatistics::IsInitialized() const {
  return true;
}

void ModelStatistics::InternalSwap(ModelStatistics* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  batch_stats_.InternalSwap(&other->batch_stats_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelStatistics, execution_count_)
      + sizeof(ModelStatistics::execution_count_)
      - PROTOBUF_FIELD_OFFSET(ModelStatistics, inference_stats_)>(
          reinterpret_cast<char*>(&inference_stats_),
          reinterpret_cast<char*>(&other->inference_stats_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStatistics::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[30]);
}

// ===================================================================

class ModelStatisticsResponse::_Internal {
 public:
};

ModelStatisticsResponse::ModelStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  model_stats_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelStatisticsResponse)
}
ModelStatisticsResponse::ModelStatisticsResponse(const ModelStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      model_stats_(from.model_stats_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelStatisticsResponse)
}

inline void ModelStatisticsResponse::SharedCtor() {
}

ModelStatisticsResponse::~ModelStatisticsResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModelStatisticsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_stats_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .hercules.proto.ModelStatistics model_stats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_model_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hercules.proto.ModelStatistics model_stats = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_model_stats_size()); i < n; i++) {
    const auto& repfield = this->_internal_model_stats(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelStatisticsResponse)
  return target;
}

size_t ModelStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hercules.proto.ModelStatistics model_stats = 1;
  total_size += 1UL * this->_internal_model_stats_size();
  for (const auto& msg : this->model_stats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelStatisticsResponse::GetClassData() const { return &_class_data_; }

void ModelStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelStatisticsResponse *>(to)->MergeFrom(
      static_cast<const ModelStatisticsResponse &>(from));
}


void ModelStatisticsResponse::MergeFrom(const ModelStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  model_stats_.MergeFrom(from.model_stats_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelStatisticsResponse::CopyFrom(const ModelStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStatisticsResponse::IsInitialized() const {
  return true;
}

void ModelStatisticsResponse::InternalSwap(ModelStatisticsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  model_stats_.InternalSwap(&other->model_stats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[31]);
}

// ===================================================================

class ModelRepositoryParameter::_Internal {
 public:
};

ModelRepositoryParameter::ModelRepositoryParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelRepositoryParameter)
}
ModelRepositoryParameter::ModelRepositoryParameter(const ModelRepositoryParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_parameter_choice();
  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _internal_set_string_param(from._internal_string_param());
      break;
    }
    case kBytesParam: {
      _internal_set_bytes_param(from._internal_bytes_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelRepositoryParameter)
}

inline void ModelRepositoryParameter::SharedCtor() {
clear_has_parameter_choice();
}

ModelRepositoryParameter::~ModelRepositoryParameter() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelRepositoryParameter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelRepositoryParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_parameter_choice()) {
    clear_parameter_choice();
  }
}

void ModelRepositoryParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelRepositoryParameter::clear_parameter_choice() {
// @@protoc_insertion_point(one_of_clear_start:hercules.proto.ModelRepositoryParameter)
  switch (parameter_choice_case()) {
    case kBoolParam: {
      // No need to clear
      break;
    }
    case kInt64Param: {
      // No need to clear
      break;
    }
    case kStringParam: {
      parameter_choice_.string_param_.Destroy();
      break;
    }
    case kBytesParam: {
      parameter_choice_.bytes_param_.Destroy();
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETER_CHOICE_NOT_SET;
}


void ModelRepositoryParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelRepositoryParameter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameter_choice();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelRepositoryParameter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool bool_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_bool_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 int64_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_int64_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string string_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_string_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.ModelRepositoryParameter.string_param"));
        } else
          goto handle_unusual;
        continue;
      // bytes bytes_param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_bytes_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelRepositoryParameter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelRepositoryParameter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_param = 1;
  if (_internal_has_bool_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_bool_param(), target);
  }

  // int64 int64_param = 2;
  if (_internal_has_int64_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_int64_param(), target);
  }

  // string string_param = 3;
  if (_internal_has_string_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_param().data(), static_cast<int>(this->_internal_string_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelRepositoryParameter.string_param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_string_param(), target);
  }

  // bytes bytes_param = 4;
  if (_internal_has_bytes_param()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_bytes_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelRepositoryParameter)
  return target;
}

size_t ModelRepositoryParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelRepositoryParameter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (parameter_choice_case()) {
    // bool bool_param = 1;
    case kBoolParam: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_param = 2;
    case kInt64Param: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_int64_param());
      break;
    }
    // string string_param = 3;
    case kStringParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_param());
      break;
    }
    // bytes bytes_param = 4;
    case kBytesParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelRepositoryParameter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelRepositoryParameter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelRepositoryParameter::GetClassData() const { return &_class_data_; }

void ModelRepositoryParameter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelRepositoryParameter *>(to)->MergeFrom(
      static_cast<const ModelRepositoryParameter &>(from));
}


void ModelRepositoryParameter::MergeFrom(const ModelRepositoryParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelRepositoryParameter)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _internal_set_string_param(from._internal_string_param());
      break;
    }
    case kBytesParam: {
      _internal_set_bytes_param(from._internal_bytes_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelRepositoryParameter::CopyFrom(const ModelRepositoryParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelRepositoryParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelRepositoryParameter::IsInitialized() const {
  return true;
}

void ModelRepositoryParameter::InternalSwap(ModelRepositoryParameter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(parameter_choice_, other->parameter_choice_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelRepositoryParameter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[32]);
}

// ===================================================================

class RepositoryIndexRequest::_Internal {
 public:
};

RepositoryIndexRequest::RepositoryIndexRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryIndexRequest)
}
RepositoryIndexRequest::RepositoryIndexRequest(const RepositoryIndexRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  repository_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    repository_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_repository_name().empty()) {
    repository_name_.Set(from._internal_repository_name(), 
      GetArenaForAllocation());
  }
  ready_ = from.ready_;
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryIndexRequest)
}

inline void RepositoryIndexRequest::SharedCtor() {
repository_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  repository_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ready_ = false;
}

RepositoryIndexRequest::~RepositoryIndexRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryIndexRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RepositoryIndexRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  repository_name_.Destroy();
}

void RepositoryIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RepositoryIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryIndexRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repository_name_.ClearToEmpty();
  ready_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryIndexRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string repository_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_repository_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.RepositoryIndexRequest.repository_name"));
        } else
          goto handle_unusual;
        continue;
      // bool ready = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositoryIndexRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryIndexRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_repository_name().data(), static_cast<int>(this->_internal_repository_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryIndexRequest.repository_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_repository_name(), target);
  }

  // bool ready = 2;
  if (this->_internal_ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_ready(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryIndexRequest)
  return target;
}

size_t RepositoryIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryIndexRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_repository_name());
  }

  // bool ready = 2;
  if (this->_internal_ready() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryIndexRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RepositoryIndexRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryIndexRequest::GetClassData() const { return &_class_data_; }

void RepositoryIndexRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RepositoryIndexRequest *>(to)->MergeFrom(
      static_cast<const RepositoryIndexRequest &>(from));
}


void RepositoryIndexRequest::MergeFrom(const RepositoryIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_repository_name().empty()) {
    _internal_set_repository_name(from._internal_repository_name());
  }
  if (from._internal_ready() != 0) {
    _internal_set_ready(from._internal_ready());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositoryIndexRequest::CopyFrom(const RepositoryIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryIndexRequest::IsInitialized() const {
  return true;
}

void RepositoryIndexRequest::InternalSwap(RepositoryIndexRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &repository_name_, lhs_arena,
      &other->repository_name_, rhs_arena
  );
  swap(ready_, other->ready_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryIndexRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[33]);
}

// ===================================================================

class RepositoryIndexResponse_ModelIndex::_Internal {
 public:
};

RepositoryIndexResponse_ModelIndex::RepositoryIndexResponse_ModelIndex(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryIndexResponse.ModelIndex)
}
RepositoryIndexResponse_ModelIndex::RepositoryIndexResponse_ModelIndex(const RepositoryIndexResponse_ModelIndex& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    state_.Set(from._internal_state(), 
      GetArenaForAllocation());
  }
  reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reason().empty()) {
    reason_.Set(from._internal_reason(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryIndexResponse.ModelIndex)
}

inline void RepositoryIndexResponse_ModelIndex::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
state_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  state_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
reason_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  reason_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RepositoryIndexResponse_ModelIndex::~RepositoryIndexResponse_ModelIndex() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryIndexResponse.ModelIndex)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RepositoryIndexResponse_ModelIndex::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  version_.Destroy();
  state_.Destroy();
  reason_.Destroy();
}

void RepositoryIndexResponse_ModelIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RepositoryIndexResponse_ModelIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  version_.ClearToEmpty();
  state_.ClearToEmpty();
  reason_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryIndexResponse_ModelIndex::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.RepositoryIndexResponse.ModelIndex.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.RepositoryIndexResponse.ModelIndex.version"));
        } else
          goto handle_unusual;
        continue;
      // string state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.RepositoryIndexResponse.ModelIndex.state"));
        } else
          goto handle_unusual;
        continue;
      // string reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.RepositoryIndexResponse.ModelIndex.reason"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositoryIndexResponse_ModelIndex::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryIndexResponse.ModelIndex.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryIndexResponse.ModelIndex.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryIndexResponse.ModelIndex.state");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_state(), target);
  }

  // string reason = 4;
  if (!this->_internal_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryIndexResponse.ModelIndex.reason");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryIndexResponse.ModelIndex)
  return target;
}

size_t RepositoryIndexResponse_ModelIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string reason = 4;
  if (!this->_internal_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryIndexResponse_ModelIndex::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RepositoryIndexResponse_ModelIndex::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryIndexResponse_ModelIndex::GetClassData() const { return &_class_data_; }

void RepositoryIndexResponse_ModelIndex::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RepositoryIndexResponse_ModelIndex *>(to)->MergeFrom(
      static_cast<const RepositoryIndexResponse_ModelIndex &>(from));
}


void RepositoryIndexResponse_ModelIndex::MergeFrom(const RepositoryIndexResponse_ModelIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (!from._internal_state().empty()) {
    _internal_set_state(from._internal_state());
  }
  if (!from._internal_reason().empty()) {
    _internal_set_reason(from._internal_reason());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositoryIndexResponse_ModelIndex::CopyFrom(const RepositoryIndexResponse_ModelIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryIndexResponse_ModelIndex::IsInitialized() const {
  return true;
}

void RepositoryIndexResponse_ModelIndex::InternalSwap(RepositoryIndexResponse_ModelIndex* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &state_, lhs_arena,
      &other->state_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &reason_, lhs_arena,
      &other->reason_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryIndexResponse_ModelIndex::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[34]);
}

// ===================================================================

class RepositoryIndexResponse::_Internal {
 public:
};

RepositoryIndexResponse::RepositoryIndexResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  models_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryIndexResponse)
}
RepositoryIndexResponse::RepositoryIndexResponse(const RepositoryIndexResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      models_(from.models_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryIndexResponse)
}

inline void RepositoryIndexResponse::SharedCtor() {
}

RepositoryIndexResponse::~RepositoryIndexResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryIndexResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RepositoryIndexResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RepositoryIndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RepositoryIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryIndexResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  models_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryIndexResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .hercules.proto.RepositoryIndexResponse.ModelIndex models = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositoryIndexResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryIndexResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hercules.proto.RepositoryIndexResponse.ModelIndex models = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryIndexResponse)
  return target;
}

size_t RepositoryIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryIndexResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hercules.proto.RepositoryIndexResponse.ModelIndex models = 1;
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryIndexResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RepositoryIndexResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryIndexResponse::GetClassData() const { return &_class_data_; }

void RepositoryIndexResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RepositoryIndexResponse *>(to)->MergeFrom(
      static_cast<const RepositoryIndexResponse &>(from));
}


void RepositoryIndexResponse::MergeFrom(const RepositoryIndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  models_.MergeFrom(from.models_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositoryIndexResponse::CopyFrom(const RepositoryIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryIndexResponse::IsInitialized() const {
  return true;
}

void RepositoryIndexResponse::InternalSwap(RepositoryIndexResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  models_.InternalSwap(&other->models_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryIndexResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[35]);
}

// ===================================================================

RepositoryModelLoadRequest_ParametersEntry_DoNotUse::RepositoryModelLoadRequest_ParametersEntry_DoNotUse() {}
RepositoryModelLoadRequest_ParametersEntry_DoNotUse::RepositoryModelLoadRequest_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RepositoryModelLoadRequest_ParametersEntry_DoNotUse::MergeFrom(const RepositoryModelLoadRequest_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelLoadRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[36]);
}

// ===================================================================

class RepositoryModelLoadRequest::_Internal {
 public:
};

RepositoryModelLoadRequest::RepositoryModelLoadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parameters_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &RepositoryModelLoadRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryModelLoadRequest)
}
RepositoryModelLoadRequest::RepositoryModelLoadRequest(const RepositoryModelLoadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  repository_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    repository_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_repository_name().empty()) {
    repository_name_.Set(from._internal_repository_name(), 
      GetArenaForAllocation());
  }
  model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    model_name_.Set(from._internal_model_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryModelLoadRequest)
}

inline void RepositoryModelLoadRequest::SharedCtor() {
repository_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  repository_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
model_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RepositoryModelLoadRequest::~RepositoryModelLoadRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryModelLoadRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void RepositoryModelLoadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parameters_.Destruct();
  repository_name_.Destroy();
  model_name_.Destroy();
}

void RepositoryModelLoadRequest::ArenaDtor(void* object) {
  RepositoryModelLoadRequest* _this = reinterpret_cast< RepositoryModelLoadRequest* >(object);
  _this->parameters_.Destruct();
}
void RepositoryModelLoadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RepositoryModelLoadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryModelLoadRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  repository_name_.ClearToEmpty();
  model_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryModelLoadRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string repository_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_repository_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.RepositoryModelLoadRequest.repository_name"));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.RepositoryModelLoadRequest.model_name"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositoryModelLoadRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryModelLoadRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_repository_name().data(), static_cast<int>(this->_internal_repository_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryModelLoadRequest.repository_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_repository_name(), target);
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryModelLoadRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::ModelRepositoryParameter>;
    using WireHelper = RepositoryModelLoadRequest_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.RepositoryModelLoadRequest.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryModelLoadRequest)
  return target;
}

size_t RepositoryModelLoadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryModelLoadRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += RepositoryModelLoadRequest_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_repository_name());
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryModelLoadRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RepositoryModelLoadRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryModelLoadRequest::GetClassData() const { return &_class_data_; }

void RepositoryModelLoadRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RepositoryModelLoadRequest *>(to)->MergeFrom(
      static_cast<const RepositoryModelLoadRequest &>(from));
}


void RepositoryModelLoadRequest::MergeFrom(const RepositoryModelLoadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryModelLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (!from._internal_repository_name().empty()) {
    _internal_set_repository_name(from._internal_repository_name());
  }
  if (!from._internal_model_name().empty()) {
    _internal_set_model_name(from._internal_model_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositoryModelLoadRequest::CopyFrom(const RepositoryModelLoadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryModelLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryModelLoadRequest::IsInitialized() const {
  return true;
}

void RepositoryModelLoadRequest::InternalSwap(RepositoryModelLoadRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parameters_.InternalSwap(&other->parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &repository_name_, lhs_arena,
      &other->repository_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_name_, lhs_arena,
      &other->model_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelLoadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[37]);
}

// ===================================================================

class RepositoryModelLoadResponse::_Internal {
 public:
};

RepositoryModelLoadResponse::RepositoryModelLoadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryModelLoadResponse)
}
RepositoryModelLoadResponse::RepositoryModelLoadResponse(const RepositoryModelLoadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryModelLoadResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryModelLoadResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryModelLoadResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelLoadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[38]);
}

// ===================================================================

RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse() {}
RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::MergeFrom(const RepositoryModelUnloadRequest_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[39]);
}

// ===================================================================

class RepositoryModelUnloadRequest::_Internal {
 public:
};

RepositoryModelUnloadRequest::RepositoryModelUnloadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parameters_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &RepositoryModelUnloadRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryModelUnloadRequest)
}
RepositoryModelUnloadRequest::RepositoryModelUnloadRequest(const RepositoryModelUnloadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  repository_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    repository_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_repository_name().empty()) {
    repository_name_.Set(from._internal_repository_name(), 
      GetArenaForAllocation());
  }
  model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    model_name_.Set(from._internal_model_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryModelUnloadRequest)
}

inline void RepositoryModelUnloadRequest::SharedCtor() {
repository_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  repository_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
model_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RepositoryModelUnloadRequest::~RepositoryModelUnloadRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryModelUnloadRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void RepositoryModelUnloadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parameters_.Destruct();
  repository_name_.Destroy();
  model_name_.Destroy();
}

void RepositoryModelUnloadRequest::ArenaDtor(void* object) {
  RepositoryModelUnloadRequest* _this = reinterpret_cast< RepositoryModelUnloadRequest* >(object);
  _this->parameters_.Destruct();
}
void RepositoryModelUnloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RepositoryModelUnloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryModelUnloadRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  repository_name_.ClearToEmpty();
  model_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryModelUnloadRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string repository_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_repository_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.RepositoryModelUnloadRequest.repository_name"));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.RepositoryModelUnloadRequest.model_name"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositoryModelUnloadRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryModelUnloadRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_repository_name().data(), static_cast<int>(this->_internal_repository_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryModelUnloadRequest.repository_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_repository_name(), target);
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryModelUnloadRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::ModelRepositoryParameter>;
    using WireHelper = RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.RepositoryModelUnloadRequest.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryModelUnloadRequest)
  return target;
}

size_t RepositoryModelUnloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryModelUnloadRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_repository_name());
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryModelUnloadRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RepositoryModelUnloadRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryModelUnloadRequest::GetClassData() const { return &_class_data_; }

void RepositoryModelUnloadRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RepositoryModelUnloadRequest *>(to)->MergeFrom(
      static_cast<const RepositoryModelUnloadRequest &>(from));
}


void RepositoryModelUnloadRequest::MergeFrom(const RepositoryModelUnloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryModelUnloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (!from._internal_repository_name().empty()) {
    _internal_set_repository_name(from._internal_repository_name());
  }
  if (!from._internal_model_name().empty()) {
    _internal_set_model_name(from._internal_model_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositoryModelUnloadRequest::CopyFrom(const RepositoryModelUnloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryModelUnloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryModelUnloadRequest::IsInitialized() const {
  return true;
}

void RepositoryModelUnloadRequest::InternalSwap(RepositoryModelUnloadRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parameters_.InternalSwap(&other->parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &repository_name_, lhs_arena,
      &other->repository_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_name_, lhs_arena,
      &other->model_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelUnloadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[40]);
}

// ===================================================================

class RepositoryModelUnloadResponse::_Internal {
 public:
};

RepositoryModelUnloadResponse::RepositoryModelUnloadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryModelUnloadResponse)
}
RepositoryModelUnloadResponse::RepositoryModelUnloadResponse(const RepositoryModelUnloadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryModelUnloadResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryModelUnloadResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryModelUnloadResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelUnloadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[41]);
}

// ===================================================================

class SystemSharedMemoryStatusRequest::_Internal {
 public:
};

SystemSharedMemoryStatusRequest::SystemSharedMemoryStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryStatusRequest)
}
SystemSharedMemoryStatusRequest::SystemSharedMemoryStatusRequest(const SystemSharedMemoryStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryStatusRequest)
}

inline void SystemSharedMemoryStatusRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SystemSharedMemoryStatusRequest::~SystemSharedMemoryStatusRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SystemSharedMemoryStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void SystemSharedMemoryStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemSharedMemoryStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryStatusRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemSharedMemoryStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryStatusRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryStatusRequest)
  return target;
}

size_t SystemSharedMemoryStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SystemSharedMemoryStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryStatusRequest::GetClassData() const { return &_class_data_; }

void SystemSharedMemoryStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SystemSharedMemoryStatusRequest *>(to)->MergeFrom(
      static_cast<const SystemSharedMemoryStatusRequest &>(from));
}


void SystemSharedMemoryStatusRequest::MergeFrom(const SystemSharedMemoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemSharedMemoryStatusRequest::CopyFrom(const SystemSharedMemoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryStatusRequest::IsInitialized() const {
  return true;
}

void SystemSharedMemoryStatusRequest::InternalSwap(SystemSharedMemoryStatusRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[42]);
}

// ===================================================================

class SystemSharedMemoryStatusResponse_RegionStatus::_Internal {
 public:
};

SystemSharedMemoryStatusResponse_RegionStatus::SystemSharedMemoryStatusResponse_RegionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
}
SystemSharedMemoryStatusResponse_RegionStatus::SystemSharedMemoryStatusResponse_RegionStatus(const SystemSharedMemoryStatusResponse_RegionStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(from._internal_key(), 
      GetArenaForAllocation());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
}

inline void SystemSharedMemoryStatusResponse_RegionStatus::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
key_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
}

SystemSharedMemoryStatusResponse_RegionStatus::~SystemSharedMemoryStatusResponse_RegionStatus() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SystemSharedMemoryStatusResponse_RegionStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  key_.Destroy();
}

void SystemSharedMemoryStatusResponse_RegionStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemSharedMemoryStatusResponse_RegionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  key_.ClearToEmpty();
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryStatusResponse_RegionStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus.name"));
        } else
          goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus.key"));
        } else
          goto handle_unusual;
        continue;
      // uint64 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 byte_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemSharedMemoryStatusResponse_RegionStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_offset(), target);
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  return target;
}

size_t SystemSharedMemoryStatusResponse_RegionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_byte_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryStatusResponse_RegionStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SystemSharedMemoryStatusResponse_RegionStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryStatusResponse_RegionStatus::GetClassData() const { return &_class_data_; }

void SystemSharedMemoryStatusResponse_RegionStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SystemSharedMemoryStatusResponse_RegionStatus *>(to)->MergeFrom(
      static_cast<const SystemSharedMemoryStatusResponse_RegionStatus &>(from));
}


void SystemSharedMemoryStatusResponse_RegionStatus::MergeFrom(const SystemSharedMemoryStatusResponse_RegionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_byte_size() != 0) {
    _internal_set_byte_size(from._internal_byte_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemSharedMemoryStatusResponse_RegionStatus::CopyFrom(const SystemSharedMemoryStatusResponse_RegionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryStatusResponse_RegionStatus::IsInitialized() const {
  return true;
}

void SystemSharedMemoryStatusResponse_RegionStatus::InternalSwap(SystemSharedMemoryStatusResponse_RegionStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemSharedMemoryStatusResponse_RegionStatus, byte_size_)
      + sizeof(SystemSharedMemoryStatusResponse_RegionStatus::byte_size_)
      - PROTOBUF_FIELD_OFFSET(SystemSharedMemoryStatusResponse_RegionStatus, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusResponse_RegionStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[43]);
}

// ===================================================================

SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse() {}
SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::MergeFrom(const SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[44]);
}

// ===================================================================

class SystemSharedMemoryStatusResponse::_Internal {
 public:
};

SystemSharedMemoryStatusResponse::SystemSharedMemoryStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  regions_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &SystemSharedMemoryStatusResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryStatusResponse)
}
SystemSharedMemoryStatusResponse::SystemSharedMemoryStatusResponse(const SystemSharedMemoryStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  regions_.MergeFrom(from.regions_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryStatusResponse)
}

inline void SystemSharedMemoryStatusResponse::SharedCtor() {
}

SystemSharedMemoryStatusResponse::~SystemSharedMemoryStatusResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void SystemSharedMemoryStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  regions_.Destruct();
}

void SystemSharedMemoryStatusResponse::ArenaDtor(void* object) {
  SystemSharedMemoryStatusResponse* _this = reinterpret_cast< SystemSharedMemoryStatusResponse* >(object);
  _this->regions_.Destruct();
}
void SystemSharedMemoryStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemSharedMemoryStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus> regions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&regions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemSharedMemoryStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus> regions = 1;
  if (!this->_internal_regions().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus>;
    using WireHelper = SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_regions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.SystemSharedMemoryStatusResponse.RegionsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryStatusResponse)
  return target;
}

size_t SystemSharedMemoryStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus> regions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_regions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus >::const_iterator
      it = this->_internal_regions().begin();
      it != this->_internal_regions().end(); ++it) {
    total_size += SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SystemSharedMemoryStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryStatusResponse::GetClassData() const { return &_class_data_; }

void SystemSharedMemoryStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SystemSharedMemoryStatusResponse *>(to)->MergeFrom(
      static_cast<const SystemSharedMemoryStatusResponse &>(from));
}


void SystemSharedMemoryStatusResponse::MergeFrom(const SystemSharedMemoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemSharedMemoryStatusResponse::CopyFrom(const SystemSharedMemoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryStatusResponse::IsInitialized() const {
  return true;
}

void SystemSharedMemoryStatusResponse::InternalSwap(SystemSharedMemoryStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  regions_.InternalSwap(&other->regions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[45]);
}

// ===================================================================

class SystemSharedMemoryRegisterRequest::_Internal {
 public:
};

SystemSharedMemoryRegisterRequest::SystemSharedMemoryRegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryRegisterRequest)
}
SystemSharedMemoryRegisterRequest::SystemSharedMemoryRegisterRequest(const SystemSharedMemoryRegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(from._internal_key(), 
      GetArenaForAllocation());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryRegisterRequest)
}

inline void SystemSharedMemoryRegisterRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
key_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
}

SystemSharedMemoryRegisterRequest::~SystemSharedMemoryRegisterRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryRegisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SystemSharedMemoryRegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  key_.Destroy();
}

void SystemSharedMemoryRegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemSharedMemoryRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  key_.ClearToEmpty();
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryRegisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryRegisterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryRegisterRequest.key"));
        } else
          goto handle_unusual;
        continue;
      // uint64 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 byte_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemSharedMemoryRegisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryRegisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryRegisterRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_offset(), target);
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryRegisterRequest)
  return target;
}

size_t SystemSharedMemoryRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_byte_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryRegisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SystemSharedMemoryRegisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryRegisterRequest::GetClassData() const { return &_class_data_; }

void SystemSharedMemoryRegisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SystemSharedMemoryRegisterRequest *>(to)->MergeFrom(
      static_cast<const SystemSharedMemoryRegisterRequest &>(from));
}


void SystemSharedMemoryRegisterRequest::MergeFrom(const SystemSharedMemoryRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_byte_size() != 0) {
    _internal_set_byte_size(from._internal_byte_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemSharedMemoryRegisterRequest::CopyFrom(const SystemSharedMemoryRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryRegisterRequest::IsInitialized() const {
  return true;
}

void SystemSharedMemoryRegisterRequest::InternalSwap(SystemSharedMemoryRegisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemSharedMemoryRegisterRequest, byte_size_)
      + sizeof(SystemSharedMemoryRegisterRequest::byte_size_)
      - PROTOBUF_FIELD_OFFSET(SystemSharedMemoryRegisterRequest, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryRegisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[46]);
}

// ===================================================================

class SystemSharedMemoryRegisterResponse::_Internal {
 public:
};

SystemSharedMemoryRegisterResponse::SystemSharedMemoryRegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryRegisterResponse)
}
SystemSharedMemoryRegisterResponse::SystemSharedMemoryRegisterResponse(const SystemSharedMemoryRegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryRegisterResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryRegisterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryRegisterResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryRegisterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[47]);
}

// ===================================================================

class SystemSharedMemoryUnregisterRequest::_Internal {
 public:
};

SystemSharedMemoryUnregisterRequest::SystemSharedMemoryUnregisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryUnregisterRequest)
}
SystemSharedMemoryUnregisterRequest::SystemSharedMemoryUnregisterRequest(const SystemSharedMemoryUnregisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryUnregisterRequest)
}

inline void SystemSharedMemoryUnregisterRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SystemSharedMemoryUnregisterRequest::~SystemSharedMemoryUnregisterRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryUnregisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SystemSharedMemoryUnregisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void SystemSharedMemoryUnregisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemSharedMemoryUnregisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryUnregisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryUnregisterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemSharedMemoryUnregisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryUnregisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryUnregisterRequest)
  return target;
}

size_t SystemSharedMemoryUnregisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryUnregisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SystemSharedMemoryUnregisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryUnregisterRequest::GetClassData() const { return &_class_data_; }

void SystemSharedMemoryUnregisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SystemSharedMemoryUnregisterRequest *>(to)->MergeFrom(
      static_cast<const SystemSharedMemoryUnregisterRequest &>(from));
}


void SystemSharedMemoryUnregisterRequest::MergeFrom(const SystemSharedMemoryUnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemSharedMemoryUnregisterRequest::CopyFrom(const SystemSharedMemoryUnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryUnregisterRequest::IsInitialized() const {
  return true;
}

void SystemSharedMemoryUnregisterRequest::InternalSwap(SystemSharedMemoryUnregisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryUnregisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[48]);
}

// ===================================================================

class SystemSharedMemoryUnregisterResponse::_Internal {
 public:
};

SystemSharedMemoryUnregisterResponse::SystemSharedMemoryUnregisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryUnregisterResponse)
}
SystemSharedMemoryUnregisterResponse::SystemSharedMemoryUnregisterResponse(const SystemSharedMemoryUnregisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryUnregisterResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryUnregisterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryUnregisterResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryUnregisterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[49]);
}

// ===================================================================

class CudaSharedMemoryStatusRequest::_Internal {
 public:
};

CudaSharedMemoryStatusRequest::CudaSharedMemoryStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryStatusRequest)
}
CudaSharedMemoryStatusRequest::CudaSharedMemoryStatusRequest(const CudaSharedMemoryStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryStatusRequest)
}

inline void CudaSharedMemoryStatusRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CudaSharedMemoryStatusRequest::~CudaSharedMemoryStatusRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CudaSharedMemoryStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void CudaSharedMemoryStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CudaSharedMemoryStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.CudaSharedMemoryStatusRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CudaSharedMemoryStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.CudaSharedMemoryStatusRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryStatusRequest)
  return target;
}

size_t CudaSharedMemoryStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CudaSharedMemoryStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryStatusRequest::GetClassData() const { return &_class_data_; }

void CudaSharedMemoryStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CudaSharedMemoryStatusRequest *>(to)->MergeFrom(
      static_cast<const CudaSharedMemoryStatusRequest &>(from));
}


void CudaSharedMemoryStatusRequest::MergeFrom(const CudaSharedMemoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CudaSharedMemoryStatusRequest::CopyFrom(const CudaSharedMemoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryStatusRequest::IsInitialized() const {
  return true;
}

void CudaSharedMemoryStatusRequest::InternalSwap(CudaSharedMemoryStatusRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[50]);
}

// ===================================================================

class CudaSharedMemoryStatusResponse_RegionStatus::_Internal {
 public:
};

CudaSharedMemoryStatusResponse_RegionStatus::CudaSharedMemoryStatusResponse_RegionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
}
CudaSharedMemoryStatusResponse_RegionStatus::CudaSharedMemoryStatusResponse_RegionStatus(const CudaSharedMemoryStatusResponse_RegionStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&device_id_, &from.device_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
}

inline void CudaSharedMemoryStatusResponse_RegionStatus::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&device_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
}

CudaSharedMemoryStatusResponse_RegionStatus::~CudaSharedMemoryStatusResponse_RegionStatus() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CudaSharedMemoryStatusResponse_RegionStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void CudaSharedMemoryStatusResponse_RegionStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CudaSharedMemoryStatusResponse_RegionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  ::memset(&device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryStatusResponse_RegionStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus.name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 device_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          device_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 byte_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CudaSharedMemoryStatusResponse_RegionStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint64 device_id = 2;
  if (this->_internal_device_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_device_id(), target);
  }

  // uint64 byte_size = 3;
  if (this->_internal_byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  return target;
}

size_t CudaSharedMemoryStatusResponse_RegionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 device_id = 2;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_device_id());
  }

  // uint64 byte_size = 3;
  if (this->_internal_byte_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_byte_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryStatusResponse_RegionStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CudaSharedMemoryStatusResponse_RegionStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryStatusResponse_RegionStatus::GetClassData() const { return &_class_data_; }

void CudaSharedMemoryStatusResponse_RegionStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CudaSharedMemoryStatusResponse_RegionStatus *>(to)->MergeFrom(
      static_cast<const CudaSharedMemoryStatusResponse_RegionStatus &>(from));
}


void CudaSharedMemoryStatusResponse_RegionStatus::MergeFrom(const CudaSharedMemoryStatusResponse_RegionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_device_id() != 0) {
    _internal_set_device_id(from._internal_device_id());
  }
  if (from._internal_byte_size() != 0) {
    _internal_set_byte_size(from._internal_byte_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CudaSharedMemoryStatusResponse_RegionStatus::CopyFrom(const CudaSharedMemoryStatusResponse_RegionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryStatusResponse_RegionStatus::IsInitialized() const {
  return true;
}

void CudaSharedMemoryStatusResponse_RegionStatus::InternalSwap(CudaSharedMemoryStatusResponse_RegionStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CudaSharedMemoryStatusResponse_RegionStatus, byte_size_)
      + sizeof(CudaSharedMemoryStatusResponse_RegionStatus::byte_size_)
      - PROTOBUF_FIELD_OFFSET(CudaSharedMemoryStatusResponse_RegionStatus, device_id_)>(
          reinterpret_cast<char*>(&device_id_),
          reinterpret_cast<char*>(&other->device_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusResponse_RegionStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[51]);
}

// ===================================================================

CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse() {}
CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::MergeFrom(const CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[52]);
}

// ===================================================================

class CudaSharedMemoryStatusResponse::_Internal {
 public:
};

CudaSharedMemoryStatusResponse::CudaSharedMemoryStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  regions_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &CudaSharedMemoryStatusResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryStatusResponse)
}
CudaSharedMemoryStatusResponse::CudaSharedMemoryStatusResponse(const CudaSharedMemoryStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  regions_.MergeFrom(from.regions_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryStatusResponse)
}

inline void CudaSharedMemoryStatusResponse::SharedCtor() {
}

CudaSharedMemoryStatusResponse::~CudaSharedMemoryStatusResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void CudaSharedMemoryStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  regions_.Destruct();
}

void CudaSharedMemoryStatusResponse::ArenaDtor(void* object) {
  CudaSharedMemoryStatusResponse* _this = reinterpret_cast< CudaSharedMemoryStatusResponse* >(object);
  _this->regions_.Destruct();
}
void CudaSharedMemoryStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CudaSharedMemoryStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus> regions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&regions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CudaSharedMemoryStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus> regions = 1;
  if (!this->_internal_regions().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus>;
    using WireHelper = CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_regions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.CudaSharedMemoryStatusResponse.RegionsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryStatusResponse)
  return target;
}

size_t CudaSharedMemoryStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus> regions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_regions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus >::const_iterator
      it = this->_internal_regions().begin();
      it != this->_internal_regions().end(); ++it) {
    total_size += CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CudaSharedMemoryStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryStatusResponse::GetClassData() const { return &_class_data_; }

void CudaSharedMemoryStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CudaSharedMemoryStatusResponse *>(to)->MergeFrom(
      static_cast<const CudaSharedMemoryStatusResponse &>(from));
}


void CudaSharedMemoryStatusResponse::MergeFrom(const CudaSharedMemoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CudaSharedMemoryStatusResponse::CopyFrom(const CudaSharedMemoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryStatusResponse::IsInitialized() const {
  return true;
}

void CudaSharedMemoryStatusResponse::InternalSwap(CudaSharedMemoryStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  regions_.InternalSwap(&other->regions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[53]);
}

// ===================================================================

class CudaSharedMemoryRegisterRequest::_Internal {
 public:
};

CudaSharedMemoryRegisterRequest::CudaSharedMemoryRegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryRegisterRequest)
}
CudaSharedMemoryRegisterRequest::CudaSharedMemoryRegisterRequest(const CudaSharedMemoryRegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  raw_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    raw_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_raw_handle().empty()) {
    raw_handle_.Set(from._internal_raw_handle(), 
      GetArenaForAllocation());
  }
  ::memcpy(&device_id_, &from.device_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryRegisterRequest)
}

inline void CudaSharedMemoryRegisterRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
raw_handle_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  raw_handle_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&device_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
}

CudaSharedMemoryRegisterRequest::~CudaSharedMemoryRegisterRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryRegisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CudaSharedMemoryRegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  raw_handle_.Destroy();
}

void CudaSharedMemoryRegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CudaSharedMemoryRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  raw_handle_.ClearToEmpty();
  ::memset(&device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryRegisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.CudaSharedMemoryRegisterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes raw_handle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_raw_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 device_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          device_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 byte_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CudaSharedMemoryRegisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.CudaSharedMemoryRegisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes raw_handle = 2;
  if (!this->_internal_raw_handle().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_raw_handle(), target);
  }

  // int64 device_id = 3;
  if (this->_internal_device_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_device_id(), target);
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryRegisterRequest)
  return target;
}

size_t CudaSharedMemoryRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes raw_handle = 2;
  if (!this->_internal_raw_handle().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_raw_handle());
  }

  // int64 device_id = 3;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_device_id());
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_byte_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryRegisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CudaSharedMemoryRegisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryRegisterRequest::GetClassData() const { return &_class_data_; }

void CudaSharedMemoryRegisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CudaSharedMemoryRegisterRequest *>(to)->MergeFrom(
      static_cast<const CudaSharedMemoryRegisterRequest &>(from));
}


void CudaSharedMemoryRegisterRequest::MergeFrom(const CudaSharedMemoryRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_raw_handle().empty()) {
    _internal_set_raw_handle(from._internal_raw_handle());
  }
  if (from._internal_device_id() != 0) {
    _internal_set_device_id(from._internal_device_id());
  }
  if (from._internal_byte_size() != 0) {
    _internal_set_byte_size(from._internal_byte_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CudaSharedMemoryRegisterRequest::CopyFrom(const CudaSharedMemoryRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryRegisterRequest::IsInitialized() const {
  return true;
}

void CudaSharedMemoryRegisterRequest::InternalSwap(CudaSharedMemoryRegisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &raw_handle_, lhs_arena,
      &other->raw_handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CudaSharedMemoryRegisterRequest, byte_size_)
      + sizeof(CudaSharedMemoryRegisterRequest::byte_size_)
      - PROTOBUF_FIELD_OFFSET(CudaSharedMemoryRegisterRequest, device_id_)>(
          reinterpret_cast<char*>(&device_id_),
          reinterpret_cast<char*>(&other->device_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryRegisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[54]);
}

// ===================================================================

class CudaSharedMemoryRegisterResponse::_Internal {
 public:
};

CudaSharedMemoryRegisterResponse::CudaSharedMemoryRegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryRegisterResponse)
}
CudaSharedMemoryRegisterResponse::CudaSharedMemoryRegisterResponse(const CudaSharedMemoryRegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryRegisterResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryRegisterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryRegisterResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryRegisterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[55]);
}

// ===================================================================

class CudaSharedMemoryUnregisterRequest::_Internal {
 public:
};

CudaSharedMemoryUnregisterRequest::CudaSharedMemoryUnregisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryUnregisterRequest)
}
CudaSharedMemoryUnregisterRequest::CudaSharedMemoryUnregisterRequest(const CudaSharedMemoryUnregisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryUnregisterRequest)
}

inline void CudaSharedMemoryUnregisterRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CudaSharedMemoryUnregisterRequest::~CudaSharedMemoryUnregisterRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryUnregisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CudaSharedMemoryUnregisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void CudaSharedMemoryUnregisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CudaSharedMemoryUnregisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryUnregisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.CudaSharedMemoryUnregisterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CudaSharedMemoryUnregisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.CudaSharedMemoryUnregisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryUnregisterRequest)
  return target;
}

size_t CudaSharedMemoryUnregisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryUnregisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CudaSharedMemoryUnregisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryUnregisterRequest::GetClassData() const { return &_class_data_; }

void CudaSharedMemoryUnregisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CudaSharedMemoryUnregisterRequest *>(to)->MergeFrom(
      static_cast<const CudaSharedMemoryUnregisterRequest &>(from));
}


void CudaSharedMemoryUnregisterRequest::MergeFrom(const CudaSharedMemoryUnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CudaSharedMemoryUnregisterRequest::CopyFrom(const CudaSharedMemoryUnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryUnregisterRequest::IsInitialized() const {
  return true;
}

void CudaSharedMemoryUnregisterRequest::InternalSwap(CudaSharedMemoryUnregisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryUnregisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[56]);
}

// ===================================================================

class CudaSharedMemoryUnregisterResponse::_Internal {
 public:
};

CudaSharedMemoryUnregisterResponse::CudaSharedMemoryUnregisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryUnregisterResponse)
}
CudaSharedMemoryUnregisterResponse::CudaSharedMemoryUnregisterResponse(const CudaSharedMemoryUnregisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryUnregisterResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryUnregisterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryUnregisterResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryUnregisterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[57]);
}

// ===================================================================

class TraceSettingRequest_SettingValue::_Internal {
 public:
};

TraceSettingRequest_SettingValue::TraceSettingRequest_SettingValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  value_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.TraceSettingRequest.SettingValue)
}
TraceSettingRequest_SettingValue::TraceSettingRequest_SettingValue(const TraceSettingRequest_SettingValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      value_(from.value_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.TraceSettingRequest.SettingValue)
}

inline void TraceSettingRequest_SettingValue::SharedCtor() {
}

TraceSettingRequest_SettingValue::~TraceSettingRequest_SettingValue() {
  // @@protoc_insertion_point(destructor:hercules.proto.TraceSettingRequest.SettingValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TraceSettingRequest_SettingValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TraceSettingRequest_SettingValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TraceSettingRequest_SettingValue::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.TraceSettingRequest.SettingValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingRequest_SettingValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.TraceSettingRequest.SettingValue.value"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TraceSettingRequest_SettingValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.TraceSettingRequest.SettingValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.TraceSettingRequest.SettingValue.value");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.TraceSettingRequest.SettingValue)
  return target;
}

size_t TraceSettingRequest_SettingValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.TraceSettingRequest.SettingValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(value_.size());
  for (int i = 0, n = value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      value_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TraceSettingRequest_SettingValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TraceSettingRequest_SettingValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TraceSettingRequest_SettingValue::GetClassData() const { return &_class_data_; }

void TraceSettingRequest_SettingValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TraceSettingRequest_SettingValue *>(to)->MergeFrom(
      static_cast<const TraceSettingRequest_SettingValue &>(from));
}


void TraceSettingRequest_SettingValue::MergeFrom(const TraceSettingRequest_SettingValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.TraceSettingRequest.SettingValue)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TraceSettingRequest_SettingValue::CopyFrom(const TraceSettingRequest_SettingValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.TraceSettingRequest.SettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingRequest_SettingValue::IsInitialized() const {
  return true;
}

void TraceSettingRequest_SettingValue::InternalSwap(TraceSettingRequest_SettingValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  value_.InternalSwap(&other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingRequest_SettingValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[58]);
}

// ===================================================================

TraceSettingRequest_SettingsEntry_DoNotUse::TraceSettingRequest_SettingsEntry_DoNotUse() {}
TraceSettingRequest_SettingsEntry_DoNotUse::TraceSettingRequest_SettingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TraceSettingRequest_SettingsEntry_DoNotUse::MergeFrom(const TraceSettingRequest_SettingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingRequest_SettingsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[59]);
}

// ===================================================================

class TraceSettingRequest::_Internal {
 public:
};

TraceSettingRequest::TraceSettingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  settings_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TraceSettingRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.TraceSettingRequest)
}
TraceSettingRequest::TraceSettingRequest(const TraceSettingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  settings_.MergeFrom(from.settings_);
  model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    model_name_.Set(from._internal_model_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.TraceSettingRequest)
}

inline void TraceSettingRequest::SharedCtor() {
model_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TraceSettingRequest::~TraceSettingRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.TraceSettingRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TraceSettingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  settings_.Destruct();
  model_name_.Destroy();
}

void TraceSettingRequest::ArenaDtor(void* object) {
  TraceSettingRequest* _this = reinterpret_cast< TraceSettingRequest* >(object);
  _this->settings_.Destruct();
}
void TraceSettingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TraceSettingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.TraceSettingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  settings_.Clear();
  model_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .hercules.proto.TraceSettingRequest.SettingValue> settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&settings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.TraceSettingRequest.model_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TraceSettingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.TraceSettingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .hercules.proto.TraceSettingRequest.SettingValue> settings = 1;
  if (!this->_internal_settings().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::TraceSettingRequest_SettingValue>;
    using WireHelper = TraceSettingRequest_SettingsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_settings();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.TraceSettingRequest.SettingsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.TraceSettingRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.TraceSettingRequest)
  return target;
}

size_t TraceSettingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.TraceSettingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.TraceSettingRequest.SettingValue> settings = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_settings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingRequest_SettingValue >::const_iterator
      it = this->_internal_settings().begin();
      it != this->_internal_settings().end(); ++it) {
    total_size += TraceSettingRequest_SettingsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TraceSettingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TraceSettingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TraceSettingRequest::GetClassData() const { return &_class_data_; }

void TraceSettingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TraceSettingRequest *>(to)->MergeFrom(
      static_cast<const TraceSettingRequest &>(from));
}


void TraceSettingRequest::MergeFrom(const TraceSettingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.TraceSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  settings_.MergeFrom(from.settings_);
  if (!from._internal_model_name().empty()) {
    _internal_set_model_name(from._internal_model_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TraceSettingRequest::CopyFrom(const TraceSettingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.TraceSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingRequest::IsInitialized() const {
  return true;
}

void TraceSettingRequest::InternalSwap(TraceSettingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  settings_.InternalSwap(&other->settings_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_name_, lhs_arena,
      &other->model_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[60]);
}

// ===================================================================

class TraceSettingResponse_SettingValue::_Internal {
 public:
};

TraceSettingResponse_SettingValue::TraceSettingResponse_SettingValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  value_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:hercules.proto.TraceSettingResponse.SettingValue)
}
TraceSettingResponse_SettingValue::TraceSettingResponse_SettingValue(const TraceSettingResponse_SettingValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      value_(from.value_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.TraceSettingResponse.SettingValue)
}

inline void TraceSettingResponse_SettingValue::SharedCtor() {
}

TraceSettingResponse_SettingValue::~TraceSettingResponse_SettingValue() {
  // @@protoc_insertion_point(destructor:hercules.proto.TraceSettingResponse.SettingValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TraceSettingResponse_SettingValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TraceSettingResponse_SettingValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TraceSettingResponse_SettingValue::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.TraceSettingResponse.SettingValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingResponse_SettingValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "hercules.proto.TraceSettingResponse.SettingValue.value"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TraceSettingResponse_SettingValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.TraceSettingResponse.SettingValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.TraceSettingResponse.SettingValue.value");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.TraceSettingResponse.SettingValue)
  return target;
}

size_t TraceSettingResponse_SettingValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.TraceSettingResponse.SettingValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(value_.size());
  for (int i = 0, n = value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      value_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TraceSettingResponse_SettingValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TraceSettingResponse_SettingValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TraceSettingResponse_SettingValue::GetClassData() const { return &_class_data_; }

void TraceSettingResponse_SettingValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TraceSettingResponse_SettingValue *>(to)->MergeFrom(
      static_cast<const TraceSettingResponse_SettingValue &>(from));
}


void TraceSettingResponse_SettingValue::MergeFrom(const TraceSettingResponse_SettingValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.TraceSettingResponse.SettingValue)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TraceSettingResponse_SettingValue::CopyFrom(const TraceSettingResponse_SettingValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.TraceSettingResponse.SettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingResponse_SettingValue::IsInitialized() const {
  return true;
}

void TraceSettingResponse_SettingValue::InternalSwap(TraceSettingResponse_SettingValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  value_.InternalSwap(&other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingResponse_SettingValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[61]);
}

// ===================================================================

TraceSettingResponse_SettingsEntry_DoNotUse::TraceSettingResponse_SettingsEntry_DoNotUse() {}
TraceSettingResponse_SettingsEntry_DoNotUse::TraceSettingResponse_SettingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TraceSettingResponse_SettingsEntry_DoNotUse::MergeFrom(const TraceSettingResponse_SettingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingResponse_SettingsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[62]);
}

// ===================================================================

class TraceSettingResponse::_Internal {
 public:
};

TraceSettingResponse::TraceSettingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  settings_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TraceSettingResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:hercules.proto.TraceSettingResponse)
}
TraceSettingResponse::TraceSettingResponse(const TraceSettingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  settings_.MergeFrom(from.settings_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.TraceSettingResponse)
}

inline void TraceSettingResponse::SharedCtor() {
}

TraceSettingResponse::~TraceSettingResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.TraceSettingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TraceSettingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  settings_.Destruct();
}

void TraceSettingResponse::ArenaDtor(void* object) {
  TraceSettingResponse* _this = reinterpret_cast< TraceSettingResponse* >(object);
  _this->settings_.Destruct();
}
void TraceSettingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TraceSettingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.TraceSettingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  settings_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .hercules.proto.TraceSettingResponse.SettingValue> settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&settings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TraceSettingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.TraceSettingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .hercules.proto.TraceSettingResponse.SettingValue> settings = 1;
  if (!this->_internal_settings().empty()) {
    using MapType = ::_pb::Map<std::string, ::hercules::proto::TraceSettingResponse_SettingValue>;
    using WireHelper = TraceSettingResponse_SettingsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_settings();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "hercules.proto.TraceSettingResponse.SettingsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.TraceSettingResponse)
  return target;
}

size_t TraceSettingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.TraceSettingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.TraceSettingResponse.SettingValue> settings = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_settings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingResponse_SettingValue >::const_iterator
      it = this->_internal_settings().begin();
      it != this->_internal_settings().end(); ++it) {
    total_size += TraceSettingResponse_SettingsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TraceSettingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TraceSettingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TraceSettingResponse::GetClassData() const { return &_class_data_; }

void TraceSettingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TraceSettingResponse *>(to)->MergeFrom(
      static_cast<const TraceSettingResponse &>(from));
}


void TraceSettingResponse::MergeFrom(const TraceSettingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.TraceSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  settings_.MergeFrom(from.settings_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TraceSettingResponse::CopyFrom(const TraceSettingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.TraceSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingResponse::IsInitialized() const {
  return true;
}

void TraceSettingResponse::InternalSwap(TraceSettingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  settings_.InternalSwap(&other->settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_getter, &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once,
      file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[63]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace hercules
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerLiveRequest*
Arena::CreateMaybeMessage< ::hercules::proto::ServerLiveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerLiveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerLiveResponse*
Arena::CreateMaybeMessage< ::hercules::proto::ServerLiveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerLiveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerReadyRequest*
Arena::CreateMaybeMessage< ::hercules::proto::ServerReadyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerReadyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerReadyResponse*
Arena::CreateMaybeMessage< ::hercules::proto::ServerReadyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerReadyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelReadyRequest*
Arena::CreateMaybeMessage< ::hercules::proto::ModelReadyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelReadyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelReadyResponse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelReadyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelReadyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerMetadataRequest*
Arena::CreateMaybeMessage< ::hercules::proto::ServerMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerMetadataResponse*
Arena::CreateMaybeMessage< ::hercules::proto::ServerMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelMetadataRequest*
Arena::CreateMaybeMessage< ::hercules::proto::ModelMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelMetadataResponse_TensorMetadata*
Arena::CreateMaybeMessage< ::hercules::proto::ModelMetadataResponse_TensorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelMetadataResponse_TensorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelMetadataResponse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::InferParameter*
Arena::CreateMaybeMessage< ::hercules::proto::InferParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::InferParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::InferTensorContents*
Arena::CreateMaybeMessage< ::hercules::proto::InferTensorContents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::InferTensorContents >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest_InferInputTensor*
Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest_InferInputTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest_InferInputTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor*
Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest*
Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferResponse_InferOutputTensor*
Arena::CreateMaybeMessage< ::hercules::proto::ModelInferResponse_InferOutputTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferResponse_InferOutputTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferResponse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelInferResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelStreamInferResponse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelStreamInferResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelStreamInferResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelConfigRequest*
Arena::CreateMaybeMessage< ::hercules::proto::ModelConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelConfigResponse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelStatisticsRequest*
Arena::CreateMaybeMessage< ::hercules::proto::ModelStatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelStatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::StatisticDuration*
Arena::CreateMaybeMessage< ::hercules::proto::StatisticDuration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::StatisticDuration >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::InferStatistics*
Arena::CreateMaybeMessage< ::hercules::proto::InferStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::InferStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::InferBatchStatistics*
Arena::CreateMaybeMessage< ::hercules::proto::InferBatchStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::InferBatchStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelStatistics*
Arena::CreateMaybeMessage< ::hercules::proto::ModelStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelStatisticsResponse*
Arena::CreateMaybeMessage< ::hercules::proto::ModelStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelRepositoryParameter*
Arena::CreateMaybeMessage< ::hercules::proto::ModelRepositoryParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelRepositoryParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryIndexRequest*
Arena::CreateMaybeMessage< ::hercules::proto::RepositoryIndexRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryIndexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryIndexResponse_ModelIndex*
Arena::CreateMaybeMessage< ::hercules::proto::RepositoryIndexResponse_ModelIndex >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryIndexResponse_ModelIndex >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryIndexResponse*
Arena::CreateMaybeMessage< ::hercules::proto::RepositoryIndexResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryIndexResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelLoadRequest*
Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelLoadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelLoadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelLoadResponse*
Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelLoadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelLoadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelUnloadRequest*
Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelUnloadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelUnloadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelUnloadResponse*
Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelUnloadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelUnloadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryStatusRequest*
Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus*
Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryStatusResponse*
Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryRegisterRequest*
Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryRegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryRegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryRegisterResponse*
Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryRegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryRegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryUnregisterRequest*
Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryUnregisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryUnregisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryUnregisterResponse*
Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryUnregisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryUnregisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryStatusRequest*
Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus*
Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryStatusResponse*
Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryRegisterRequest*
Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryRegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryRegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryRegisterResponse*
Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryRegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryRegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryUnregisterRequest*
Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryUnregisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryUnregisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryUnregisterResponse*
Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryUnregisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryUnregisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingRequest_SettingValue*
Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingRequest_SettingValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingRequest_SettingValue >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingRequest*
Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingResponse_SettingValue*
Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingResponse_SettingValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingResponse_SettingValue >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingResponse*
Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
