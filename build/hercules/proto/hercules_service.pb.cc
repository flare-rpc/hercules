// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hercules/proto/hercules_service.proto

#include "hercules/proto/hercules_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CudaSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InferBatchStatistics_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InferStatistics_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InferTensorContents_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fmodel_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<18> scc_info_ModelConfig_hercules_2fproto_2fmodel_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModelInferRequest_InferInputTensor_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferRequest_InferRequestedOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModelInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModelInferResponse_InferOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferResponse_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelMetadataResponse_TensorMetadata_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelRepositoryParameter_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModelStatistics_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RepositoryIndexResponse_ModelIndex_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RepositoryModelLoadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatisticDuration_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SystemSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TraceSettingRequest_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TraceSettingRequest_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TraceSettingResponse_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hercules_2fproto_2fhercules_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TraceSettingResponse_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto;
namespace hercules {
namespace proto {
class ServerLiveRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerLiveRequest> _instance;
} _ServerLiveRequest_default_instance_;
class ServerLiveResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerLiveResponse> _instance;
} _ServerLiveResponse_default_instance_;
class ServerReadyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerReadyRequest> _instance;
} _ServerReadyRequest_default_instance_;
class ServerReadyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerReadyResponse> _instance;
} _ServerReadyResponse_default_instance_;
class ModelReadyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelReadyRequest> _instance;
} _ModelReadyRequest_default_instance_;
class ModelReadyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelReadyResponse> _instance;
} _ModelReadyResponse_default_instance_;
class ServerMetadataRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerMetadataRequest> _instance;
} _ServerMetadataRequest_default_instance_;
class ServerMetadataResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerMetadataResponse> _instance;
} _ServerMetadataResponse_default_instance_;
class ModelMetadataRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelMetadataRequest> _instance;
} _ModelMetadataRequest_default_instance_;
class ModelMetadataResponse_TensorMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelMetadataResponse_TensorMetadata> _instance;
} _ModelMetadataResponse_TensorMetadata_default_instance_;
class ModelMetadataResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelMetadataResponse> _instance;
} _ModelMetadataResponse_default_instance_;
class InferParameterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InferParameter> _instance;
  bool bool_param_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64_param_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_param_;
} _InferParameter_default_instance_;
class InferTensorContentsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InferTensorContents> _instance;
} _InferTensorContents_default_instance_;
class ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse> _instance;
} _ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_default_instance_;
class ModelInferRequest_InferInputTensorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelInferRequest_InferInputTensor> _instance;
} _ModelInferRequest_InferInputTensor_default_instance_;
class ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse> _instance;
} _ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_default_instance_;
class ModelInferRequest_InferRequestedOutputTensorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelInferRequest_InferRequestedOutputTensor> _instance;
} _ModelInferRequest_InferRequestedOutputTensor_default_instance_;
class ModelInferRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelInferRequest_ParametersEntry_DoNotUse> _instance;
} _ModelInferRequest_ParametersEntry_DoNotUse_default_instance_;
class ModelInferRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelInferRequest> _instance;
} _ModelInferRequest_default_instance_;
class ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse> _instance;
} _ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_default_instance_;
class ModelInferResponse_InferOutputTensorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelInferResponse_InferOutputTensor> _instance;
} _ModelInferResponse_InferOutputTensor_default_instance_;
class ModelInferResponse_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelInferResponse_ParametersEntry_DoNotUse> _instance;
} _ModelInferResponse_ParametersEntry_DoNotUse_default_instance_;
class ModelInferResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelInferResponse> _instance;
} _ModelInferResponse_default_instance_;
class ModelStreamInferResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelStreamInferResponse> _instance;
} _ModelStreamInferResponse_default_instance_;
class ModelConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelConfigRequest> _instance;
} _ModelConfigRequest_default_instance_;
class ModelConfigResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelConfigResponse> _instance;
} _ModelConfigResponse_default_instance_;
class ModelStatisticsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelStatisticsRequest> _instance;
} _ModelStatisticsRequest_default_instance_;
class StatisticDurationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatisticDuration> _instance;
} _StatisticDuration_default_instance_;
class InferStatisticsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InferStatistics> _instance;
} _InferStatistics_default_instance_;
class InferBatchStatisticsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InferBatchStatistics> _instance;
} _InferBatchStatistics_default_instance_;
class ModelStatisticsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelStatistics> _instance;
} _ModelStatistics_default_instance_;
class ModelStatisticsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelStatisticsResponse> _instance;
} _ModelStatisticsResponse_default_instance_;
class ModelRepositoryParameterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelRepositoryParameter> _instance;
  bool bool_param_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64_param_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_param_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bytes_param_;
} _ModelRepositoryParameter_default_instance_;
class RepositoryIndexRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepositoryIndexRequest> _instance;
} _RepositoryIndexRequest_default_instance_;
class RepositoryIndexResponse_ModelIndexDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepositoryIndexResponse_ModelIndex> _instance;
} _RepositoryIndexResponse_ModelIndex_default_instance_;
class RepositoryIndexResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepositoryIndexResponse> _instance;
} _RepositoryIndexResponse_default_instance_;
class RepositoryModelLoadRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepositoryModelLoadRequest_ParametersEntry_DoNotUse> _instance;
} _RepositoryModelLoadRequest_ParametersEntry_DoNotUse_default_instance_;
class RepositoryModelLoadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepositoryModelLoadRequest> _instance;
} _RepositoryModelLoadRequest_default_instance_;
class RepositoryModelLoadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepositoryModelLoadResponse> _instance;
} _RepositoryModelLoadResponse_default_instance_;
class RepositoryModelUnloadRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepositoryModelUnloadRequest_ParametersEntry_DoNotUse> _instance;
} _RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_default_instance_;
class RepositoryModelUnloadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepositoryModelUnloadRequest> _instance;
} _RepositoryModelUnloadRequest_default_instance_;
class RepositoryModelUnloadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepositoryModelUnloadResponse> _instance;
} _RepositoryModelUnloadResponse_default_instance_;
class SystemSharedMemoryStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SystemSharedMemoryStatusRequest> _instance;
} _SystemSharedMemoryStatusRequest_default_instance_;
class SystemSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SystemSharedMemoryStatusResponse_RegionStatus> _instance;
} _SystemSharedMemoryStatusResponse_RegionStatus_default_instance_;
class SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse> _instance;
} _SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_;
class SystemSharedMemoryStatusResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SystemSharedMemoryStatusResponse> _instance;
} _SystemSharedMemoryStatusResponse_default_instance_;
class SystemSharedMemoryRegisterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SystemSharedMemoryRegisterRequest> _instance;
} _SystemSharedMemoryRegisterRequest_default_instance_;
class SystemSharedMemoryRegisterResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SystemSharedMemoryRegisterResponse> _instance;
} _SystemSharedMemoryRegisterResponse_default_instance_;
class SystemSharedMemoryUnregisterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SystemSharedMemoryUnregisterRequest> _instance;
} _SystemSharedMemoryUnregisterRequest_default_instance_;
class SystemSharedMemoryUnregisterResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SystemSharedMemoryUnregisterResponse> _instance;
} _SystemSharedMemoryUnregisterResponse_default_instance_;
class CudaSharedMemoryStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CudaSharedMemoryStatusRequest> _instance;
} _CudaSharedMemoryStatusRequest_default_instance_;
class CudaSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CudaSharedMemoryStatusResponse_RegionStatus> _instance;
} _CudaSharedMemoryStatusResponse_RegionStatus_default_instance_;
class CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse> _instance;
} _CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_;
class CudaSharedMemoryStatusResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CudaSharedMemoryStatusResponse> _instance;
} _CudaSharedMemoryStatusResponse_default_instance_;
class CudaSharedMemoryRegisterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CudaSharedMemoryRegisterRequest> _instance;
} _CudaSharedMemoryRegisterRequest_default_instance_;
class CudaSharedMemoryRegisterResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CudaSharedMemoryRegisterResponse> _instance;
} _CudaSharedMemoryRegisterResponse_default_instance_;
class CudaSharedMemoryUnregisterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CudaSharedMemoryUnregisterRequest> _instance;
} _CudaSharedMemoryUnregisterRequest_default_instance_;
class CudaSharedMemoryUnregisterResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CudaSharedMemoryUnregisterResponse> _instance;
} _CudaSharedMemoryUnregisterResponse_default_instance_;
class TraceSettingRequest_SettingValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TraceSettingRequest_SettingValue> _instance;
} _TraceSettingRequest_SettingValue_default_instance_;
class TraceSettingRequest_SettingsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TraceSettingRequest_SettingsEntry_DoNotUse> _instance;
} _TraceSettingRequest_SettingsEntry_DoNotUse_default_instance_;
class TraceSettingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TraceSettingRequest> _instance;
} _TraceSettingRequest_default_instance_;
class TraceSettingResponse_SettingValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TraceSettingResponse_SettingValue> _instance;
} _TraceSettingResponse_SettingValue_default_instance_;
class TraceSettingResponse_SettingsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TraceSettingResponse_SettingsEntry_DoNotUse> _instance;
} _TraceSettingResponse_SettingsEntry_DoNotUse_default_instance_;
class TraceSettingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TraceSettingResponse> _instance;
} _TraceSettingResponse_default_instance_;
}  // namespace proto
}  // namespace hercules
static void InitDefaultsscc_info_CudaSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_CudaSharedMemoryRegisterRequest_default_instance_;
    new (ptr) ::hercules::proto::CudaSharedMemoryRegisterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::CudaSharedMemoryRegisterRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CudaSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CudaSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_CudaSharedMemoryRegisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_CudaSharedMemoryRegisterResponse_default_instance_;
    new (ptr) ::hercules::proto::CudaSharedMemoryRegisterResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::CudaSharedMemoryRegisterResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CudaSharedMemoryRegisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CudaSharedMemoryRegisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_CudaSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_CudaSharedMemoryStatusRequest_default_instance_;
    new (ptr) ::hercules::proto::CudaSharedMemoryStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::CudaSharedMemoryStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CudaSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CudaSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_CudaSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_CudaSharedMemoryStatusResponse_default_instance_;
    new (ptr) ::hercules::proto::CudaSharedMemoryStatusResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::CudaSharedMemoryStatusResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CudaSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CudaSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_CudaSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_CudaSharedMemoryStatusResponse_RegionStatus_default_instance_;
    new (ptr) ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CudaSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CudaSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse();
  }
  ::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_CudaSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_CudaSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_CudaSharedMemoryUnregisterRequest_default_instance_;
    new (ptr) ::hercules::proto::CudaSharedMemoryUnregisterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::CudaSharedMemoryUnregisterRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CudaSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CudaSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_CudaSharedMemoryUnregisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_CudaSharedMemoryUnregisterResponse_default_instance_;
    new (ptr) ::hercules::proto::CudaSharedMemoryUnregisterResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::CudaSharedMemoryUnregisterResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CudaSharedMemoryUnregisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CudaSharedMemoryUnregisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_InferBatchStatistics_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_InferBatchStatistics_default_instance_;
    new (ptr) ::hercules::proto::InferBatchStatistics();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::InferBatchStatistics::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InferBatchStatistics_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InferBatchStatistics_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_StatisticDuration_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_InferParameter_default_instance_;
    new (ptr) ::hercules::proto::InferParameter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::InferParameter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_InferStatistics_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_InferStatistics_default_instance_;
    new (ptr) ::hercules::proto::InferStatistics();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::InferStatistics::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InferStatistics_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InferStatistics_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_StatisticDuration_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_InferTensorContents_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_InferTensorContents_default_instance_;
    new (ptr) ::hercules::proto::InferTensorContents();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::InferTensorContents::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InferTensorContents_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InferTensorContents_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ModelConfigRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelConfigRequest_default_instance_;
    new (ptr) ::hercules::proto::ModelConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelConfigRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelConfigRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ModelConfigResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelConfigResponse_default_instance_;
    new (ptr) ::hercules::proto::ModelConfigResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelConfigResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelConfigResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModelConfigResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelConfig_hercules_2fproto_2fmodel_5fconfig_2eproto.base,}};

static void InitDefaultsscc_info_ModelInferRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelInferRequest_default_instance_;
    new (ptr) ::hercules::proto::ModelInferRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelInferRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ModelInferRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ModelInferRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelInferRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
      &scc_info_ModelInferRequest_InferInputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base,
      &scc_info_ModelInferRequest_InferRequestedOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelInferRequest_InferInputTensor_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelInferRequest_InferInputTensor_default_instance_;
    new (ptr) ::hercules::proto::ModelInferRequest_InferInputTensor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelInferRequest_InferInputTensor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModelInferRequest_InferInputTensor_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ModelInferRequest_InferInputTensor_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
      &scc_info_InferTensorContents_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse();
  }
  ::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelInferRequest_InferRequestedOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelInferRequest_InferRequestedOutputTensor_default_instance_;
    new (ptr) ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferRequest_InferRequestedOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModelInferRequest_InferRequestedOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse();
  }
  ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelInferRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelInferRequest_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse();
  }
  ::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModelInferRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelInferResponse_default_instance_;
    new (ptr) ::hercules::proto::ModelInferResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelInferResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModelInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ModelInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelInferResponse_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
      &scc_info_ModelInferResponse_InferOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelInferResponse_InferOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelInferResponse_InferOutputTensor_default_instance_;
    new (ptr) ::hercules::proto::ModelInferResponse_InferOutputTensor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelInferResponse_InferOutputTensor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModelInferResponse_InferOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ModelInferResponse_InferOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
      &scc_info_InferTensorContents_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse();
  }
  ::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelInferResponse_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelInferResponse_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse();
  }
  ::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelInferResponse_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModelInferResponse_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelMetadataRequest_default_instance_;
    new (ptr) ::hercules::proto::ModelMetadataRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelMetadataRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ModelMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelMetadataResponse_default_instance_;
    new (ptr) ::hercules::proto::ModelMetadataResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelMetadataResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModelMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelMetadataResponse_TensorMetadata_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelMetadataResponse_TensorMetadata_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelMetadataResponse_TensorMetadata_default_instance_;
    new (ptr) ::hercules::proto::ModelMetadataResponse_TensorMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelMetadataResponse_TensorMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelMetadataResponse_TensorMetadata_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelMetadataResponse_TensorMetadata_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ModelReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelReadyRequest_default_instance_;
    new (ptr) ::hercules::proto::ModelReadyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelReadyRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ModelReadyResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelReadyResponse_default_instance_;
    new (ptr) ::hercules::proto::ModelReadyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelReadyResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelReadyResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelReadyResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ModelRepositoryParameter_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelRepositoryParameter_default_instance_;
    new (ptr) ::hercules::proto::ModelRepositoryParameter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelRepositoryParameter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelRepositoryParameter_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelRepositoryParameter_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ModelStatistics_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelStatistics_default_instance_;
    new (ptr) ::hercules::proto::ModelStatistics();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelStatistics::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModelStatistics_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ModelStatistics_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_InferStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base,
      &scc_info_InferBatchStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelStatisticsRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelStatisticsRequest_default_instance_;
    new (ptr) ::hercules::proto::ModelStatisticsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelStatisticsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelStatisticsRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelStatisticsRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ModelStatisticsResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelStatisticsResponse_default_instance_;
    new (ptr) ::hercules::proto::ModelStatisticsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelStatisticsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelStatisticsResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModelStatisticsResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ModelStreamInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ModelStreamInferResponse_default_instance_;
    new (ptr) ::hercules::proto::ModelStreamInferResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ModelStreamInferResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModelStreamInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModelStreamInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_RepositoryIndexRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_RepositoryIndexRequest_default_instance_;
    new (ptr) ::hercules::proto::RepositoryIndexRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::RepositoryIndexRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RepositoryIndexRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RepositoryIndexRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RepositoryIndexResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_RepositoryIndexResponse_default_instance_;
    new (ptr) ::hercules::proto::RepositoryIndexResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::RepositoryIndexResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RepositoryIndexResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RepositoryIndexResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_RepositoryIndexResponse_ModelIndex_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_RepositoryIndexResponse_ModelIndex_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_RepositoryIndexResponse_ModelIndex_default_instance_;
    new (ptr) ::hercules::proto::RepositoryIndexResponse_ModelIndex();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::RepositoryIndexResponse_ModelIndex::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RepositoryIndexResponse_ModelIndex_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RepositoryIndexResponse_ModelIndex_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RepositoryModelLoadRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_RepositoryModelLoadRequest_default_instance_;
    new (ptr) ::hercules::proto::RepositoryModelLoadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::RepositoryModelLoadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RepositoryModelLoadRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RepositoryModelLoadRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_RepositoryModelLoadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_RepositoryModelLoadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_RepositoryModelLoadRequest_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse();
  }
  ::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RepositoryModelLoadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RepositoryModelLoadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelRepositoryParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_RepositoryModelLoadResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_RepositoryModelLoadResponse_default_instance_;
    new (ptr) ::hercules::proto::RepositoryModelLoadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::RepositoryModelLoadResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RepositoryModelLoadResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RepositoryModelLoadResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RepositoryModelUnloadRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_RepositoryModelUnloadRequest_default_instance_;
    new (ptr) ::hercules::proto::RepositoryModelUnloadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::RepositoryModelUnloadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RepositoryModelUnloadRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RepositoryModelUnloadRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse();
  }
  ::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_ModelRepositoryParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_RepositoryModelUnloadResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_RepositoryModelUnloadResponse_default_instance_;
    new (ptr) ::hercules::proto::RepositoryModelUnloadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::RepositoryModelUnloadResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RepositoryModelUnloadResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RepositoryModelUnloadResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerLiveRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ServerLiveRequest_default_instance_;
    new (ptr) ::hercules::proto::ServerLiveRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ServerLiveRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerLiveRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerLiveRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerLiveResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ServerLiveResponse_default_instance_;
    new (ptr) ::hercules::proto::ServerLiveResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ServerLiveResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerLiveResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerLiveResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ServerMetadataRequest_default_instance_;
    new (ptr) ::hercules::proto::ServerMetadataRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ServerMetadataRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ServerMetadataResponse_default_instance_;
    new (ptr) ::hercules::proto::ServerMetadataResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ServerMetadataResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ServerReadyRequest_default_instance_;
    new (ptr) ::hercules::proto::ServerReadyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ServerReadyRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerReadyResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_ServerReadyResponse_default_instance_;
    new (ptr) ::hercules::proto::ServerReadyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::ServerReadyResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerReadyResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerReadyResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_StatisticDuration_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_StatisticDuration_default_instance_;
    new (ptr) ::hercules::proto::StatisticDuration();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::StatisticDuration::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatisticDuration_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StatisticDuration_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_SystemSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_SystemSharedMemoryRegisterRequest_default_instance_;
    new (ptr) ::hercules::proto::SystemSharedMemoryRegisterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::SystemSharedMemoryRegisterRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SystemSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SystemSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_SystemSharedMemoryRegisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_SystemSharedMemoryRegisterResponse_default_instance_;
    new (ptr) ::hercules::proto::SystemSharedMemoryRegisterResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::SystemSharedMemoryRegisterResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SystemSharedMemoryRegisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SystemSharedMemoryRegisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_SystemSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_SystemSharedMemoryStatusRequest_default_instance_;
    new (ptr) ::hercules::proto::SystemSharedMemoryStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::SystemSharedMemoryStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SystemSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SystemSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_SystemSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_SystemSharedMemoryStatusResponse_default_instance_;
    new (ptr) ::hercules::proto::SystemSharedMemoryStatusResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::SystemSharedMemoryStatusResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SystemSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SystemSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_SystemSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_SystemSharedMemoryStatusResponse_RegionStatus_default_instance_;
    new (ptr) ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SystemSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SystemSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse();
  }
  ::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_SystemSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_SystemSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_SystemSharedMemoryUnregisterRequest_default_instance_;
    new (ptr) ::hercules::proto::SystemSharedMemoryUnregisterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::SystemSharedMemoryUnregisterRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SystemSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SystemSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_SystemSharedMemoryUnregisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_SystemSharedMemoryUnregisterResponse_default_instance_;
    new (ptr) ::hercules::proto::SystemSharedMemoryUnregisterResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::SystemSharedMemoryUnregisterResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SystemSharedMemoryUnregisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SystemSharedMemoryUnregisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_TraceSettingRequest_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_TraceSettingRequest_default_instance_;
    new (ptr) ::hercules::proto::TraceSettingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::TraceSettingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TraceSettingRequest_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TraceSettingRequest_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_TraceSettingRequest_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_TraceSettingRequest_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_TraceSettingRequest_SettingValue_default_instance_;
    new (ptr) ::hercules::proto::TraceSettingRequest_SettingValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::TraceSettingRequest_SettingValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TraceSettingRequest_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TraceSettingRequest_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_TraceSettingRequest_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_TraceSettingRequest_SettingsEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse();
  }
  ::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TraceSettingRequest_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TraceSettingRequest_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_TraceSettingRequest_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_TraceSettingResponse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_TraceSettingResponse_default_instance_;
    new (ptr) ::hercules::proto::TraceSettingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::TraceSettingResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TraceSettingResponse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TraceSettingResponse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_TraceSettingResponse_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_TraceSettingResponse_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_TraceSettingResponse_SettingValue_default_instance_;
    new (ptr) ::hercules::proto::TraceSettingResponse_SettingValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hercules::proto::TraceSettingResponse_SettingValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TraceSettingResponse_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TraceSettingResponse_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_TraceSettingResponse_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hercules::proto::_TraceSettingResponse_SettingsEntry_DoNotUse_default_instance_;
    new (ptr) ::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse();
  }
  ::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TraceSettingResponse_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TraceSettingResponse_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto}, {
      &scc_info_TraceSettingResponse_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto[64];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_hercules_2fproto_2fhercules_5fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_hercules_2fproto_2fhercules_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_hercules_2fproto_2fhercules_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerLiveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerLiveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerLiveResponse, live_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerReadyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerReadyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerReadyResponse, ready_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelReadyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelReadyRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelReadyRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelReadyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelReadyResponse, ready_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerMetadataResponse, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerMetadataResponse, version_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ServerMetadataResponse, extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse_TensorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse_TensorMetadata, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse_TensorMetadata, datatype_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse_TensorMetadata, shape_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, versions_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, platform_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, inputs_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelMetadataResponse, outputs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferParameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::hercules::proto::InferParameterDefaultTypeInternal, bool_param_),
  offsetof(::hercules::proto::InferParameterDefaultTypeInternal, int64_param_),
  offsetof(::hercules::proto::InferParameterDefaultTypeInternal, string_param_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferParameter, parameter_choice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, bool_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, int_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, int64_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, uint_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, uint64_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, fp32_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, fp64_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferTensorContents, bytes_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, datatype_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, shape_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, parameters_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferInputTensor, contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor, parameters_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, model_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, model_version_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, id_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, parameters_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, inputs_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, outputs_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferRequest, raw_input_contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, datatype_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, shape_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, parameters_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_InferOutputTensor, contents_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, model_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, model_version_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, id_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, parameters_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, outputs_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelInferResponse, raw_output_contents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStreamInferResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStreamInferResponse, error_message_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStreamInferResponse, infer_response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelConfigRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelConfigRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelConfigResponse, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatisticsRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatisticsRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::StatisticDuration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::StatisticDuration, count_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::StatisticDuration, ns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, success_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, fail_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, queue_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, compute_input_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, compute_infer_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, compute_output_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, cache_hit_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferStatistics, cache_miss_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferBatchStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferBatchStatistics, batch_size_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferBatchStatistics, compute_input_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferBatchStatistics, compute_infer_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::InferBatchStatistics, compute_output_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, version_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, last_inference_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, inference_count_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, execution_count_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, inference_stats_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatistics, batch_stats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelStatisticsResponse, model_stats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelRepositoryParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelRepositoryParameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::hercules::proto::ModelRepositoryParameterDefaultTypeInternal, bool_param_),
  offsetof(::hercules::proto::ModelRepositoryParameterDefaultTypeInternal, int64_param_),
  offsetof(::hercules::proto::ModelRepositoryParameterDefaultTypeInternal, string_param_),
  offsetof(::hercules::proto::ModelRepositoryParameterDefaultTypeInternal, bytes_param_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::ModelRepositoryParameter, parameter_choice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexRequest, repository_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexRequest, ready_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse_ModelIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse_ModelIndex, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse_ModelIndex, version_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse_ModelIndex, state_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse_ModelIndex, reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryIndexResponse, models_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest, repository_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest, model_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadRequest, parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelLoadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest, repository_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest, model_name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadRequest, parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::RepositoryModelUnloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus, offset_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus, byte_size_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryStatusResponse, regions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterRequest, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterRequest, offset_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterRequest, byte_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryUnregisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryUnregisterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::SystemSharedMemoryUnregisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus, device_id_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus, byte_size_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryStatusResponse, regions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterRequest, name_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterRequest, raw_handle_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterRequest, device_id_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterRequest, byte_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryUnregisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryUnregisterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::CudaSharedMemoryUnregisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingValue, value_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest, settings_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingRequest, model_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingValue, value_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hercules::proto::TraceSettingResponse, settings_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::hercules::proto::ServerLiveRequest)},
  { 5, -1, sizeof(::hercules::proto::ServerLiveResponse)},
  { 11, -1, sizeof(::hercules::proto::ServerReadyRequest)},
  { 16, -1, sizeof(::hercules::proto::ServerReadyResponse)},
  { 22, -1, sizeof(::hercules::proto::ModelReadyRequest)},
  { 29, -1, sizeof(::hercules::proto::ModelReadyResponse)},
  { 35, -1, sizeof(::hercules::proto::ServerMetadataRequest)},
  { 40, -1, sizeof(::hercules::proto::ServerMetadataResponse)},
  { 48, -1, sizeof(::hercules::proto::ModelMetadataRequest)},
  { 55, -1, sizeof(::hercules::proto::ModelMetadataResponse_TensorMetadata)},
  { 63, -1, sizeof(::hercules::proto::ModelMetadataResponse)},
  { 73, -1, sizeof(::hercules::proto::InferParameter)},
  { 82, -1, sizeof(::hercules::proto::InferTensorContents)},
  { 95, 102, sizeof(::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse)},
  { 104, -1, sizeof(::hercules::proto::ModelInferRequest_InferInputTensor)},
  { 114, 121, sizeof(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse)},
  { 123, -1, sizeof(::hercules::proto::ModelInferRequest_InferRequestedOutputTensor)},
  { 130, 137, sizeof(::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse)},
  { 139, -1, sizeof(::hercules::proto::ModelInferRequest)},
  { 151, 158, sizeof(::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse)},
  { 160, -1, sizeof(::hercules::proto::ModelInferResponse_InferOutputTensor)},
  { 170, 177, sizeof(::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse)},
  { 179, -1, sizeof(::hercules::proto::ModelInferResponse)},
  { 190, -1, sizeof(::hercules::proto::ModelStreamInferResponse)},
  { 197, -1, sizeof(::hercules::proto::ModelConfigRequest)},
  { 204, -1, sizeof(::hercules::proto::ModelConfigResponse)},
  { 210, -1, sizeof(::hercules::proto::ModelStatisticsRequest)},
  { 217, -1, sizeof(::hercules::proto::StatisticDuration)},
  { 224, -1, sizeof(::hercules::proto::InferStatistics)},
  { 237, -1, sizeof(::hercules::proto::InferBatchStatistics)},
  { 246, -1, sizeof(::hercules::proto::ModelStatistics)},
  { 258, -1, sizeof(::hercules::proto::ModelStatisticsResponse)},
  { 264, -1, sizeof(::hercules::proto::ModelRepositoryParameter)},
  { 274, -1, sizeof(::hercules::proto::RepositoryIndexRequest)},
  { 281, -1, sizeof(::hercules::proto::RepositoryIndexResponse_ModelIndex)},
  { 290, -1, sizeof(::hercules::proto::RepositoryIndexResponse)},
  { 296, 303, sizeof(::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse)},
  { 305, -1, sizeof(::hercules::proto::RepositoryModelLoadRequest)},
  { 313, -1, sizeof(::hercules::proto::RepositoryModelLoadResponse)},
  { 318, 325, sizeof(::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse)},
  { 327, -1, sizeof(::hercules::proto::RepositoryModelUnloadRequest)},
  { 335, -1, sizeof(::hercules::proto::RepositoryModelUnloadResponse)},
  { 340, -1, sizeof(::hercules::proto::SystemSharedMemoryStatusRequest)},
  { 346, -1, sizeof(::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus)},
  { 355, 362, sizeof(::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse)},
  { 364, -1, sizeof(::hercules::proto::SystemSharedMemoryStatusResponse)},
  { 370, -1, sizeof(::hercules::proto::SystemSharedMemoryRegisterRequest)},
  { 379, -1, sizeof(::hercules::proto::SystemSharedMemoryRegisterResponse)},
  { 384, -1, sizeof(::hercules::proto::SystemSharedMemoryUnregisterRequest)},
  { 390, -1, sizeof(::hercules::proto::SystemSharedMemoryUnregisterResponse)},
  { 395, -1, sizeof(::hercules::proto::CudaSharedMemoryStatusRequest)},
  { 401, -1, sizeof(::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus)},
  { 409, 416, sizeof(::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse)},
  { 418, -1, sizeof(::hercules::proto::CudaSharedMemoryStatusResponse)},
  { 424, -1, sizeof(::hercules::proto::CudaSharedMemoryRegisterRequest)},
  { 433, -1, sizeof(::hercules::proto::CudaSharedMemoryRegisterResponse)},
  { 438, -1, sizeof(::hercules::proto::CudaSharedMemoryUnregisterRequest)},
  { 444, -1, sizeof(::hercules::proto::CudaSharedMemoryUnregisterResponse)},
  { 449, -1, sizeof(::hercules::proto::TraceSettingRequest_SettingValue)},
  { 455, 462, sizeof(::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse)},
  { 464, -1, sizeof(::hercules::proto::TraceSettingRequest)},
  { 471, -1, sizeof(::hercules::proto::TraceSettingResponse_SettingValue)},
  { 477, 484, sizeof(::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse)},
  { 486, -1, sizeof(::hercules::proto::TraceSettingResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ServerLiveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ServerLiveResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ServerReadyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ServerReadyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelReadyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelReadyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ServerMetadataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ServerMetadataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelMetadataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelMetadataResponse_TensorMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelMetadataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_InferParameter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_InferTensorContents_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelInferRequest_InferInputTensor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelInferRequest_InferRequestedOutputTensor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelInferRequest_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelInferRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelInferResponse_InferOutputTensor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelInferResponse_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelInferResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelStreamInferResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelConfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelStatisticsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_StatisticDuration_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_InferStatistics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_InferBatchStatistics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelStatistics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelStatisticsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_ModelRepositoryParameter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_RepositoryIndexRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_RepositoryIndexResponse_ModelIndex_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_RepositoryIndexResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_RepositoryModelLoadRequest_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_RepositoryModelLoadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_RepositoryModelLoadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_RepositoryModelUnloadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_RepositoryModelUnloadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_SystemSharedMemoryStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_SystemSharedMemoryStatusResponse_RegionStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_SystemSharedMemoryStatusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_SystemSharedMemoryRegisterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_SystemSharedMemoryRegisterResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_SystemSharedMemoryUnregisterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_SystemSharedMemoryUnregisterResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_CudaSharedMemoryStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_CudaSharedMemoryStatusResponse_RegionStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_CudaSharedMemoryStatusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_CudaSharedMemoryRegisterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_CudaSharedMemoryRegisterResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_CudaSharedMemoryUnregisterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_CudaSharedMemoryUnregisterResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_TraceSettingRequest_SettingValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_TraceSettingRequest_SettingsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_TraceSettingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_TraceSettingResponse_SettingValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_TraceSettingResponse_SettingsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hercules::proto::_TraceSettingResponse_default_instance_),
};

const char descriptor_table_protodef_hercules_2fproto_2fhercules_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%hercules/proto/hercules_service.proto\022"
  "\016hercules.proto\032!hercules/proto/model_co"
  "nfig.proto\"\023\n\021ServerLiveRequest\"\"\n\022Serve"
  "rLiveResponse\022\014\n\004live\030\001 \001(\010\"\024\n\022ServerRea"
  "dyRequest\"$\n\023ServerReadyResponse\022\r\n\005read"
  "y\030\001 \001(\010\"2\n\021ModelReadyRequest\022\014\n\004name\030\001 \001"
  "(\t\022\017\n\007version\030\002 \001(\t\"#\n\022ModelReadyRespons"
  "e\022\r\n\005ready\030\001 \001(\010\"\027\n\025ServerMetadataReques"
  "t\"K\n\026ServerMetadataResponse\022\014\n\004name\030\001 \001("
  "\t\022\017\n\007version\030\002 \001(\t\022\022\n\nextensions\030\003 \003(\t\"5"
  "\n\024ModelMetadataRequest\022\014\n\004name\030\001 \001(\t\022\017\n\007"
  "version\030\002 \001(\t\"\227\002\n\025ModelMetadataResponse\022"
  "\014\n\004name\030\001 \001(\t\022\020\n\010versions\030\002 \003(\t\022\020\n\010platf"
  "orm\030\003 \001(\t\022D\n\006inputs\030\004 \003(\01324.hercules.pro"
  "to.ModelMetadataResponse.TensorMetadata\022"
  "E\n\007outputs\030\005 \003(\01324.hercules.proto.ModelM"
  "etadataResponse.TensorMetadata\032\?\n\016Tensor"
  "Metadata\022\014\n\004name\030\001 \001(\t\022\020\n\010datatype\030\002 \001(\t"
  "\022\r\n\005shape\030\003 \003(\003\"i\n\016InferParameter\022\024\n\nboo"
  "l_param\030\001 \001(\010H\000\022\025\n\013int64_param\030\002 \001(\003H\000\022\026"
  "\n\014string_param\030\003 \001(\tH\000B\022\n\020parameter_choi"
  "ce\"\320\001\n\023InferTensorContents\022\025\n\rbool_conte"
  "nts\030\001 \003(\010\022\024\n\014int_contents\030\002 \003(\005\022\026\n\016int64"
  "_contents\030\003 \003(\003\022\025\n\ruint_contents\030\004 \003(\r\022\027"
  "\n\017uint64_contents\030\005 \003(\004\022\025\n\rfp32_contents"
  "\030\006 \003(\002\022\025\n\rfp64_contents\030\007 \003(\001\022\026\n\016bytes_c"
  "ontents\030\010 \003(\014\"\233\007\n\021ModelInferRequest\022\022\n\nm"
  "odel_name\030\001 \001(\t\022\025\n\rmodel_version\030\002 \001(\t\022\n"
  "\n\002id\030\003 \001(\t\022E\n\nparameters\030\004 \003(\01321.hercule"
  "s.proto.ModelInferRequest.ParametersEntr"
  "y\022B\n\006inputs\030\005 \003(\01322.hercules.proto.Model"
  "InferRequest.InferInputTensor\022M\n\007outputs"
  "\030\006 \003(\0132<.hercules.proto.ModelInferReques"
  "t.InferRequestedOutputTensor\022\032\n\022raw_inpu"
  "t_contents\030\007 \003(\014\032\243\002\n\020InferInputTensor\022\014\n"
  "\004name\030\001 \001(\t\022\020\n\010datatype\030\002 \001(\t\022\r\n\005shape\030\003"
  " \003(\003\022V\n\nparameters\030\004 \003(\0132B.hercules.prot"
  "o.ModelInferRequest.InferInputTensor.Par"
  "ametersEntry\0225\n\010contents\030\005 \001(\0132#.hercule"
  "s.proto.InferTensorContents\032Q\n\017Parameter"
  "sEntry\022\013\n\003key\030\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.her"
  "cules.proto.InferParameter:\0028\001\032\337\001\n\032Infer"
  "RequestedOutputTensor\022\014\n\004name\030\001 \001(\t\022`\n\np"
  "arameters\030\002 \003(\0132L.hercules.proto.ModelIn"
  "ferRequest.InferRequestedOutputTensor.Pa"
  "rametersEntry\032Q\n\017ParametersEntry\022\013\n\003key\030"
  "\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.hercules.proto.In"
  "ferParameter:\0028\001\032Q\n\017ParametersEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.hercules.proto"
  ".InferParameter:\0028\001\"\363\004\n\022ModelInferRespon"
  "se\022\022\n\nmodel_name\030\001 \001(\t\022\025\n\rmodel_version\030"
  "\002 \001(\t\022\n\n\002id\030\003 \001(\t\022F\n\nparameters\030\004 \003(\01322."
  "hercules.proto.ModelInferResponse.Parame"
  "tersEntry\022E\n\007outputs\030\005 \003(\01324.hercules.pr"
  "oto.ModelInferResponse.InferOutputTensor"
  "\022\033\n\023raw_output_contents\030\006 \003(\014\032\246\002\n\021InferO"
  "utputTensor\022\014\n\004name\030\001 \001(\t\022\020\n\010datatype\030\002 "
  "\001(\t\022\r\n\005shape\030\003 \003(\003\022X\n\nparameters\030\004 \003(\0132D"
  ".hercules.proto.ModelInferResponse.Infer"
  "OutputTensor.ParametersEntry\0225\n\010contents"
  "\030\005 \001(\0132#.hercules.proto.InferTensorConte"
  "nts\032Q\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\022-\n\005v"
  "alue\030\002 \001(\0132\036.hercules.proto.InferParamet"
  "er:\0028\001\032Q\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\022-"
  "\n\005value\030\002 \001(\0132\036.hercules.proto.InferPara"
  "meter:\0028\001\"m\n\030ModelStreamInferResponse\022\025\n"
  "\rerror_message\030\001 \001(\t\022:\n\016infer_response\030\002"
  " \001(\0132\".hercules.proto.ModelInferResponse"
  "\"3\n\022ModelConfigRequest\022\014\n\004name\030\001 \001(\t\022\017\n\007"
  "version\030\002 \001(\t\"B\n\023ModelConfigResponse\022+\n\006"
  "config\030\001 \001(\0132\033.hercules.proto.ModelConfi"
  "g\"7\n\026ModelStatisticsRequest\022\014\n\004name\030\001 \001("
  "\t\022\017\n\007version\030\002 \001(\t\".\n\021StatisticDuration\022"
  "\r\n\005count\030\001 \001(\004\022\n\n\002ns\030\002 \001(\004\"\304\003\n\017InferStat"
  "istics\0222\n\007success\030\001 \001(\0132!.hercules.proto"
  ".StatisticDuration\022/\n\004fail\030\002 \001(\0132!.hercu"
  "les.proto.StatisticDuration\0220\n\005queue\030\003 \001"
  "(\0132!.hercules.proto.StatisticDuration\0228\n"
  "\rcompute_input\030\004 \001(\0132!.hercules.proto.St"
  "atisticDuration\0228\n\rcompute_infer\030\005 \001(\0132!"
  ".hercules.proto.StatisticDuration\0229\n\016com"
  "pute_output\030\006 \001(\0132!.hercules.proto.Stati"
  "sticDuration\0224\n\tcache_hit\030\007 \001(\0132!.hercul"
  "es.proto.StatisticDuration\0225\n\ncache_miss"
  "\030\010 \001(\0132!.hercules.proto.StatisticDuratio"
  "n\"\331\001\n\024InferBatchStatistics\022\022\n\nbatch_size"
  "\030\001 \001(\004\0228\n\rcompute_input\030\002 \001(\0132!.hercules"
  ".proto.StatisticDuration\0228\n\rcompute_infe"
  "r\030\003 \001(\0132!.hercules.proto.StatisticDurati"
  "on\0229\n\016compute_output\030\004 \001(\0132!.hercules.pr"
  "oto.StatisticDuration\"\357\001\n\017ModelStatistic"
  "s\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\022\026\n\016last"
  "_inference\030\003 \001(\004\022\027\n\017inference_count\030\004 \001("
  "\004\022\027\n\017execution_count\030\005 \001(\004\0228\n\017inference_"
  "stats\030\006 \001(\0132\037.hercules.proto.InferStatis"
  "tics\0229\n\013batch_stats\030\007 \003(\0132$.hercules.pro"
  "to.InferBatchStatistics\"O\n\027ModelStatisti"
  "csResponse\0224\n\013model_stats\030\001 \003(\0132\037.hercul"
  "es.proto.ModelStatistics\"\212\001\n\030ModelReposi"
  "toryParameter\022\024\n\nbool_param\030\001 \001(\010H\000\022\025\n\013i"
  "nt64_param\030\002 \001(\003H\000\022\026\n\014string_param\030\003 \001(\t"
  "H\000\022\025\n\013bytes_param\030\004 \001(\014H\000B\022\n\020parameter_c"
  "hoice\"@\n\026RepositoryIndexRequest\022\027\n\017repos"
  "itory_name\030\001 \001(\t\022\r\n\005ready\030\002 \001(\010\"\251\001\n\027Repo"
  "sitoryIndexResponse\022B\n\006models\030\001 \003(\01322.he"
  "rcules.proto.RepositoryIndexResponse.Mod"
  "elIndex\032J\n\nModelIndex\022\014\n\004name\030\001 \001(\t\022\017\n\007v"
  "ersion\030\002 \001(\t\022\r\n\005state\030\003 \001(\t\022\016\n\006reason\030\004 "
  "\001(\t\"\366\001\n\032RepositoryModelLoadRequest\022\027\n\017re"
  "pository_name\030\001 \001(\t\022\022\n\nmodel_name\030\002 \001(\t\022"
  "N\n\nparameters\030\003 \003(\0132:.hercules.proto.Rep"
  "ositoryModelLoadRequest.ParametersEntry\032"
  "[\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\0227\n\005value"
  "\030\002 \001(\0132(.hercules.proto.ModelRepositoryP"
  "arameter:\0028\001\"\035\n\033RepositoryModelLoadRespo"
  "nse\"\372\001\n\034RepositoryModelUnloadRequest\022\027\n\017"
  "repository_name\030\001 \001(\t\022\022\n\nmodel_name\030\002 \001("
  "\t\022P\n\nparameters\030\003 \003(\0132<.hercules.proto.R"
  "epositoryModelUnloadRequest.ParametersEn"
  "try\032[\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\0227\n\005v"
  "alue\030\002 \001(\0132(.hercules.proto.ModelReposit"
  "oryParameter:\0028\001\"\037\n\035RepositoryModelUnloa"
  "dResponse\"/\n\037SystemSharedMemoryStatusReq"
  "uest\022\014\n\004name\030\001 \001(\t\"\257\002\n SystemSharedMemor"
  "yStatusResponse\022N\n\007regions\030\001 \003(\0132=.hercu"
  "les.proto.SystemSharedMemoryStatusRespon"
  "se.RegionsEntry\032L\n\014RegionStatus\022\014\n\004name\030"
  "\001 \001(\t\022\013\n\003key\030\002 \001(\t\022\016\n\006offset\030\003 \001(\004\022\021\n\tby"
  "te_size\030\004 \001(\004\032m\n\014RegionsEntry\022\013\n\003key\030\001 \001"
  "(\t\022L\n\005value\030\002 \001(\0132=.hercules.proto.Syste"
  "mSharedMemoryStatusResponse.RegionStatus"
  ":\0028\001\"a\n!SystemSharedMemoryRegisterReques"
  "t\022\014\n\004name\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022\016\n\006offset\030\003"
  " \001(\004\022\021\n\tbyte_size\030\004 \001(\004\"$\n\"SystemSharedM"
  "emoryRegisterResponse\"3\n#SystemSharedMem"
  "oryUnregisterRequest\022\014\n\004name\030\001 \001(\t\"&\n$Sy"
  "stemSharedMemoryUnregisterResponse\"-\n\035Cu"
  "daSharedMemoryStatusRequest\022\014\n\004name\030\001 \001("
  "\t\"\237\002\n\036CudaSharedMemoryStatusResponse\022L\n\007"
  "regions\030\001 \003(\0132;.hercules.proto.CudaShare"
  "dMemoryStatusResponse.RegionsEntry\032B\n\014Re"
  "gionStatus\022\014\n\004name\030\001 \001(\t\022\021\n\tdevice_id\030\002 "
  "\001(\004\022\021\n\tbyte_size\030\003 \001(\004\032k\n\014RegionsEntry\022\013"
  "\n\003key\030\001 \001(\t\022J\n\005value\030\002 \001(\0132;.hercules.pr"
  "oto.CudaSharedMemoryStatusResponse.Regio"
  "nStatus:\0028\001\"i\n\037CudaSharedMemoryRegisterR"
  "equest\022\014\n\004name\030\001 \001(\t\022\022\n\nraw_handle\030\002 \001(\014"
  "\022\021\n\tdevice_id\030\003 \001(\003\022\021\n\tbyte_size\030\004 \001(\004\"\""
  "\n CudaSharedMemoryRegisterResponse\"1\n!Cu"
  "daSharedMemoryUnregisterRequest\022\014\n\004name\030"
  "\001 \001(\t\"$\n\"CudaSharedMemoryUnregisterRespo"
  "nse\"\360\001\n\023TraceSettingRequest\022C\n\010settings\030"
  "\001 \003(\01321.hercules.proto.TraceSettingReque"
  "st.SettingsEntry\022\022\n\nmodel_name\030\002 \001(\t\032\035\n\014"
  "SettingValue\022\r\n\005value\030\001 \003(\t\032a\n\rSettingsE"
  "ntry\022\013\n\003key\030\001 \001(\t\022\?\n\005value\030\002 \001(\01320.hercu"
  "les.proto.TraceSettingRequest.SettingVal"
  "ue:\0028\001\"\337\001\n\024TraceSettingResponse\022D\n\010setti"
  "ngs\030\001 \003(\01322.hercules.proto.TraceSettingR"
  "esponse.SettingsEntry\032\035\n\014SettingValue\022\r\n"
  "\005value\030\001 \003(\t\032b\n\rSettingsEntry\022\013\n\003key\030\001 \001"
  "(\t\022@\n\005value\030\002 \001(\01321.hercules.proto.Trace"
  "SettingResponse.SettingValue:\0028\0012\247\020\n\024GRP"
  "CInferenceService\022U\n\nServerLive\022!.hercul"
  "es.proto.ServerLiveRequest\032\".hercules.pr"
  "oto.ServerLiveResponse\"\000\022X\n\013ServerReady\022"
  "\".hercules.proto.ServerReadyRequest\032#.he"
  "rcules.proto.ServerReadyResponse\"\000\022U\n\nMo"
  "delReady\022!.hercules.proto.ModelReadyRequ"
  "est\032\".hercules.proto.ModelReadyResponse\""
  "\000\022a\n\016ServerMetadata\022%.hercules.proto.Ser"
  "verMetadataRequest\032&.hercules.proto.Serv"
  "erMetadataResponse\"\000\022^\n\rModelMetadata\022$."
  "hercules.proto.ModelMetadataRequest\032%.he"
  "rcules.proto.ModelMetadataResponse\"\000\022U\n\n"
  "ModelInfer\022!.hercules.proto.ModelInferRe"
  "quest\032\".hercules.proto.ModelInferRespons"
  "e\"\000\022e\n\020ModelStreamInfer\022!.hercules.proto"
  ".ModelInferRequest\032(.hercules.proto.Mode"
  "lStreamInferResponse\"\000(\0010\001\022X\n\013ModelConfi"
  "g\022\".hercules.proto.ModelConfigRequest\032#."
  "hercules.proto.ModelConfigResponse\"\000\022d\n\017"
  "ModelStatistics\022&.hercules.proto.ModelSt"
  "atisticsRequest\032\'.hercules.proto.ModelSt"
  "atisticsResponse\"\000\022d\n\017RepositoryIndex\022&."
  "hercules.proto.RepositoryIndexRequest\032\'."
  "hercules.proto.RepositoryIndexResponse\"\000"
  "\022p\n\023RepositoryModelLoad\022*.hercules.proto"
  ".RepositoryModelLoadRequest\032+.hercules.p"
  "roto.RepositoryModelLoadResponse\"\000\022v\n\025Re"
  "positoryModelUnload\022,.hercules.proto.Rep"
  "ositoryModelUnloadRequest\032-.hercules.pro"
  "to.RepositoryModelUnloadResponse\"\000\022\177\n\030Sy"
  "stemSharedMemoryStatus\022/.hercules.proto."
  "SystemSharedMemoryStatusRequest\0320.hercul"
  "es.proto.SystemSharedMemoryStatusRespons"
  "e\"\000\022\205\001\n\032SystemSharedMemoryRegister\0221.her"
  "cules.proto.SystemSharedMemoryRegisterRe"
  "quest\0322.hercules.proto.SystemSharedMemor"
  "yRegisterResponse\"\000\022\213\001\n\034SystemSharedMemo"
  "ryUnregister\0223.hercules.proto.SystemShar"
  "edMemoryUnregisterRequest\0324.hercules.pro"
  "to.SystemSharedMemoryUnregisterResponse\""
  "\000\022y\n\026CudaSharedMemoryStatus\022-.hercules.p"
  "roto.CudaSharedMemoryStatusRequest\032..her"
  "cules.proto.CudaSharedMemoryStatusRespon"
  "se\"\000\022\177\n\030CudaSharedMemoryRegister\022/.hercu"
  "les.proto.CudaSharedMemoryRegisterReques"
  "t\0320.hercules.proto.CudaSharedMemoryRegis"
  "terResponse\"\000\022\205\001\n\032CudaSharedMemoryUnregi"
  "ster\0221.hercules.proto.CudaSharedMemoryUn"
  "registerRequest\0322.hercules.proto.CudaSha"
  "redMemoryUnregisterResponse\"\000\022[\n\014TraceSe"
  "tting\022#.hercules.proto.TraceSettingReque"
  "st\032$.hercules.proto.TraceSettingResponse"
  "\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_deps[1] = {
  &::descriptor_table_hercules_2fproto_2fmodel_5fconfig_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_sccs[64] = {
  &scc_info_CudaSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_CudaSharedMemoryRegisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_CudaSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_CudaSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_CudaSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_CudaSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_CudaSharedMemoryUnregisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_InferBatchStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_InferStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_InferTensorContents_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelConfigRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelConfigResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelInferRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelInferRequest_InferInputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelInferRequest_InferRequestedOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelInferRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelInferResponse_InferOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelInferResponse_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelMetadataResponse_TensorMetadata_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelReadyResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelRepositoryParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelStatisticsRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelStatisticsResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ModelStreamInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_RepositoryIndexRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_RepositoryIndexResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_RepositoryIndexResponse_ModelIndex_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_RepositoryModelLoadRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_RepositoryModelLoadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_RepositoryModelLoadResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_RepositoryModelUnloadRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_RepositoryModelUnloadResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ServerLiveRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ServerLiveResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ServerMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ServerMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ServerReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_ServerReadyResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_StatisticDuration_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_SystemSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_SystemSharedMemoryRegisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_SystemSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_SystemSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_SystemSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_SystemSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_SystemSharedMemoryUnregisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_TraceSettingRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_TraceSettingRequest_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_TraceSettingRequest_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_TraceSettingResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_TraceSettingResponse_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto.base,
  &scc_info_TraceSettingResponse_SettingsEntry_DoNotUse_hercules_2fproto_2fhercules_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto = {
  false, false, descriptor_table_protodef_hercules_2fproto_2fhercules_5fservice_2eproto, "hercules/proto/hercules_service.proto", 8610,
  &descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_once, descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_sccs, descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto_deps, 64, 1,
  schemas, file_default_instances, TableStruct_hercules_2fproto_2fhercules_5fservice_2eproto::offsets,
  file_level_metadata_hercules_2fproto_2fhercules_5fservice_2eproto, 64, file_level_enum_descriptors_hercules_2fproto_2fhercules_5fservice_2eproto, file_level_service_descriptors_hercules_2fproto_2fhercules_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_hercules_2fproto_2fhercules_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_hercules_2fproto_2fhercules_5fservice_2eproto)), true);
namespace hercules {
namespace proto {

// ===================================================================

void ServerLiveRequest::InitAsDefaultInstance() {
}
class ServerLiveRequest::_Internal {
 public:
};

ServerLiveRequest::ServerLiveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerLiveRequest)
}
ServerLiveRequest::ServerLiveRequest(const ServerLiveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerLiveRequest)
}

void ServerLiveRequest::SharedCtor() {
}

ServerLiveRequest::~ServerLiveRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ServerLiveRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerLiveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerLiveRequest::ArenaDtor(void* object) {
  ServerLiveRequest* _this = reinterpret_cast< ServerLiveRequest* >(object);
  (void)_this;
}
void ServerLiveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerLiveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerLiveRequest& ServerLiveRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerLiveRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerLiveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ServerLiveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerLiveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerLiveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ServerLiveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ServerLiveRequest)
  return target;
}

size_t ServerLiveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ServerLiveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerLiveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ServerLiveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerLiveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerLiveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ServerLiveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ServerLiveRequest)
    MergeFrom(*source);
  }
}

void ServerLiveRequest::MergeFrom(const ServerLiveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ServerLiveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerLiveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ServerLiveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerLiveRequest::CopyFrom(const ServerLiveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ServerLiveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerLiveRequest::IsInitialized() const {
  return true;
}

void ServerLiveRequest::InternalSwap(ServerLiveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerLiveRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerLiveResponse::InitAsDefaultInstance() {
}
class ServerLiveResponse::_Internal {
 public:
};

ServerLiveResponse::ServerLiveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerLiveResponse)
}
ServerLiveResponse::ServerLiveResponse(const ServerLiveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  live_ = from.live_;
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerLiveResponse)
}

void ServerLiveResponse::SharedCtor() {
  live_ = false;
}

ServerLiveResponse::~ServerLiveResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ServerLiveResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerLiveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerLiveResponse::ArenaDtor(void* object) {
  ServerLiveResponse* _this = reinterpret_cast< ServerLiveResponse* >(object);
  (void)_this;
}
void ServerLiveResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerLiveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerLiveResponse& ServerLiveResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerLiveResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerLiveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ServerLiveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  live_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerLiveResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool live = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          live_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerLiveResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ServerLiveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool live = 1;
  if (this->live() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_live(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ServerLiveResponse)
  return target;
}

size_t ServerLiveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ServerLiveResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool live = 1;
  if (this->live() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerLiveResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ServerLiveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerLiveResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerLiveResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ServerLiveResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ServerLiveResponse)
    MergeFrom(*source);
  }
}

void ServerLiveResponse::MergeFrom(const ServerLiveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ServerLiveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.live() != 0) {
    _internal_set_live(from._internal_live());
  }
}

void ServerLiveResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ServerLiveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerLiveResponse::CopyFrom(const ServerLiveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ServerLiveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerLiveResponse::IsInitialized() const {
  return true;
}

void ServerLiveResponse::InternalSwap(ServerLiveResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(live_, other->live_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerLiveResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerReadyRequest::InitAsDefaultInstance() {
}
class ServerReadyRequest::_Internal {
 public:
};

ServerReadyRequest::ServerReadyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerReadyRequest)
}
ServerReadyRequest::ServerReadyRequest(const ServerReadyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerReadyRequest)
}

void ServerReadyRequest::SharedCtor() {
}

ServerReadyRequest::~ServerReadyRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ServerReadyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerReadyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerReadyRequest::ArenaDtor(void* object) {
  ServerReadyRequest* _this = reinterpret_cast< ServerReadyRequest* >(object);
  (void)_this;
}
void ServerReadyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerReadyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerReadyRequest& ServerReadyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerReadyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ServerReadyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerReadyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerReadyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ServerReadyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ServerReadyRequest)
  return target;
}

size_t ServerReadyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ServerReadyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerReadyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ServerReadyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerReadyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerReadyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ServerReadyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ServerReadyRequest)
    MergeFrom(*source);
  }
}

void ServerReadyRequest::MergeFrom(const ServerReadyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ServerReadyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerReadyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ServerReadyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerReadyRequest::CopyFrom(const ServerReadyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ServerReadyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReadyRequest::IsInitialized() const {
  return true;
}

void ServerReadyRequest::InternalSwap(ServerReadyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerReadyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerReadyResponse::InitAsDefaultInstance() {
}
class ServerReadyResponse::_Internal {
 public:
};

ServerReadyResponse::ServerReadyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerReadyResponse)
}
ServerReadyResponse::ServerReadyResponse(const ServerReadyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ready_ = from.ready_;
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerReadyResponse)
}

void ServerReadyResponse::SharedCtor() {
  ready_ = false;
}

ServerReadyResponse::~ServerReadyResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ServerReadyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerReadyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerReadyResponse::ArenaDtor(void* object) {
  ServerReadyResponse* _this = reinterpret_cast< ServerReadyResponse* >(object);
  (void)_this;
}
void ServerReadyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerReadyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerReadyResponse& ServerReadyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerReadyResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerReadyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ServerReadyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ready_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerReadyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool ready = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerReadyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ServerReadyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ready(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ServerReadyResponse)
  return target;
}

size_t ServerReadyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ServerReadyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->ready() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerReadyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ServerReadyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerReadyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerReadyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ServerReadyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ServerReadyResponse)
    MergeFrom(*source);
  }
}

void ServerReadyResponse::MergeFrom(const ServerReadyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ServerReadyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ready() != 0) {
    _internal_set_ready(from._internal_ready());
  }
}

void ServerReadyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ServerReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerReadyResponse::CopyFrom(const ServerReadyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ServerReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReadyResponse::IsInitialized() const {
  return true;
}

void ServerReadyResponse::InternalSwap(ServerReadyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(ready_, other->ready_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerReadyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelReadyRequest::InitAsDefaultInstance() {
}
class ModelReadyRequest::_Internal {
 public:
};

ModelReadyRequest::ModelReadyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelReadyRequest)
}
ModelReadyRequest::ModelReadyRequest(const ModelReadyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelReadyRequest)
}

void ModelReadyRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelReadyRequest::~ModelReadyRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelReadyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelReadyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelReadyRequest::ArenaDtor(void* object) {
  ModelReadyRequest* _this = reinterpret_cast< ModelReadyRequest* >(object);
  (void)_this;
}
void ModelReadyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelReadyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelReadyRequest& ModelReadyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelReadyRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelReadyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelReadyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelReadyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelReadyRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelReadyRequest.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelReadyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelReadyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelReadyRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelReadyRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelReadyRequest)
  return target;
}

size_t ModelReadyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelReadyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelReadyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelReadyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelReadyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelReadyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelReadyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelReadyRequest)
    MergeFrom(*source);
  }
}

void ModelReadyRequest::MergeFrom(const ModelReadyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelReadyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void ModelReadyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelReadyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelReadyRequest::CopyFrom(const ModelReadyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelReadyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelReadyRequest::IsInitialized() const {
  return true;
}

void ModelReadyRequest::InternalSwap(ModelReadyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelReadyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelReadyResponse::InitAsDefaultInstance() {
}
class ModelReadyResponse::_Internal {
 public:
};

ModelReadyResponse::ModelReadyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelReadyResponse)
}
ModelReadyResponse::ModelReadyResponse(const ModelReadyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ready_ = from.ready_;
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelReadyResponse)
}

void ModelReadyResponse::SharedCtor() {
  ready_ = false;
}

ModelReadyResponse::~ModelReadyResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelReadyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelReadyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ModelReadyResponse::ArenaDtor(void* object) {
  ModelReadyResponse* _this = reinterpret_cast< ModelReadyResponse* >(object);
  (void)_this;
}
void ModelReadyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelReadyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelReadyResponse& ModelReadyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelReadyResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelReadyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelReadyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ready_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelReadyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool ready = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelReadyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelReadyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ready(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelReadyResponse)
  return target;
}

size_t ModelReadyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelReadyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->ready() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelReadyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelReadyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelReadyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelReadyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelReadyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelReadyResponse)
    MergeFrom(*source);
  }
}

void ModelReadyResponse::MergeFrom(const ModelReadyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelReadyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ready() != 0) {
    _internal_set_ready(from._internal_ready());
  }
}

void ModelReadyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelReadyResponse::CopyFrom(const ModelReadyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelReadyResponse::IsInitialized() const {
  return true;
}

void ModelReadyResponse::InternalSwap(ModelReadyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(ready_, other->ready_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelReadyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerMetadataRequest::InitAsDefaultInstance() {
}
class ServerMetadataRequest::_Internal {
 public:
};

ServerMetadataRequest::ServerMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerMetadataRequest)
}
ServerMetadataRequest::ServerMetadataRequest(const ServerMetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerMetadataRequest)
}

void ServerMetadataRequest::SharedCtor() {
}

ServerMetadataRequest::~ServerMetadataRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ServerMetadataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerMetadataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerMetadataRequest::ArenaDtor(void* object) {
  ServerMetadataRequest* _this = reinterpret_cast< ServerMetadataRequest* >(object);
  (void)_this;
}
void ServerMetadataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerMetadataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerMetadataRequest& ServerMetadataRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ServerMetadataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMetadataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerMetadataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ServerMetadataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ServerMetadataRequest)
  return target;
}

size_t ServerMetadataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ServerMetadataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMetadataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ServerMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMetadataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerMetadataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ServerMetadataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ServerMetadataRequest)
    MergeFrom(*source);
  }
}

void ServerMetadataRequest::MergeFrom(const ServerMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ServerMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerMetadataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ServerMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMetadataRequest::CopyFrom(const ServerMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ServerMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMetadataRequest::IsInitialized() const {
  return true;
}

void ServerMetadataRequest::InternalSwap(ServerMetadataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMetadataRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerMetadataResponse::InitAsDefaultInstance() {
}
class ServerMetadataResponse::_Internal {
 public:
};

ServerMetadataResponse::ServerMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  extensions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ServerMetadataResponse)
}
ServerMetadataResponse::ServerMetadataResponse(const ServerMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      extensions_(from.extensions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ServerMetadataResponse)
}

void ServerMetadataResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServerMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ServerMetadataResponse::~ServerMetadataResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ServerMetadataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerMetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ServerMetadataResponse::ArenaDtor(void* object) {
  ServerMetadataResponse* _this = reinterpret_cast< ServerMetadataResponse* >(object);
  (void)_this;
}
void ServerMetadataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerMetadataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerMetadataResponse& ServerMetadataResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ServerMetadataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extensions_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMetadataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ServerMetadataResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ServerMetadataResponse.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string extensions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_extensions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ServerMetadataResponse.extensions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerMetadataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ServerMetadataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ServerMetadataResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ServerMetadataResponse.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // repeated string extensions = 3;
  for (int i = 0, n = this->_internal_extensions_size(); i < n; i++) {
    const auto& s = this->_internal_extensions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ServerMetadataResponse.extensions");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ServerMetadataResponse)
  return target;
}

size_t ServerMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ServerMetadataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string extensions = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(extensions_.size());
  for (int i = 0, n = extensions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      extensions_.Get(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMetadataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ServerMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMetadataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerMetadataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ServerMetadataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ServerMetadataResponse)
    MergeFrom(*source);
  }
}

void ServerMetadataResponse::MergeFrom(const ServerMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ServerMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extensions_.MergeFrom(from.extensions_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void ServerMetadataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ServerMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMetadataResponse::CopyFrom(const ServerMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ServerMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMetadataResponse::IsInitialized() const {
  return true;
}

void ServerMetadataResponse::InternalSwap(ServerMetadataResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  extensions_.InternalSwap(&other->extensions_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMetadataResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelMetadataRequest::InitAsDefaultInstance() {
}
class ModelMetadataRequest::_Internal {
 public:
};

ModelMetadataRequest::ModelMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelMetadataRequest)
}
ModelMetadataRequest::ModelMetadataRequest(const ModelMetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelMetadataRequest)
}

void ModelMetadataRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelMetadataRequest::~ModelMetadataRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelMetadataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelMetadataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelMetadataRequest::ArenaDtor(void* object) {
  ModelMetadataRequest* _this = reinterpret_cast< ModelMetadataRequest* >(object);
  (void)_this;
}
void ModelMetadataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelMetadataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelMetadataRequest& ModelMetadataRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelMetadataRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelMetadataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelMetadataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelMetadataRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelMetadataRequest.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelMetadataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelMetadataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelMetadataRequest)
  return target;
}

size_t ModelMetadataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelMetadataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelMetadataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelMetadataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelMetadataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelMetadataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelMetadataRequest)
    MergeFrom(*source);
  }
}

void ModelMetadataRequest::MergeFrom(const ModelMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void ModelMetadataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelMetadataRequest::CopyFrom(const ModelMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMetadataRequest::IsInitialized() const {
  return true;
}

void ModelMetadataRequest::InternalSwap(ModelMetadataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelMetadataRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelMetadataResponse_TensorMetadata::InitAsDefaultInstance() {
}
class ModelMetadataResponse_TensorMetadata::_Internal {
 public:
};

ModelMetadataResponse_TensorMetadata::ModelMetadataResponse_TensorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  shape_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelMetadataResponse.TensorMetadata)
}
ModelMetadataResponse_TensorMetadata::ModelMetadataResponse_TensorMetadata(const ModelMetadataResponse_TensorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  datatype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datatype().empty()) {
    datatype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datatype(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelMetadataResponse.TensorMetadata)
}

void ModelMetadataResponse_TensorMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelMetadataResponse_TensorMetadata_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  datatype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelMetadataResponse_TensorMetadata::~ModelMetadataResponse_TensorMetadata() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelMetadataResponse.TensorMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelMetadataResponse_TensorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  datatype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelMetadataResponse_TensorMetadata::ArenaDtor(void* object) {
  ModelMetadataResponse_TensorMetadata* _this = reinterpret_cast< ModelMetadataResponse_TensorMetadata* >(object);
  (void)_this;
}
void ModelMetadataResponse_TensorMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelMetadataResponse_TensorMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelMetadataResponse_TensorMetadata& ModelMetadataResponse_TensorMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelMetadataResponse_TensorMetadata_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelMetadataResponse_TensorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  datatype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelMetadataResponse_TensorMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelMetadataResponse.TensorMetadata.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string datatype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_datatype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelMetadataResponse.TensorMetadata.datatype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelMetadataResponse_TensorMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataResponse.TensorMetadata.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string datatype = 2;
  if (this->datatype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datatype().data(), static_cast<int>(this->_internal_datatype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataResponse.TensorMetadata.datatype");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_datatype(), target);
  }

  // repeated int64 shape = 3;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_shape(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelMetadataResponse.TensorMetadata)
  return target;
}

size_t ModelMetadataResponse_TensorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 shape = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string datatype = 2;
  if (this->datatype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datatype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelMetadataResponse_TensorMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelMetadataResponse_TensorMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelMetadataResponse_TensorMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelMetadataResponse.TensorMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelMetadataResponse.TensorMetadata)
    MergeFrom(*source);
  }
}

void ModelMetadataResponse_TensorMetadata::MergeFrom(const ModelMetadataResponse_TensorMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.datatype().size() > 0) {
    _internal_set_datatype(from._internal_datatype());
  }
}

void ModelMetadataResponse_TensorMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelMetadataResponse_TensorMetadata::CopyFrom(const ModelMetadataResponse_TensorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelMetadataResponse.TensorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMetadataResponse_TensorMetadata::IsInitialized() const {
  return true;
}

void ModelMetadataResponse_TensorMetadata::InternalSwap(ModelMetadataResponse_TensorMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  datatype_.Swap(&other->datatype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelMetadataResponse_TensorMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelMetadataResponse::InitAsDefaultInstance() {
}
class ModelMetadataResponse::_Internal {
 public:
};

ModelMetadataResponse::ModelMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  versions_(arena),
  inputs_(arena),
  outputs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelMetadataResponse)
}
ModelMetadataResponse::ModelMetadataResponse(const ModelMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      versions_(from.versions_),
      inputs_(from.inputs_),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  platform_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_platform().empty()) {
    platform_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_platform(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelMetadataResponse)
}

void ModelMetadataResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelMetadataResponse::~ModelMetadataResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelMetadataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelMetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelMetadataResponse::ArenaDtor(void* object) {
  ModelMetadataResponse* _this = reinterpret_cast< ModelMetadataResponse* >(object);
  (void)_this;
}
void ModelMetadataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelMetadataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelMetadataResponse& ModelMetadataResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelMetadataResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelMetadataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versions_.Clear();
  inputs_.Clear();
  outputs_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  platform_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelMetadataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelMetadataResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string versions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_versions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelMetadataResponse.versions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string platform = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_platform();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelMetadataResponse.platform"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata inputs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata outputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelMetadataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelMetadataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated string versions = 2;
  for (int i = 0, n = this->_internal_versions_size(); i < n; i++) {
    const auto& s = this->_internal_versions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataResponse.versions");
    target = stream->WriteString(2, s, target);
  }

  // string platform = 3;
  if (this->platform().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelMetadataResponse.platform");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_platform(), target);
  }

  // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata inputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_inputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_inputs(i), target, stream);
  }

  // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata outputs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_outputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_outputs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelMetadataResponse)
  return target;
}

size_t ModelMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelMetadataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string versions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(versions_.size());
  for (int i = 0, n = versions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      versions_.Get(i));
  }

  // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata inputs = 4;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .hercules.proto.ModelMetadataResponse.TensorMetadata outputs = 5;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string platform = 3;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelMetadataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelMetadataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelMetadataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelMetadataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelMetadataResponse)
    MergeFrom(*source);
  }
}

void ModelMetadataResponse::MergeFrom(const ModelMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  versions_.MergeFrom(from.versions_);
  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.platform().size() > 0) {
    _internal_set_platform(from._internal_platform());
  }
}

void ModelMetadataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelMetadataResponse::CopyFrom(const ModelMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMetadataResponse::IsInitialized() const {
  return true;
}

void ModelMetadataResponse::InternalSwap(ModelMetadataResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  versions_.InternalSwap(&other->versions_);
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  platform_.Swap(&other->platform_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelMetadataResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InferParameter::InitAsDefaultInstance() {
  ::hercules::proto::_InferParameter_default_instance_.bool_param_ = false;
  ::hercules::proto::_InferParameter_default_instance_.int64_param_ = PROTOBUF_LONGLONG(0);
  ::hercules::proto::_InferParameter_default_instance_.string_param_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class InferParameter::_Internal {
 public:
};

InferParameter::InferParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.InferParameter)
}
InferParameter::InferParameter(const InferParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_parameter_choice();
  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _internal_set_string_param(from._internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.InferParameter)
}

void InferParameter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  clear_has_parameter_choice();
}

InferParameter::~InferParameter() {
  // @@protoc_insertion_point(destructor:hercules.proto.InferParameter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InferParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_parameter_choice()) {
    clear_parameter_choice();
  }
}

void InferParameter::ArenaDtor(void* object) {
  InferParameter* _this = reinterpret_cast< InferParameter* >(object);
  (void)_this;
}
void InferParameter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InferParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InferParameter& InferParameter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InferParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void InferParameter::clear_parameter_choice() {
// @@protoc_insertion_point(one_of_clear_start:hercules.proto.InferParameter)
  switch (parameter_choice_case()) {
    case kBoolParam: {
      // No need to clear
      break;
    }
    case kInt64Param: {
      // No need to clear
      break;
    }
    case kStringParam: {
      parameter_choice_.string_param_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETER_CHOICE_NOT_SET;
}


void InferParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.InferParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameter_choice();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferParameter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool bool_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _internal_set_bool_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 int64_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_int64_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string string_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_string_param();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.InferParameter.string_param"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InferParameter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.InferParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_param = 1;
  if (_internal_has_bool_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_bool_param(), target);
  }

  // int64 int64_param = 2;
  if (_internal_has_int64_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_int64_param(), target);
  }

  // string string_param = 3;
  if (_internal_has_string_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_param().data(), static_cast<int>(this->_internal_string_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.InferParameter.string_param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_string_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.InferParameter)
  return target;
}

size_t InferParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.InferParameter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (parameter_choice_case()) {
    // bool bool_param = 1;
    case kBoolParam: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_param = 2;
    case kInt64Param: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_int64_param());
      break;
    }
    // string string_param = 3;
    case kStringParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferParameter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.InferParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const InferParameter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InferParameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.InferParameter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.InferParameter)
    MergeFrom(*source);
  }
}

void InferParameter::MergeFrom(const InferParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.InferParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _internal_set_string_param(from._internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
}

void InferParameter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.InferParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferParameter::CopyFrom(const InferParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.InferParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferParameter::IsInitialized() const {
  return true;
}

void InferParameter::InternalSwap(InferParameter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(parameter_choice_, other->parameter_choice_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InferParameter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InferTensorContents::InitAsDefaultInstance() {
}
class InferTensorContents::_Internal {
 public:
};

InferTensorContents::InferTensorContents(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  bool_contents_(arena),
  int_contents_(arena),
  int64_contents_(arena),
  uint_contents_(arena),
  uint64_contents_(arena),
  fp32_contents_(arena),
  fp64_contents_(arena),
  bytes_contents_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.InferTensorContents)
}
InferTensorContents::InferTensorContents(const InferTensorContents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bool_contents_(from.bool_contents_),
      int_contents_(from.int_contents_),
      int64_contents_(from.int64_contents_),
      uint_contents_(from.uint_contents_),
      uint64_contents_(from.uint64_contents_),
      fp32_contents_(from.fp32_contents_),
      fp64_contents_(from.fp64_contents_),
      bytes_contents_(from.bytes_contents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.InferTensorContents)
}

void InferTensorContents::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InferTensorContents_hercules_2fproto_2fhercules_5fservice_2eproto.base);
}

InferTensorContents::~InferTensorContents() {
  // @@protoc_insertion_point(destructor:hercules.proto.InferTensorContents)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InferTensorContents::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void InferTensorContents::ArenaDtor(void* object) {
  InferTensorContents* _this = reinterpret_cast< InferTensorContents* >(object);
  (void)_this;
}
void InferTensorContents::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InferTensorContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InferTensorContents& InferTensorContents::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InferTensorContents_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void InferTensorContents::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.InferTensorContents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bool_contents_.Clear();
  int_contents_.Clear();
  int64_contents_.Clear();
  uint_contents_.Clear();
  uint64_contents_.Clear();
  fp32_contents_.Clear();
  fp64_contents_.Clear();
  bytes_contents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferTensorContents::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated bool bool_contents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_bool_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_bool_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 int_contents = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_int_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_int_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 int64_contents = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_int64_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_int64_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 uint_contents = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_uint_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          _internal_add_uint_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 uint64_contents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_uint64_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          _internal_add_uint64_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated float fp32_contents = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_fp32_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53) {
          _internal_add_fp32_contents(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated double fp64_contents = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_fp64_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57) {
          _internal_add_fp64_contents(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated bytes bytes_contents = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_bytes_contents();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InferTensorContents::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.InferTensorContents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool bool_contents = 1;
  if (this->_internal_bool_contents_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_bool_contents(), target);
  }

  // repeated int32 int_contents = 2;
  {
    int byte_size = _int_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_int_contents(), byte_size, target);
    }
  }

  // repeated int64 int64_contents = 3;
  {
    int byte_size = _int64_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_int64_contents(), byte_size, target);
    }
  }

  // repeated uint32 uint_contents = 4;
  {
    int byte_size = _uint_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, _internal_uint_contents(), byte_size, target);
    }
  }

  // repeated uint64 uint64_contents = 5;
  {
    int byte_size = _uint64_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          5, _internal_uint64_contents(), byte_size, target);
    }
  }

  // repeated float fp32_contents = 6;
  if (this->_internal_fp32_contents_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_fp32_contents(), target);
  }

  // repeated double fp64_contents = 7;
  if (this->_internal_fp64_contents_size() > 0) {
    target = stream->WriteFixedPacked(7, _internal_fp64_contents(), target);
  }

  // repeated bytes bytes_contents = 8;
  for (int i = 0, n = this->_internal_bytes_contents_size(); i < n; i++) {
    const auto& s = this->_internal_bytes_contents(i);
    target = stream->WriteBytes(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.InferTensorContents)
  return target;
}

size_t InferTensorContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.InferTensorContents)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool bool_contents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_bool_contents_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _bool_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 int_contents = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->int_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _int_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int64 int64_contents = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->int64_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _int64_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 uint_contents = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->uint_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _uint_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint64 uint64_contents = 5;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->uint64_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _uint64_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float fp32_contents = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_fp32_contents_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _fp32_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double fp64_contents = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_fp64_contents_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _fp64_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated bytes bytes_contents = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(bytes_contents_.size());
  for (int i = 0, n = bytes_contents_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      bytes_contents_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferTensorContents::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.InferTensorContents)
  GOOGLE_DCHECK_NE(&from, this);
  const InferTensorContents* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InferTensorContents>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.InferTensorContents)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.InferTensorContents)
    MergeFrom(*source);
  }
}

void InferTensorContents::MergeFrom(const InferTensorContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.InferTensorContents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bool_contents_.MergeFrom(from.bool_contents_);
  int_contents_.MergeFrom(from.int_contents_);
  int64_contents_.MergeFrom(from.int64_contents_);
  uint_contents_.MergeFrom(from.uint_contents_);
  uint64_contents_.MergeFrom(from.uint64_contents_);
  fp32_contents_.MergeFrom(from.fp32_contents_);
  fp64_contents_.MergeFrom(from.fp64_contents_);
  bytes_contents_.MergeFrom(from.bytes_contents_);
}

void InferTensorContents::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.InferTensorContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferTensorContents::CopyFrom(const InferTensorContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.InferTensorContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferTensorContents::IsInitialized() const {
  return true;
}

void InferTensorContents::InternalSwap(InferTensorContents* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bool_contents_.InternalSwap(&other->bool_contents_);
  int_contents_.InternalSwap(&other->int_contents_);
  int64_contents_.InternalSwap(&other->int64_contents_);
  uint_contents_.InternalSwap(&other->uint_contents_);
  uint64_contents_.InternalSwap(&other->uint64_contents_);
  fp32_contents_.InternalSwap(&other->fp32_contents_);
  fp64_contents_.InternalSwap(&other->fp64_contents_);
  bytes_contents_.InternalSwap(&other->bytes_contents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InferTensorContents::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse() {}
ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::MergeFrom(const ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ModelInferRequest_InferInputTensor::InitAsDefaultInstance() {
  ::hercules::proto::_ModelInferRequest_InferInputTensor_default_instance_._instance.get_mutable()->contents_ = const_cast< ::hercules::proto::InferTensorContents*>(
      ::hercules::proto::InferTensorContents::internal_default_instance());
}
class ModelInferRequest_InferInputTensor::_Internal {
 public:
  static const ::hercules::proto::InferTensorContents& contents(const ModelInferRequest_InferInputTensor* msg);
};

const ::hercules::proto::InferTensorContents&
ModelInferRequest_InferInputTensor::_Internal::contents(const ModelInferRequest_InferInputTensor* msg) {
  return *msg->contents_;
}
ModelInferRequest_InferInputTensor::ModelInferRequest_InferInputTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  shape_(arena),
  parameters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelInferRequest.InferInputTensor)
}
ModelInferRequest_InferInputTensor::ModelInferRequest_InferInputTensor(const ModelInferRequest_InferInputTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  datatype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datatype().empty()) {
    datatype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datatype(),
      GetArena());
  }
  if (from._internal_has_contents()) {
    contents_ = new ::hercules::proto::InferTensorContents(*from.contents_);
  } else {
    contents_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelInferRequest.InferInputTensor)
}

void ModelInferRequest_InferInputTensor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelInferRequest_InferInputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  datatype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contents_ = nullptr;
}

ModelInferRequest_InferInputTensor::~ModelInferRequest_InferInputTensor() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelInferRequest.InferInputTensor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelInferRequest_InferInputTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  datatype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contents_;
}

void ModelInferRequest_InferInputTensor::ArenaDtor(void* object) {
  ModelInferRequest_InferInputTensor* _this = reinterpret_cast< ModelInferRequest_InferInputTensor* >(object);
  (void)_this;
}
void ModelInferRequest_InferInputTensor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelInferRequest_InferInputTensor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelInferRequest_InferInputTensor& ModelInferRequest_InferInputTensor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelInferRequest_InferInputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelInferRequest_InferInputTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelInferRequest.InferInputTensor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  parameters_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  datatype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && contents_ != nullptr) {
    delete contents_;
  }
  contents_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferRequest_InferInputTensor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferRequest.InferInputTensor.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string datatype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_datatype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferRequest.InferInputTensor.datatype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .hercules.proto.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // .hercules.proto.InferTensorContents contents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_contents(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelInferRequest_InferInputTensor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelInferRequest.InferInputTensor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.InferInputTensor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string datatype = 2;
  if (this->datatype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datatype().data(), static_cast<int>(this->_internal_datatype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.InferInputTensor.datatype");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_datatype(), target);
  }

  // repeated int64 shape = 3;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_shape(), byte_size, target);
    }
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.ModelInferRequest.InferInputTensor.ParametersEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_parameters().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it) {
        target = ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .hercules.proto.InferTensorContents contents = 5;
  if (this->has_contents()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::contents(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelInferRequest.InferInputTensor)
  return target;
}

size_t ModelInferRequest_InferInputTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelInferRequest.InferInputTensor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 shape = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string datatype = 2;
  if (this->datatype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datatype());
  }

  // .hercules.proto.InferTensorContents contents = 5;
  if (this->has_contents()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contents_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelInferRequest_InferInputTensor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelInferRequest.InferInputTensor)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelInferRequest_InferInputTensor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelInferRequest_InferInputTensor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelInferRequest.InferInputTensor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelInferRequest.InferInputTensor)
    MergeFrom(*source);
  }
}

void ModelInferRequest_InferInputTensor::MergeFrom(const ModelInferRequest_InferInputTensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelInferRequest.InferInputTensor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  parameters_.MergeFrom(from.parameters_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.datatype().size() > 0) {
    _internal_set_datatype(from._internal_datatype());
  }
  if (from.has_contents()) {
    _internal_mutable_contents()->::hercules::proto::InferTensorContents::MergeFrom(from._internal_contents());
  }
}

void ModelInferRequest_InferInputTensor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelInferRequest.InferInputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelInferRequest_InferInputTensor::CopyFrom(const ModelInferRequest_InferInputTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelInferRequest.InferInputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferRequest_InferInputTensor::IsInitialized() const {
  return true;
}

void ModelInferRequest_InferInputTensor::InternalSwap(ModelInferRequest_InferInputTensor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  parameters_.Swap(&other->parameters_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  datatype_.Swap(&other->datatype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(contents_, other->contents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferInputTensor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse() {}
ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::MergeFrom(const ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ModelInferRequest_InferRequestedOutputTensor::InitAsDefaultInstance() {
}
class ModelInferRequest_InferRequestedOutputTensor::_Internal {
 public:
};

ModelInferRequest_InferRequestedOutputTensor::ModelInferRequest_InferRequestedOutputTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  parameters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
}
ModelInferRequest_InferRequestedOutputTensor::ModelInferRequest_InferRequestedOutputTensor(const ModelInferRequest_InferRequestedOutputTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
}

void ModelInferRequest_InferRequestedOutputTensor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelInferRequest_InferRequestedOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelInferRequest_InferRequestedOutputTensor::~ModelInferRequest_InferRequestedOutputTensor() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelInferRequest_InferRequestedOutputTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelInferRequest_InferRequestedOutputTensor::ArenaDtor(void* object) {
  ModelInferRequest_InferRequestedOutputTensor* _this = reinterpret_cast< ModelInferRequest_InferRequestedOutputTensor* >(object);
  (void)_this;
}
void ModelInferRequest_InferRequestedOutputTensor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelInferRequest_InferRequestedOutputTensor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelInferRequest_InferRequestedOutputTensor& ModelInferRequest_InferRequestedOutputTensor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelInferRequest_InferRequestedOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelInferRequest_InferRequestedOutputTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferRequest_InferRequestedOutputTensor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferRequest.InferRequestedOutputTensor.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .hercules.proto.InferParameter> parameters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelInferRequest_InferRequestedOutputTensor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.InferRequestedOutputTensor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // map<string, .hercules.proto.InferParameter> parameters = 2;
  if (!this->_internal_parameters().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.ModelInferRequest.InferRequestedOutputTensor.ParametersEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_parameters().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it) {
        target = ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  return target;
}

size_t ModelInferRequest_InferRequestedOutputTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.InferParameter> parameters = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelInferRequest_InferRequestedOutputTensor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelInferRequest_InferRequestedOutputTensor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelInferRequest_InferRequestedOutputTensor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
    MergeFrom(*source);
  }
}

void ModelInferRequest_InferRequestedOutputTensor::MergeFrom(const ModelInferRequest_InferRequestedOutputTensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void ModelInferRequest_InferRequestedOutputTensor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelInferRequest_InferRequestedOutputTensor::CopyFrom(const ModelInferRequest_InferRequestedOutputTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelInferRequest.InferRequestedOutputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferRequest_InferRequestedOutputTensor::IsInitialized() const {
  return true;
}

void ModelInferRequest_InferRequestedOutputTensor::InternalSwap(ModelInferRequest_InferRequestedOutputTensor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parameters_.Swap(&other->parameters_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferRequestedOutputTensor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ModelInferRequest_ParametersEntry_DoNotUse::ModelInferRequest_ParametersEntry_DoNotUse() {}
ModelInferRequest_ParametersEntry_DoNotUse::ModelInferRequest_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferRequest_ParametersEntry_DoNotUse::MergeFrom(const ModelInferRequest_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ModelInferRequest_ParametersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ModelInferRequest::InitAsDefaultInstance() {
}
class ModelInferRequest::_Internal {
 public:
};

ModelInferRequest::ModelInferRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  parameters_(arena),
  inputs_(arena),
  outputs_(arena),
  raw_input_contents_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelInferRequest)
}
ModelInferRequest::ModelInferRequest(const ModelInferRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      inputs_(from.inputs_),
      outputs_(from.outputs_),
      raw_input_contents_(from.raw_input_contents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_name().empty()) {
    model_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_name(),
      GetArena());
  }
  model_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_version().empty()) {
    model_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_version(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelInferRequest)
}

void ModelInferRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelInferRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelInferRequest::~ModelInferRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelInferRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelInferRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelInferRequest::ArenaDtor(void* object) {
  ModelInferRequest* _this = reinterpret_cast< ModelInferRequest* >(object);
  (void)_this;
}
void ModelInferRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelInferRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelInferRequest& ModelInferRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelInferRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelInferRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelInferRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  inputs_.Clear();
  outputs_.Clear();
  raw_input_contents_.Clear();
  model_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string model_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferRequest.model_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_model_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferRequest.model_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .hercules.proto.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .hercules.proto.ModelInferRequest.InferInputTensor inputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .hercules.proto.ModelInferRequest.InferRequestedOutputTensor outputs = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated bytes raw_input_contents = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_raw_input_contents();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelInferRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelInferRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1;
  if (this->model_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // string model_version = 2;
  if (this->model_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_version().data(), static_cast<int>(this->_internal_model_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.model_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_version(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferRequest.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.ModelInferRequest.ParametersEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_parameters().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ModelInferRequest_ParametersEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it) {
        target = ModelInferRequest_ParametersEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .hercules.proto.ModelInferRequest.InferInputTensor inputs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_inputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_inputs(i), target, stream);
  }

  // repeated .hercules.proto.ModelInferRequest.InferRequestedOutputTensor outputs = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_outputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_outputs(i), target, stream);
  }

  // repeated bytes raw_input_contents = 7;
  for (int i = 0, n = this->_internal_raw_input_contents_size(); i < n; i++) {
    const auto& s = this->_internal_raw_input_contents(i);
    target = stream->WriteBytes(7, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelInferRequest)
  return target;
}

size_t ModelInferRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelInferRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferRequest_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .hercules.proto.ModelInferRequest.InferInputTensor inputs = 5;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .hercules.proto.ModelInferRequest.InferRequestedOutputTensor outputs = 6;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated bytes raw_input_contents = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(raw_input_contents_.size());
  for (int i = 0, n = raw_input_contents_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      raw_input_contents_.Get(i));
  }

  // string model_name = 1;
  if (this->model_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string model_version = 2;
  if (this->model_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_version());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelInferRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelInferRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelInferRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelInferRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelInferRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelInferRequest)
    MergeFrom(*source);
  }
}

void ModelInferRequest::MergeFrom(const ModelInferRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelInferRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  raw_input_contents_.MergeFrom(from.raw_input_contents_);
  if (from.model_name().size() > 0) {
    _internal_set_model_name(from._internal_model_name());
  }
  if (from.model_version().size() > 0) {
    _internal_set_model_version(from._internal_model_version());
  }
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void ModelInferRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelInferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelInferRequest::CopyFrom(const ModelInferRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelInferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferRequest::IsInitialized() const {
  return true;
}

void ModelInferRequest::InternalSwap(ModelInferRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parameters_.Swap(&other->parameters_);
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  raw_input_contents_.InternalSwap(&other->raw_input_contents_);
  model_name_.Swap(&other->model_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_version_.Swap(&other->model_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse() {}
ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::MergeFrom(const ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ModelInferResponse_InferOutputTensor::InitAsDefaultInstance() {
  ::hercules::proto::_ModelInferResponse_InferOutputTensor_default_instance_._instance.get_mutable()->contents_ = const_cast< ::hercules::proto::InferTensorContents*>(
      ::hercules::proto::InferTensorContents::internal_default_instance());
}
class ModelInferResponse_InferOutputTensor::_Internal {
 public:
  static const ::hercules::proto::InferTensorContents& contents(const ModelInferResponse_InferOutputTensor* msg);
};

const ::hercules::proto::InferTensorContents&
ModelInferResponse_InferOutputTensor::_Internal::contents(const ModelInferResponse_InferOutputTensor* msg) {
  return *msg->contents_;
}
ModelInferResponse_InferOutputTensor::ModelInferResponse_InferOutputTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  shape_(arena),
  parameters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelInferResponse.InferOutputTensor)
}
ModelInferResponse_InferOutputTensor::ModelInferResponse_InferOutputTensor(const ModelInferResponse_InferOutputTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  datatype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datatype().empty()) {
    datatype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datatype(),
      GetArena());
  }
  if (from._internal_has_contents()) {
    contents_ = new ::hercules::proto::InferTensorContents(*from.contents_);
  } else {
    contents_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelInferResponse.InferOutputTensor)
}

void ModelInferResponse_InferOutputTensor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelInferResponse_InferOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  datatype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contents_ = nullptr;
}

ModelInferResponse_InferOutputTensor::~ModelInferResponse_InferOutputTensor() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelInferResponse.InferOutputTensor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelInferResponse_InferOutputTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  datatype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contents_;
}

void ModelInferResponse_InferOutputTensor::ArenaDtor(void* object) {
  ModelInferResponse_InferOutputTensor* _this = reinterpret_cast< ModelInferResponse_InferOutputTensor* >(object);
  (void)_this;
}
void ModelInferResponse_InferOutputTensor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelInferResponse_InferOutputTensor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelInferResponse_InferOutputTensor& ModelInferResponse_InferOutputTensor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelInferResponse_InferOutputTensor_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelInferResponse_InferOutputTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  parameters_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  datatype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && contents_ != nullptr) {
    delete contents_;
  }
  contents_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferResponse_InferOutputTensor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferResponse.InferOutputTensor.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string datatype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_datatype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferResponse.InferOutputTensor.datatype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .hercules.proto.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // .hercules.proto.InferTensorContents contents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_contents(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelInferResponse_InferOutputTensor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferResponse.InferOutputTensor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string datatype = 2;
  if (this->datatype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datatype().data(), static_cast<int>(this->_internal_datatype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferResponse.InferOutputTensor.datatype");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_datatype(), target);
  }

  // repeated int64 shape = 3;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_shape(), byte_size, target);
    }
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.ModelInferResponse.InferOutputTensor.ParametersEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_parameters().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it) {
        target = ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .hercules.proto.InferTensorContents contents = 5;
  if (this->has_contents()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::contents(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelInferResponse.InferOutputTensor)
  return target;
}

size_t ModelInferResponse_InferOutputTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 shape = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string datatype = 2;
  if (this->datatype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datatype());
  }

  // .hercules.proto.InferTensorContents contents = 5;
  if (this->has_contents()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contents_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelInferResponse_InferOutputTensor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelInferResponse_InferOutputTensor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelInferResponse_InferOutputTensor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelInferResponse.InferOutputTensor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelInferResponse.InferOutputTensor)
    MergeFrom(*source);
  }
}

void ModelInferResponse_InferOutputTensor::MergeFrom(const ModelInferResponse_InferOutputTensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  parameters_.MergeFrom(from.parameters_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.datatype().size() > 0) {
    _internal_set_datatype(from._internal_datatype());
  }
  if (from.has_contents()) {
    _internal_mutable_contents()->::hercules::proto::InferTensorContents::MergeFrom(from._internal_contents());
  }
}

void ModelInferResponse_InferOutputTensor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelInferResponse_InferOutputTensor::CopyFrom(const ModelInferResponse_InferOutputTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelInferResponse.InferOutputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferResponse_InferOutputTensor::IsInitialized() const {
  return true;
}

void ModelInferResponse_InferOutputTensor::InternalSwap(ModelInferResponse_InferOutputTensor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  parameters_.Swap(&other->parameters_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  datatype_.Swap(&other->datatype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(contents_, other->contents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse_InferOutputTensor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ModelInferResponse_ParametersEntry_DoNotUse::ModelInferResponse_ParametersEntry_DoNotUse() {}
ModelInferResponse_ParametersEntry_DoNotUse::ModelInferResponse_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferResponse_ParametersEntry_DoNotUse::MergeFrom(const ModelInferResponse_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse_ParametersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ModelInferResponse_ParametersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ModelInferResponse::InitAsDefaultInstance() {
}
class ModelInferResponse::_Internal {
 public:
};

ModelInferResponse::ModelInferResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  parameters_(arena),
  outputs_(arena),
  raw_output_contents_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelInferResponse)
}
ModelInferResponse::ModelInferResponse(const ModelInferResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      outputs_(from.outputs_),
      raw_output_contents_(from.raw_output_contents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_name().empty()) {
    model_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_name(),
      GetArena());
  }
  model_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_version().empty()) {
    model_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_version(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelInferResponse)
}

void ModelInferResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelInferResponse::~ModelInferResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelInferResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelInferResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelInferResponse::ArenaDtor(void* object) {
  ModelInferResponse* _this = reinterpret_cast< ModelInferResponse* >(object);
  (void)_this;
}
void ModelInferResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelInferResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelInferResponse& ModelInferResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelInferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelInferResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  outputs_.Clear();
  raw_output_contents_.Clear();
  model_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string model_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferResponse.model_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_model_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferResponse.model_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelInferResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .hercules.proto.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .hercules.proto.ModelInferResponse.InferOutputTensor outputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated bytes raw_output_contents = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_raw_output_contents();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelInferResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelInferResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1;
  if (this->model_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferResponse.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // string model_version = 2;
  if (this->model_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_version().data(), static_cast<int>(this->_internal_model_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferResponse.model_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_version(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelInferResponse.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.ModelInferResponse.ParametersEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_parameters().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ModelInferResponse_ParametersEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it) {
        target = ModelInferResponse_ParametersEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .hercules.proto.ModelInferResponse.InferOutputTensor outputs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_outputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_outputs(i), target, stream);
  }

  // repeated bytes raw_output_contents = 6;
  for (int i = 0, n = this->_internal_raw_output_contents_size(); i < n; i++) {
    const auto& s = this->_internal_raw_output_contents(i);
    target = stream->WriteBytes(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelInferResponse)
  return target;
}

size_t ModelInferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelInferResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferResponse_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .hercules.proto.ModelInferResponse.InferOutputTensor outputs = 5;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated bytes raw_output_contents = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(raw_output_contents_.size());
  for (int i = 0, n = raw_output_contents_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      raw_output_contents_.Get(i));
  }

  // string model_name = 1;
  if (this->model_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string model_version = 2;
  if (this->model_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_version());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelInferResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelInferResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelInferResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelInferResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelInferResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelInferResponse)
    MergeFrom(*source);
  }
}

void ModelInferResponse::MergeFrom(const ModelInferResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelInferResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  outputs_.MergeFrom(from.outputs_);
  raw_output_contents_.MergeFrom(from.raw_output_contents_);
  if (from.model_name().size() > 0) {
    _internal_set_model_name(from._internal_model_name());
  }
  if (from.model_version().size() > 0) {
    _internal_set_model_version(from._internal_model_version());
  }
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void ModelInferResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelInferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelInferResponse::CopyFrom(const ModelInferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelInferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferResponse::IsInitialized() const {
  return true;
}

void ModelInferResponse::InternalSwap(ModelInferResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parameters_.Swap(&other->parameters_);
  outputs_.InternalSwap(&other->outputs_);
  raw_output_contents_.InternalSwap(&other->raw_output_contents_);
  model_name_.Swap(&other->model_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_version_.Swap(&other->model_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelStreamInferResponse::InitAsDefaultInstance() {
  ::hercules::proto::_ModelStreamInferResponse_default_instance_._instance.get_mutable()->infer_response_ = const_cast< ::hercules::proto::ModelInferResponse*>(
      ::hercules::proto::ModelInferResponse::internal_default_instance());
}
class ModelStreamInferResponse::_Internal {
 public:
  static const ::hercules::proto::ModelInferResponse& infer_response(const ModelStreamInferResponse* msg);
};

const ::hercules::proto::ModelInferResponse&
ModelStreamInferResponse::_Internal::infer_response(const ModelStreamInferResponse* msg) {
  return *msg->infer_response_;
}
ModelStreamInferResponse::ModelStreamInferResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelStreamInferResponse)
}
ModelStreamInferResponse::ModelStreamInferResponse(const ModelStreamInferResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_message().empty()) {
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_message(),
      GetArena());
  }
  if (from._internal_has_infer_response()) {
    infer_response_ = new ::hercules::proto::ModelInferResponse(*from.infer_response_);
  } else {
    infer_response_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelStreamInferResponse)
}

void ModelStreamInferResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelStreamInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  infer_response_ = nullptr;
}

ModelStreamInferResponse::~ModelStreamInferResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelStreamInferResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelStreamInferResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete infer_response_;
}

void ModelStreamInferResponse::ArenaDtor(void* object) {
  ModelStreamInferResponse* _this = reinterpret_cast< ModelStreamInferResponse* >(object);
  (void)_this;
}
void ModelStreamInferResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelStreamInferResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelStreamInferResponse& ModelStreamInferResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelStreamInferResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelStreamInferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelStreamInferResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && infer_response_ != nullptr) {
    delete infer_response_;
  }
  infer_response_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStreamInferResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string error_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelStreamInferResponse.error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.ModelInferResponse infer_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_infer_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelStreamInferResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelStreamInferResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelStreamInferResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error_message(), target);
  }

  // .hercules.proto.ModelInferResponse infer_response = 2;
  if (this->has_infer_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::infer_response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelStreamInferResponse)
  return target;
}

size_t ModelStreamInferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelStreamInferResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .hercules.proto.ModelInferResponse infer_response = 2;
  if (this->has_infer_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *infer_response_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelStreamInferResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelStreamInferResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelStreamInferResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelStreamInferResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelStreamInferResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelStreamInferResponse)
    MergeFrom(*source);
  }
}

void ModelStreamInferResponse::MergeFrom(const ModelStreamInferResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelStreamInferResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from.has_infer_response()) {
    _internal_mutable_infer_response()->::hercules::proto::ModelInferResponse::MergeFrom(from._internal_infer_response());
  }
}

void ModelStreamInferResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelStreamInferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelStreamInferResponse::CopyFrom(const ModelStreamInferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelStreamInferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStreamInferResponse::IsInitialized() const {
  return true;
}

void ModelStreamInferResponse::InternalSwap(ModelStreamInferResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_message_.Swap(&other->error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(infer_response_, other->infer_response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStreamInferResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelConfigRequest::InitAsDefaultInstance() {
}
class ModelConfigRequest::_Internal {
 public:
};

ModelConfigRequest::ModelConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelConfigRequest)
}
ModelConfigRequest::ModelConfigRequest(const ModelConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelConfigRequest)
}

void ModelConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelConfigRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelConfigRequest::~ModelConfigRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelConfigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelConfigRequest::ArenaDtor(void* object) {
  ModelConfigRequest* _this = reinterpret_cast< ModelConfigRequest* >(object);
  (void)_this;
}
void ModelConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelConfigRequest& ModelConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelConfigRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelConfigRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelConfigRequest.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelConfigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelConfigRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelConfigRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelConfigRequest)
  return target;
}

size_t ModelConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelConfigRequest)
    MergeFrom(*source);
  }
}

void ModelConfigRequest::MergeFrom(const ModelConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void ModelConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelConfigRequest::CopyFrom(const ModelConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigRequest::IsInitialized() const {
  return true;
}

void ModelConfigRequest::InternalSwap(ModelConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelConfigResponse::InitAsDefaultInstance() {
  ::hercules::proto::_ModelConfigResponse_default_instance_._instance.get_mutable()->config_ = const_cast< ::hercules::proto::ModelConfig*>(
      ::hercules::proto::ModelConfig::internal_default_instance());
}
class ModelConfigResponse::_Internal {
 public:
  static const ::hercules::proto::ModelConfig& config(const ModelConfigResponse* msg);
};

const ::hercules::proto::ModelConfig&
ModelConfigResponse::_Internal::config(const ModelConfigResponse* msg) {
  return *msg->config_;
}
void ModelConfigResponse::clear_config() {
  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
ModelConfigResponse::ModelConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelConfigResponse)
}
ModelConfigResponse::ModelConfigResponse(const ModelConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    config_ = new ::hercules::proto::ModelConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelConfigResponse)
}

void ModelConfigResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelConfigResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  config_ = nullptr;
}

ModelConfigResponse::~ModelConfigResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelConfigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete config_;
}

void ModelConfigResponse::ArenaDtor(void* object) {
  ModelConfigResponse* _this = reinterpret_cast< ModelConfigResponse* >(object);
  (void)_this;
}
void ModelConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelConfigResponse& ModelConfigResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelConfigResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .hercules.proto.ModelConfig config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelConfigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hercules.proto.ModelConfig config = 1;
  if (this->has_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelConfigResponse)
  return target;
}

size_t ModelConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelConfigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hercules.proto.ModelConfig config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelConfigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelConfigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelConfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelConfigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelConfigResponse)
    MergeFrom(*source);
  }
}

void ModelConfigResponse::MergeFrom(const ModelConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    _internal_mutable_config()->::hercules::proto::ModelConfig::MergeFrom(from._internal_config());
  }
}

void ModelConfigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelConfigResponse::CopyFrom(const ModelConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigResponse::IsInitialized() const {
  return true;
}

void ModelConfigResponse::InternalSwap(ModelConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(config_, other->config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelConfigResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelStatisticsRequest::InitAsDefaultInstance() {
}
class ModelStatisticsRequest::_Internal {
 public:
};

ModelStatisticsRequest::ModelStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelStatisticsRequest)
}
ModelStatisticsRequest::ModelStatisticsRequest(const ModelStatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelStatisticsRequest)
}

void ModelStatisticsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelStatisticsRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelStatisticsRequest::~ModelStatisticsRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelStatisticsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelStatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelStatisticsRequest::ArenaDtor(void* object) {
  ModelStatisticsRequest* _this = reinterpret_cast< ModelStatisticsRequest* >(object);
  (void)_this;
}
void ModelStatisticsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelStatisticsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelStatisticsRequest& ModelStatisticsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelStatisticsRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelStatisticsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStatisticsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelStatisticsRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelStatisticsRequest.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelStatisticsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelStatisticsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelStatisticsRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelStatisticsRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelStatisticsRequest)
  return target;
}

size_t ModelStatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelStatisticsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelStatisticsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelStatisticsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelStatisticsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelStatisticsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelStatisticsRequest)
    MergeFrom(*source);
  }
}

void ModelStatisticsRequest::MergeFrom(const ModelStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void ModelStatisticsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelStatisticsRequest::CopyFrom(const ModelStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStatisticsRequest::IsInitialized() const {
  return true;
}

void ModelStatisticsRequest::InternalSwap(ModelStatisticsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStatisticsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatisticDuration::InitAsDefaultInstance() {
}
class StatisticDuration::_Internal {
 public:
};

StatisticDuration::StatisticDuration(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.StatisticDuration)
}
StatisticDuration::StatisticDuration(const StatisticDuration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&ns_) -
    reinterpret_cast<char*>(&count_)) + sizeof(ns_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.StatisticDuration)
}

void StatisticDuration::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ns_) -
      reinterpret_cast<char*>(&count_)) + sizeof(ns_));
}

StatisticDuration::~StatisticDuration() {
  // @@protoc_insertion_point(destructor:hercules.proto.StatisticDuration)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatisticDuration::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StatisticDuration::ArenaDtor(void* object) {
  StatisticDuration* _this = reinterpret_cast< StatisticDuration* >(object);
  (void)_this;
}
void StatisticDuration::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatisticDuration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatisticDuration& StatisticDuration::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatisticDuration_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StatisticDuration::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.StatisticDuration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ns_) -
      reinterpret_cast<char*>(&count_)) + sizeof(ns_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatisticDuration::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ns = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatisticDuration::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.StatisticDuration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 count = 1;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_count(), target);
  }

  // uint64 ns = 2;
  if (this->ns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_ns(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.StatisticDuration)
  return target;
}

size_t StatisticDuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.StatisticDuration)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_count());
  }

  // uint64 ns = 2;
  if (this->ns() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_ns());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatisticDuration::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.StatisticDuration)
  GOOGLE_DCHECK_NE(&from, this);
  const StatisticDuration* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatisticDuration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.StatisticDuration)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.StatisticDuration)
    MergeFrom(*source);
  }
}

void StatisticDuration::MergeFrom(const StatisticDuration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.StatisticDuration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from.ns() != 0) {
    _internal_set_ns(from._internal_ns());
  }
}

void StatisticDuration::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.StatisticDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatisticDuration::CopyFrom(const StatisticDuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.StatisticDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticDuration::IsInitialized() const {
  return true;
}

void StatisticDuration::InternalSwap(StatisticDuration* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatisticDuration, ns_)
      + sizeof(StatisticDuration::ns_)
      - PROTOBUF_FIELD_OFFSET(StatisticDuration, count_)>(
          reinterpret_cast<char*>(&count_),
          reinterpret_cast<char*>(&other->count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StatisticDuration::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InferStatistics::InitAsDefaultInstance() {
  ::hercules::proto::_InferStatistics_default_instance_._instance.get_mutable()->success_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
  ::hercules::proto::_InferStatistics_default_instance_._instance.get_mutable()->fail_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
  ::hercules::proto::_InferStatistics_default_instance_._instance.get_mutable()->queue_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
  ::hercules::proto::_InferStatistics_default_instance_._instance.get_mutable()->compute_input_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
  ::hercules::proto::_InferStatistics_default_instance_._instance.get_mutable()->compute_infer_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
  ::hercules::proto::_InferStatistics_default_instance_._instance.get_mutable()->compute_output_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
  ::hercules::proto::_InferStatistics_default_instance_._instance.get_mutable()->cache_hit_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
  ::hercules::proto::_InferStatistics_default_instance_._instance.get_mutable()->cache_miss_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
}
class InferStatistics::_Internal {
 public:
  static const ::hercules::proto::StatisticDuration& success(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& fail(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& queue(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& compute_input(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& compute_infer(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& compute_output(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& cache_hit(const InferStatistics* msg);
  static const ::hercules::proto::StatisticDuration& cache_miss(const InferStatistics* msg);
};

const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::success(const InferStatistics* msg) {
  return *msg->success_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::fail(const InferStatistics* msg) {
  return *msg->fail_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::queue(const InferStatistics* msg) {
  return *msg->queue_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::compute_input(const InferStatistics* msg) {
  return *msg->compute_input_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::compute_infer(const InferStatistics* msg) {
  return *msg->compute_infer_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::compute_output(const InferStatistics* msg) {
  return *msg->compute_output_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::cache_hit(const InferStatistics* msg) {
  return *msg->cache_hit_;
}
const ::hercules::proto::StatisticDuration&
InferStatistics::_Internal::cache_miss(const InferStatistics* msg) {
  return *msg->cache_miss_;
}
InferStatistics::InferStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.InferStatistics)
}
InferStatistics::InferStatistics(const InferStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_success()) {
    success_ = new ::hercules::proto::StatisticDuration(*from.success_);
  } else {
    success_ = nullptr;
  }
  if (from._internal_has_fail()) {
    fail_ = new ::hercules::proto::StatisticDuration(*from.fail_);
  } else {
    fail_ = nullptr;
  }
  if (from._internal_has_queue()) {
    queue_ = new ::hercules::proto::StatisticDuration(*from.queue_);
  } else {
    queue_ = nullptr;
  }
  if (from._internal_has_compute_input()) {
    compute_input_ = new ::hercules::proto::StatisticDuration(*from.compute_input_);
  } else {
    compute_input_ = nullptr;
  }
  if (from._internal_has_compute_infer()) {
    compute_infer_ = new ::hercules::proto::StatisticDuration(*from.compute_infer_);
  } else {
    compute_infer_ = nullptr;
  }
  if (from._internal_has_compute_output()) {
    compute_output_ = new ::hercules::proto::StatisticDuration(*from.compute_output_);
  } else {
    compute_output_ = nullptr;
  }
  if (from._internal_has_cache_hit()) {
    cache_hit_ = new ::hercules::proto::StatisticDuration(*from.cache_hit_);
  } else {
    cache_hit_ = nullptr;
  }
  if (from._internal_has_cache_miss()) {
    cache_miss_ = new ::hercules::proto::StatisticDuration(*from.cache_miss_);
  } else {
    cache_miss_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.InferStatistics)
}

void InferStatistics::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InferStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cache_miss_) -
      reinterpret_cast<char*>(&success_)) + sizeof(cache_miss_));
}

InferStatistics::~InferStatistics() {
  // @@protoc_insertion_point(destructor:hercules.proto.InferStatistics)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InferStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete success_;
  if (this != internal_default_instance()) delete fail_;
  if (this != internal_default_instance()) delete queue_;
  if (this != internal_default_instance()) delete compute_input_;
  if (this != internal_default_instance()) delete compute_infer_;
  if (this != internal_default_instance()) delete compute_output_;
  if (this != internal_default_instance()) delete cache_hit_;
  if (this != internal_default_instance()) delete cache_miss_;
}

void InferStatistics::ArenaDtor(void* object) {
  InferStatistics* _this = reinterpret_cast< InferStatistics* >(object);
  (void)_this;
}
void InferStatistics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InferStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InferStatistics& InferStatistics::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InferStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void InferStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.InferStatistics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  if (GetArena() == nullptr && fail_ != nullptr) {
    delete fail_;
  }
  fail_ = nullptr;
  if (GetArena() == nullptr && queue_ != nullptr) {
    delete queue_;
  }
  queue_ = nullptr;
  if (GetArena() == nullptr && compute_input_ != nullptr) {
    delete compute_input_;
  }
  compute_input_ = nullptr;
  if (GetArena() == nullptr && compute_infer_ != nullptr) {
    delete compute_infer_;
  }
  compute_infer_ = nullptr;
  if (GetArena() == nullptr && compute_output_ != nullptr) {
    delete compute_output_;
  }
  compute_output_ = nullptr;
  if (GetArena() == nullptr && cache_hit_ != nullptr) {
    delete cache_hit_;
  }
  cache_hit_ = nullptr;
  if (GetArena() == nullptr && cache_miss_ != nullptr) {
    delete cache_miss_;
  }
  cache_miss_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferStatistics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .hercules.proto.StatisticDuration success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration fail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fail(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration queue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_queue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_input = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_input(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_infer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_infer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_output = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_output(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration cache_hit = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_cache_hit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration cache_miss = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_cache_miss(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InferStatistics::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.InferStatistics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hercules.proto.StatisticDuration success = 1;
  if (this->has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  // .hercules.proto.StatisticDuration fail = 2;
  if (this->has_fail()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::fail(this), target, stream);
  }

  // .hercules.proto.StatisticDuration queue = 3;
  if (this->has_queue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::queue(this), target, stream);
  }

  // .hercules.proto.StatisticDuration compute_input = 4;
  if (this->has_compute_input()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::compute_input(this), target, stream);
  }

  // .hercules.proto.StatisticDuration compute_infer = 5;
  if (this->has_compute_infer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::compute_infer(this), target, stream);
  }

  // .hercules.proto.StatisticDuration compute_output = 6;
  if (this->has_compute_output()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::compute_output(this), target, stream);
  }

  // .hercules.proto.StatisticDuration cache_hit = 7;
  if (this->has_cache_hit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::cache_hit(this), target, stream);
  }

  // .hercules.proto.StatisticDuration cache_miss = 8;
  if (this->has_cache_miss()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::cache_miss(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.InferStatistics)
  return target;
}

size_t InferStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.InferStatistics)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hercules.proto.StatisticDuration success = 1;
  if (this->has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  // .hercules.proto.StatisticDuration fail = 2;
  if (this->has_fail()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fail_);
  }

  // .hercules.proto.StatisticDuration queue = 3;
  if (this->has_queue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *queue_);
  }

  // .hercules.proto.StatisticDuration compute_input = 4;
  if (this->has_compute_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_input_);
  }

  // .hercules.proto.StatisticDuration compute_infer = 5;
  if (this->has_compute_infer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_infer_);
  }

  // .hercules.proto.StatisticDuration compute_output = 6;
  if (this->has_compute_output()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_output_);
  }

  // .hercules.proto.StatisticDuration cache_hit = 7;
  if (this->has_cache_hit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cache_hit_);
  }

  // .hercules.proto.StatisticDuration cache_miss = 8;
  if (this->has_cache_miss()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cache_miss_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferStatistics::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.InferStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const InferStatistics* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InferStatistics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.InferStatistics)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.InferStatistics)
    MergeFrom(*source);
  }
}

void InferStatistics::MergeFrom(const InferStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.InferStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    _internal_mutable_success()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_success());
  }
  if (from.has_fail()) {
    _internal_mutable_fail()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_fail());
  }
  if (from.has_queue()) {
    _internal_mutable_queue()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_queue());
  }
  if (from.has_compute_input()) {
    _internal_mutable_compute_input()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_input());
  }
  if (from.has_compute_infer()) {
    _internal_mutable_compute_infer()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_infer());
  }
  if (from.has_compute_output()) {
    _internal_mutable_compute_output()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_output());
  }
  if (from.has_cache_hit()) {
    _internal_mutable_cache_hit()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_cache_hit());
  }
  if (from.has_cache_miss()) {
    _internal_mutable_cache_miss()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_cache_miss());
  }
}

void InferStatistics::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.InferStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferStatistics::CopyFrom(const InferStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.InferStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferStatistics::IsInitialized() const {
  return true;
}

void InferStatistics::InternalSwap(InferStatistics* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InferStatistics, cache_miss_)
      + sizeof(InferStatistics::cache_miss_)
      - PROTOBUF_FIELD_OFFSET(InferStatistics, success_)>(
          reinterpret_cast<char*>(&success_),
          reinterpret_cast<char*>(&other->success_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InferStatistics::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InferBatchStatistics::InitAsDefaultInstance() {
  ::hercules::proto::_InferBatchStatistics_default_instance_._instance.get_mutable()->compute_input_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
  ::hercules::proto::_InferBatchStatistics_default_instance_._instance.get_mutable()->compute_infer_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
  ::hercules::proto::_InferBatchStatistics_default_instance_._instance.get_mutable()->compute_output_ = const_cast< ::hercules::proto::StatisticDuration*>(
      ::hercules::proto::StatisticDuration::internal_default_instance());
}
class InferBatchStatistics::_Internal {
 public:
  static const ::hercules::proto::StatisticDuration& compute_input(const InferBatchStatistics* msg);
  static const ::hercules::proto::StatisticDuration& compute_infer(const InferBatchStatistics* msg);
  static const ::hercules::proto::StatisticDuration& compute_output(const InferBatchStatistics* msg);
};

const ::hercules::proto::StatisticDuration&
InferBatchStatistics::_Internal::compute_input(const InferBatchStatistics* msg) {
  return *msg->compute_input_;
}
const ::hercules::proto::StatisticDuration&
InferBatchStatistics::_Internal::compute_infer(const InferBatchStatistics* msg) {
  return *msg->compute_infer_;
}
const ::hercules::proto::StatisticDuration&
InferBatchStatistics::_Internal::compute_output(const InferBatchStatistics* msg) {
  return *msg->compute_output_;
}
InferBatchStatistics::InferBatchStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.InferBatchStatistics)
}
InferBatchStatistics::InferBatchStatistics(const InferBatchStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_compute_input()) {
    compute_input_ = new ::hercules::proto::StatisticDuration(*from.compute_input_);
  } else {
    compute_input_ = nullptr;
  }
  if (from._internal_has_compute_infer()) {
    compute_infer_ = new ::hercules::proto::StatisticDuration(*from.compute_infer_);
  } else {
    compute_infer_ = nullptr;
  }
  if (from._internal_has_compute_output()) {
    compute_output_ = new ::hercules::proto::StatisticDuration(*from.compute_output_);
  } else {
    compute_output_ = nullptr;
  }
  batch_size_ = from.batch_size_;
  // @@protoc_insertion_point(copy_constructor:hercules.proto.InferBatchStatistics)
}

void InferBatchStatistics::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InferBatchStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  ::memset(&compute_input_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batch_size_) -
      reinterpret_cast<char*>(&compute_input_)) + sizeof(batch_size_));
}

InferBatchStatistics::~InferBatchStatistics() {
  // @@protoc_insertion_point(destructor:hercules.proto.InferBatchStatistics)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InferBatchStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete compute_input_;
  if (this != internal_default_instance()) delete compute_infer_;
  if (this != internal_default_instance()) delete compute_output_;
}

void InferBatchStatistics::ArenaDtor(void* object) {
  InferBatchStatistics* _this = reinterpret_cast< InferBatchStatistics* >(object);
  (void)_this;
}
void InferBatchStatistics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InferBatchStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InferBatchStatistics& InferBatchStatistics::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InferBatchStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void InferBatchStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.InferBatchStatistics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && compute_input_ != nullptr) {
    delete compute_input_;
  }
  compute_input_ = nullptr;
  if (GetArena() == nullptr && compute_infer_ != nullptr) {
    delete compute_infer_;
  }
  compute_infer_ = nullptr;
  if (GetArena() == nullptr && compute_output_ != nullptr) {
    delete compute_output_;
  }
  compute_output_ = nullptr;
  batch_size_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferBatchStatistics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 batch_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          batch_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_input = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_input(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_infer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_infer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.StatisticDuration compute_output = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_output(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InferBatchStatistics::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.InferBatchStatistics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 batch_size = 1;
  if (this->batch_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_batch_size(), target);
  }

  // .hercules.proto.StatisticDuration compute_input = 2;
  if (this->has_compute_input()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::compute_input(this), target, stream);
  }

  // .hercules.proto.StatisticDuration compute_infer = 3;
  if (this->has_compute_infer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::compute_infer(this), target, stream);
  }

  // .hercules.proto.StatisticDuration compute_output = 4;
  if (this->has_compute_output()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::compute_output(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.InferBatchStatistics)
  return target;
}

size_t InferBatchStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.InferBatchStatistics)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hercules.proto.StatisticDuration compute_input = 2;
  if (this->has_compute_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_input_);
  }

  // .hercules.proto.StatisticDuration compute_infer = 3;
  if (this->has_compute_infer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_infer_);
  }

  // .hercules.proto.StatisticDuration compute_output = 4;
  if (this->has_compute_output()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compute_output_);
  }

  // uint64 batch_size = 1;
  if (this->batch_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_batch_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferBatchStatistics::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.InferBatchStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const InferBatchStatistics* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InferBatchStatistics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.InferBatchStatistics)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.InferBatchStatistics)
    MergeFrom(*source);
  }
}

void InferBatchStatistics::MergeFrom(const InferBatchStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.InferBatchStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_compute_input()) {
    _internal_mutable_compute_input()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_input());
  }
  if (from.has_compute_infer()) {
    _internal_mutable_compute_infer()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_infer());
  }
  if (from.has_compute_output()) {
    _internal_mutable_compute_output()->::hercules::proto::StatisticDuration::MergeFrom(from._internal_compute_output());
  }
  if (from.batch_size() != 0) {
    _internal_set_batch_size(from._internal_batch_size());
  }
}

void InferBatchStatistics::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.InferBatchStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferBatchStatistics::CopyFrom(const InferBatchStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.InferBatchStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferBatchStatistics::IsInitialized() const {
  return true;
}

void InferBatchStatistics::InternalSwap(InferBatchStatistics* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InferBatchStatistics, batch_size_)
      + sizeof(InferBatchStatistics::batch_size_)
      - PROTOBUF_FIELD_OFFSET(InferBatchStatistics, compute_input_)>(
          reinterpret_cast<char*>(&compute_input_),
          reinterpret_cast<char*>(&other->compute_input_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InferBatchStatistics::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelStatistics::InitAsDefaultInstance() {
  ::hercules::proto::_ModelStatistics_default_instance_._instance.get_mutable()->inference_stats_ = const_cast< ::hercules::proto::InferStatistics*>(
      ::hercules::proto::InferStatistics::internal_default_instance());
}
class ModelStatistics::_Internal {
 public:
  static const ::hercules::proto::InferStatistics& inference_stats(const ModelStatistics* msg);
};

const ::hercules::proto::InferStatistics&
ModelStatistics::_Internal::inference_stats(const ModelStatistics* msg) {
  return *msg->inference_stats_;
}
ModelStatistics::ModelStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  batch_stats_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelStatistics)
}
ModelStatistics::ModelStatistics(const ModelStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      batch_stats_(from.batch_stats_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  if (from._internal_has_inference_stats()) {
    inference_stats_ = new ::hercules::proto::InferStatistics(*from.inference_stats_);
  } else {
    inference_stats_ = nullptr;
  }
  ::memcpy(&last_inference_, &from.last_inference_,
    static_cast<size_t>(reinterpret_cast<char*>(&execution_count_) -
    reinterpret_cast<char*>(&last_inference_)) + sizeof(execution_count_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelStatistics)
}

void ModelStatistics::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&inference_stats_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&execution_count_) -
      reinterpret_cast<char*>(&inference_stats_)) + sizeof(execution_count_));
}

ModelStatistics::~ModelStatistics() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelStatistics)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inference_stats_;
}

void ModelStatistics::ArenaDtor(void* object) {
  ModelStatistics* _this = reinterpret_cast< ModelStatistics* >(object);
  (void)_this;
}
void ModelStatistics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelStatistics& ModelStatistics::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelStatistics_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelStatistics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  batch_stats_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && inference_stats_ != nullptr) {
    delete inference_stats_;
  }
  inference_stats_ = nullptr;
  ::memset(&last_inference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&execution_count_) -
      reinterpret_cast<char*>(&last_inference_)) + sizeof(execution_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStatistics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelStatistics.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelStatistics.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 last_inference = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          last_inference_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 inference_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          inference_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 execution_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          execution_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hercules.proto.InferStatistics inference_stats = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_inference_stats(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .hercules.proto.InferBatchStatistics batch_stats = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_batch_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelStatistics::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelStatistics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelStatistics.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelStatistics.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // uint64 last_inference = 3;
  if (this->last_inference() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_last_inference(), target);
  }

  // uint64 inference_count = 4;
  if (this->inference_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_inference_count(), target);
  }

  // uint64 execution_count = 5;
  if (this->execution_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_execution_count(), target);
  }

  // .hercules.proto.InferStatistics inference_stats = 6;
  if (this->has_inference_stats()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::inference_stats(this), target, stream);
  }

  // repeated .hercules.proto.InferBatchStatistics batch_stats = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_batch_stats_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_batch_stats(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelStatistics)
  return target;
}

size_t ModelStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelStatistics)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hercules.proto.InferBatchStatistics batch_stats = 7;
  total_size += 1UL * this->_internal_batch_stats_size();
  for (const auto& msg : this->batch_stats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // .hercules.proto.InferStatistics inference_stats = 6;
  if (this->has_inference_stats()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *inference_stats_);
  }

  // uint64 last_inference = 3;
  if (this->last_inference() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_last_inference());
  }

  // uint64 inference_count = 4;
  if (this->inference_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_inference_count());
  }

  // uint64 execution_count = 5;
  if (this->execution_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_execution_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelStatistics::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelStatistics* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelStatistics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelStatistics)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelStatistics)
    MergeFrom(*source);
  }
}

void ModelStatistics::MergeFrom(const ModelStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  batch_stats_.MergeFrom(from.batch_stats_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.has_inference_stats()) {
    _internal_mutable_inference_stats()->::hercules::proto::InferStatistics::MergeFrom(from._internal_inference_stats());
  }
  if (from.last_inference() != 0) {
    _internal_set_last_inference(from._internal_last_inference());
  }
  if (from.inference_count() != 0) {
    _internal_set_inference_count(from._internal_inference_count());
  }
  if (from.execution_count() != 0) {
    _internal_set_execution_count(from._internal_execution_count());
  }
}

void ModelStatistics::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelStatistics::CopyFrom(const ModelStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStatistics::IsInitialized() const {
  return true;
}

void ModelStatistics::InternalSwap(ModelStatistics* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  batch_stats_.InternalSwap(&other->batch_stats_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelStatistics, execution_count_)
      + sizeof(ModelStatistics::execution_count_)
      - PROTOBUF_FIELD_OFFSET(ModelStatistics, inference_stats_)>(
          reinterpret_cast<char*>(&inference_stats_),
          reinterpret_cast<char*>(&other->inference_stats_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStatistics::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelStatisticsResponse::InitAsDefaultInstance() {
}
class ModelStatisticsResponse::_Internal {
 public:
};

ModelStatisticsResponse::ModelStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  model_stats_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelStatisticsResponse)
}
ModelStatisticsResponse::ModelStatisticsResponse(const ModelStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      model_stats_(from.model_stats_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelStatisticsResponse)
}

void ModelStatisticsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelStatisticsResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
}

ModelStatisticsResponse::~ModelStatisticsResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelStatisticsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ModelStatisticsResponse::ArenaDtor(void* object) {
  ModelStatisticsResponse* _this = reinterpret_cast< ModelStatisticsResponse* >(object);
  (void)_this;
}
void ModelStatisticsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelStatisticsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelStatisticsResponse& ModelStatisticsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelStatisticsResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelStatisticsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_stats_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStatisticsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .hercules.proto.ModelStatistics model_stats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_model_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelStatisticsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelStatisticsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hercules.proto.ModelStatistics model_stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_model_stats_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_model_stats(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelStatisticsResponse)
  return target;
}

size_t ModelStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelStatisticsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hercules.proto.ModelStatistics model_stats = 1;
  total_size += 1UL * this->_internal_model_stats_size();
  for (const auto& msg : this->model_stats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelStatisticsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelStatisticsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelStatisticsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelStatisticsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelStatisticsResponse)
    MergeFrom(*source);
  }
}

void ModelStatisticsResponse::MergeFrom(const ModelStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  model_stats_.MergeFrom(from.model_stats_);
}

void ModelStatisticsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelStatisticsResponse::CopyFrom(const ModelStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStatisticsResponse::IsInitialized() const {
  return true;
}

void ModelStatisticsResponse::InternalSwap(ModelStatisticsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  model_stats_.InternalSwap(&other->model_stats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStatisticsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelRepositoryParameter::InitAsDefaultInstance() {
  ::hercules::proto::_ModelRepositoryParameter_default_instance_.bool_param_ = false;
  ::hercules::proto::_ModelRepositoryParameter_default_instance_.int64_param_ = PROTOBUF_LONGLONG(0);
  ::hercules::proto::_ModelRepositoryParameter_default_instance_.string_param_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::hercules::proto::_ModelRepositoryParameter_default_instance_.bytes_param_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class ModelRepositoryParameter::_Internal {
 public:
};

ModelRepositoryParameter::ModelRepositoryParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.ModelRepositoryParameter)
}
ModelRepositoryParameter::ModelRepositoryParameter(const ModelRepositoryParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_parameter_choice();
  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _internal_set_string_param(from._internal_string_param());
      break;
    }
    case kBytesParam: {
      _internal_set_bytes_param(from._internal_bytes_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.ModelRepositoryParameter)
}

void ModelRepositoryParameter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelRepositoryParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  clear_has_parameter_choice();
}

ModelRepositoryParameter::~ModelRepositoryParameter() {
  // @@protoc_insertion_point(destructor:hercules.proto.ModelRepositoryParameter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelRepositoryParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_parameter_choice()) {
    clear_parameter_choice();
  }
}

void ModelRepositoryParameter::ArenaDtor(void* object) {
  ModelRepositoryParameter* _this = reinterpret_cast< ModelRepositoryParameter* >(object);
  (void)_this;
}
void ModelRepositoryParameter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelRepositoryParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelRepositoryParameter& ModelRepositoryParameter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelRepositoryParameter_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModelRepositoryParameter::clear_parameter_choice() {
// @@protoc_insertion_point(one_of_clear_start:hercules.proto.ModelRepositoryParameter)
  switch (parameter_choice_case()) {
    case kBoolParam: {
      // No need to clear
      break;
    }
    case kInt64Param: {
      // No need to clear
      break;
    }
    case kStringParam: {
      parameter_choice_.string_param_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kBytesParam: {
      parameter_choice_.bytes_param_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETER_CHOICE_NOT_SET;
}


void ModelRepositoryParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.ModelRepositoryParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameter_choice();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelRepositoryParameter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool bool_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _internal_set_bool_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 int64_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_int64_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string string_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_string_param();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.ModelRepositoryParameter.string_param"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes bytes_param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_bytes_param();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelRepositoryParameter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.ModelRepositoryParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_param = 1;
  if (_internal_has_bool_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_bool_param(), target);
  }

  // int64 int64_param = 2;
  if (_internal_has_int64_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_int64_param(), target);
  }

  // string string_param = 3;
  if (_internal_has_string_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_param().data(), static_cast<int>(this->_internal_string_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.ModelRepositoryParameter.string_param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_string_param(), target);
  }

  // bytes bytes_param = 4;
  if (_internal_has_bytes_param()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_bytes_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.ModelRepositoryParameter)
  return target;
}

size_t ModelRepositoryParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.ModelRepositoryParameter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (parameter_choice_case()) {
    // bool bool_param = 1;
    case kBoolParam: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_param = 2;
    case kInt64Param: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_int64_param());
      break;
    }
    // string string_param = 3;
    case kStringParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_param());
      break;
    }
    // bytes bytes_param = 4;
    case kBytesParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelRepositoryParameter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.ModelRepositoryParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelRepositoryParameter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelRepositoryParameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.ModelRepositoryParameter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.ModelRepositoryParameter)
    MergeFrom(*source);
  }
}

void ModelRepositoryParameter::MergeFrom(const ModelRepositoryParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.ModelRepositoryParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _internal_set_string_param(from._internal_string_param());
      break;
    }
    case kBytesParam: {
      _internal_set_bytes_param(from._internal_bytes_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
}

void ModelRepositoryParameter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.ModelRepositoryParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelRepositoryParameter::CopyFrom(const ModelRepositoryParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.ModelRepositoryParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelRepositoryParameter::IsInitialized() const {
  return true;
}

void ModelRepositoryParameter::InternalSwap(ModelRepositoryParameter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(parameter_choice_, other->parameter_choice_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelRepositoryParameter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RepositoryIndexRequest::InitAsDefaultInstance() {
}
class RepositoryIndexRequest::_Internal {
 public:
};

RepositoryIndexRequest::RepositoryIndexRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryIndexRequest)
}
RepositoryIndexRequest::RepositoryIndexRequest(const RepositoryIndexRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  repository_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_repository_name().empty()) {
    repository_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_repository_name(),
      GetArena());
  }
  ready_ = from.ready_;
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryIndexRequest)
}

void RepositoryIndexRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RepositoryIndexRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  repository_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ready_ = false;
}

RepositoryIndexRequest::~RepositoryIndexRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryIndexRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RepositoryIndexRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  repository_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RepositoryIndexRequest::ArenaDtor(void* object) {
  RepositoryIndexRequest* _this = reinterpret_cast< RepositoryIndexRequest* >(object);
  (void)_this;
}
void RepositoryIndexRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepositoryIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepositoryIndexRequest& RepositoryIndexRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RepositoryIndexRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RepositoryIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryIndexRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repository_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ready_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryIndexRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string repository_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_repository_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.RepositoryIndexRequest.repository_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool ready = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RepositoryIndexRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryIndexRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_name = 1;
  if (this->repository_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_repository_name().data(), static_cast<int>(this->_internal_repository_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryIndexRequest.repository_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_repository_name(), target);
  }

  // bool ready = 2;
  if (this->ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_ready(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryIndexRequest)
  return target;
}

size_t RepositoryIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryIndexRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string repository_name = 1;
  if (this->repository_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_repository_name());
  }

  // bool ready = 2;
  if (this->ready() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepositoryIndexRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.RepositoryIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RepositoryIndexRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RepositoryIndexRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.RepositoryIndexRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.RepositoryIndexRequest)
    MergeFrom(*source);
  }
}

void RepositoryIndexRequest::MergeFrom(const RepositoryIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.repository_name().size() > 0) {
    _internal_set_repository_name(from._internal_repository_name());
  }
  if (from.ready() != 0) {
    _internal_set_ready(from._internal_ready());
  }
}

void RepositoryIndexRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.RepositoryIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepositoryIndexRequest::CopyFrom(const RepositoryIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryIndexRequest::IsInitialized() const {
  return true;
}

void RepositoryIndexRequest::InternalSwap(RepositoryIndexRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  repository_name_.Swap(&other->repository_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(ready_, other->ready_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryIndexRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RepositoryIndexResponse_ModelIndex::InitAsDefaultInstance() {
}
class RepositoryIndexResponse_ModelIndex::_Internal {
 public:
};

RepositoryIndexResponse_ModelIndex::RepositoryIndexResponse_ModelIndex(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryIndexResponse.ModelIndex)
}
RepositoryIndexResponse_ModelIndex::RepositoryIndexResponse_ModelIndex(const RepositoryIndexResponse_ModelIndex& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_state().empty()) {
    state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_state(),
      GetArena());
  }
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reason().empty()) {
    reason_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reason(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryIndexResponse.ModelIndex)
}

void RepositoryIndexResponse_ModelIndex::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RepositoryIndexResponse_ModelIndex_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RepositoryIndexResponse_ModelIndex::~RepositoryIndexResponse_ModelIndex() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryIndexResponse.ModelIndex)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RepositoryIndexResponse_ModelIndex::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RepositoryIndexResponse_ModelIndex::ArenaDtor(void* object) {
  RepositoryIndexResponse_ModelIndex* _this = reinterpret_cast< RepositoryIndexResponse_ModelIndex* >(object);
  (void)_this;
}
void RepositoryIndexResponse_ModelIndex::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepositoryIndexResponse_ModelIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepositoryIndexResponse_ModelIndex& RepositoryIndexResponse_ModelIndex::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RepositoryIndexResponse_ModelIndex_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RepositoryIndexResponse_ModelIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  state_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reason_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryIndexResponse_ModelIndex::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.RepositoryIndexResponse.ModelIndex.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.RepositoryIndexResponse.ModelIndex.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.RepositoryIndexResponse.ModelIndex.state"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.RepositoryIndexResponse.ModelIndex.reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RepositoryIndexResponse_ModelIndex::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryIndexResponse.ModelIndex.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryIndexResponse.ModelIndex.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // string state = 3;
  if (this->state().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryIndexResponse.ModelIndex.state");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_state(), target);
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryIndexResponse.ModelIndex.reason");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryIndexResponse.ModelIndex)
  return target;
}

size_t RepositoryIndexResponse_ModelIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string state = 3;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepositoryIndexResponse_ModelIndex::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const RepositoryIndexResponse_ModelIndex* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RepositoryIndexResponse_ModelIndex>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.RepositoryIndexResponse.ModelIndex)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.RepositoryIndexResponse.ModelIndex)
    MergeFrom(*source);
  }
}

void RepositoryIndexResponse_ModelIndex::MergeFrom(const RepositoryIndexResponse_ModelIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.state().size() > 0) {
    _internal_set_state(from._internal_state());
  }
  if (from.reason().size() > 0) {
    _internal_set_reason(from._internal_reason());
  }
}

void RepositoryIndexResponse_ModelIndex::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepositoryIndexResponse_ModelIndex::CopyFrom(const RepositoryIndexResponse_ModelIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryIndexResponse.ModelIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryIndexResponse_ModelIndex::IsInitialized() const {
  return true;
}

void RepositoryIndexResponse_ModelIndex::InternalSwap(RepositoryIndexResponse_ModelIndex* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  state_.Swap(&other->state_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reason_.Swap(&other->reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryIndexResponse_ModelIndex::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RepositoryIndexResponse::InitAsDefaultInstance() {
}
class RepositoryIndexResponse::_Internal {
 public:
};

RepositoryIndexResponse::RepositoryIndexResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  models_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryIndexResponse)
}
RepositoryIndexResponse::RepositoryIndexResponse(const RepositoryIndexResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      models_(from.models_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryIndexResponse)
}

void RepositoryIndexResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RepositoryIndexResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
}

RepositoryIndexResponse::~RepositoryIndexResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryIndexResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RepositoryIndexResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RepositoryIndexResponse::ArenaDtor(void* object) {
  RepositoryIndexResponse* _this = reinterpret_cast< RepositoryIndexResponse* >(object);
  (void)_this;
}
void RepositoryIndexResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepositoryIndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepositoryIndexResponse& RepositoryIndexResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RepositoryIndexResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RepositoryIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryIndexResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  models_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryIndexResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .hercules.proto.RepositoryIndexResponse.ModelIndex models = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RepositoryIndexResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryIndexResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hercules.proto.RepositoryIndexResponse.ModelIndex models = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_models_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_models(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryIndexResponse)
  return target;
}

size_t RepositoryIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryIndexResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hercules.proto.RepositoryIndexResponse.ModelIndex models = 1;
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepositoryIndexResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.RepositoryIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RepositoryIndexResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RepositoryIndexResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.RepositoryIndexResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.RepositoryIndexResponse)
    MergeFrom(*source);
  }
}

void RepositoryIndexResponse::MergeFrom(const RepositoryIndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  models_.MergeFrom(from.models_);
}

void RepositoryIndexResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.RepositoryIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepositoryIndexResponse::CopyFrom(const RepositoryIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryIndexResponse::IsInitialized() const {
  return true;
}

void RepositoryIndexResponse::InternalSwap(RepositoryIndexResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  models_.InternalSwap(&other->models_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryIndexResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

RepositoryModelLoadRequest_ParametersEntry_DoNotUse::RepositoryModelLoadRequest_ParametersEntry_DoNotUse() {}
RepositoryModelLoadRequest_ParametersEntry_DoNotUse::RepositoryModelLoadRequest_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RepositoryModelLoadRequest_ParametersEntry_DoNotUse::MergeFrom(const RepositoryModelLoadRequest_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelLoadRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void RepositoryModelLoadRequest_ParametersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void RepositoryModelLoadRequest::InitAsDefaultInstance() {
}
class RepositoryModelLoadRequest::_Internal {
 public:
};

RepositoryModelLoadRequest::RepositoryModelLoadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  parameters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryModelLoadRequest)
}
RepositoryModelLoadRequest::RepositoryModelLoadRequest(const RepositoryModelLoadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  repository_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_repository_name().empty()) {
    repository_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_repository_name(),
      GetArena());
  }
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_name().empty()) {
    model_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryModelLoadRequest)
}

void RepositoryModelLoadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RepositoryModelLoadRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  repository_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RepositoryModelLoadRequest::~RepositoryModelLoadRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryModelLoadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RepositoryModelLoadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  repository_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RepositoryModelLoadRequest::ArenaDtor(void* object) {
  RepositoryModelLoadRequest* _this = reinterpret_cast< RepositoryModelLoadRequest* >(object);
  (void)_this;
}
void RepositoryModelLoadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepositoryModelLoadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepositoryModelLoadRequest& RepositoryModelLoadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RepositoryModelLoadRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RepositoryModelLoadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryModelLoadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  repository_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryModelLoadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string repository_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_repository_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.RepositoryModelLoadRequest.repository_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.RepositoryModelLoadRequest.model_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RepositoryModelLoadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryModelLoadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_name = 1;
  if (this->repository_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_repository_name().data(), static_cast<int>(this->_internal_repository_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryModelLoadRequest.repository_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_repository_name(), target);
  }

  // string model_name = 2;
  if (this->model_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryModelLoadRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
  if (!this->_internal_parameters().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.RepositoryModelLoadRequest.ParametersEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_parameters().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = RepositoryModelLoadRequest_ParametersEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it) {
        target = RepositoryModelLoadRequest_ParametersEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryModelLoadRequest)
  return target;
}

size_t RepositoryModelLoadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryModelLoadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += RepositoryModelLoadRequest_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string repository_name = 1;
  if (this->repository_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_repository_name());
  }

  // string model_name = 2;
  if (this->model_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepositoryModelLoadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.RepositoryModelLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RepositoryModelLoadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RepositoryModelLoadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.RepositoryModelLoadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.RepositoryModelLoadRequest)
    MergeFrom(*source);
  }
}

void RepositoryModelLoadRequest::MergeFrom(const RepositoryModelLoadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryModelLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (from.repository_name().size() > 0) {
    _internal_set_repository_name(from._internal_repository_name());
  }
  if (from.model_name().size() > 0) {
    _internal_set_model_name(from._internal_model_name());
  }
}

void RepositoryModelLoadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.RepositoryModelLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepositoryModelLoadRequest::CopyFrom(const RepositoryModelLoadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryModelLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryModelLoadRequest::IsInitialized() const {
  return true;
}

void RepositoryModelLoadRequest::InternalSwap(RepositoryModelLoadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parameters_.Swap(&other->parameters_);
  repository_name_.Swap(&other->repository_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_name_.Swap(&other->model_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelLoadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RepositoryModelLoadResponse::InitAsDefaultInstance() {
}
class RepositoryModelLoadResponse::_Internal {
 public:
};

RepositoryModelLoadResponse::RepositoryModelLoadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryModelLoadResponse)
}
RepositoryModelLoadResponse::RepositoryModelLoadResponse(const RepositoryModelLoadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryModelLoadResponse)
}

void RepositoryModelLoadResponse::SharedCtor() {
}

RepositoryModelLoadResponse::~RepositoryModelLoadResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryModelLoadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RepositoryModelLoadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RepositoryModelLoadResponse::ArenaDtor(void* object) {
  RepositoryModelLoadResponse* _this = reinterpret_cast< RepositoryModelLoadResponse* >(object);
  (void)_this;
}
void RepositoryModelLoadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepositoryModelLoadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepositoryModelLoadResponse& RepositoryModelLoadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RepositoryModelLoadResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RepositoryModelLoadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryModelLoadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryModelLoadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RepositoryModelLoadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryModelLoadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryModelLoadResponse)
  return target;
}

size_t RepositoryModelLoadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryModelLoadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepositoryModelLoadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.RepositoryModelLoadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RepositoryModelLoadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RepositoryModelLoadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.RepositoryModelLoadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.RepositoryModelLoadResponse)
    MergeFrom(*source);
  }
}

void RepositoryModelLoadResponse::MergeFrom(const RepositoryModelLoadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryModelLoadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RepositoryModelLoadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.RepositoryModelLoadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepositoryModelLoadResponse::CopyFrom(const RepositoryModelLoadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryModelLoadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryModelLoadResponse::IsInitialized() const {
  return true;
}

void RepositoryModelLoadResponse::InternalSwap(RepositoryModelLoadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelLoadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse() {}
RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::MergeFrom(const RepositoryModelUnloadRequest_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void RepositoryModelUnloadRequest::InitAsDefaultInstance() {
}
class RepositoryModelUnloadRequest::_Internal {
 public:
};

RepositoryModelUnloadRequest::RepositoryModelUnloadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  parameters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryModelUnloadRequest)
}
RepositoryModelUnloadRequest::RepositoryModelUnloadRequest(const RepositoryModelUnloadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  repository_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_repository_name().empty()) {
    repository_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_repository_name(),
      GetArena());
  }
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_name().empty()) {
    model_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryModelUnloadRequest)
}

void RepositoryModelUnloadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RepositoryModelUnloadRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  repository_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RepositoryModelUnloadRequest::~RepositoryModelUnloadRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryModelUnloadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RepositoryModelUnloadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  repository_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RepositoryModelUnloadRequest::ArenaDtor(void* object) {
  RepositoryModelUnloadRequest* _this = reinterpret_cast< RepositoryModelUnloadRequest* >(object);
  (void)_this;
}
void RepositoryModelUnloadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepositoryModelUnloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepositoryModelUnloadRequest& RepositoryModelUnloadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RepositoryModelUnloadRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RepositoryModelUnloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryModelUnloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  repository_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryModelUnloadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string repository_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_repository_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.RepositoryModelUnloadRequest.repository_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.RepositoryModelUnloadRequest.model_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RepositoryModelUnloadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryModelUnloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_name = 1;
  if (this->repository_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_repository_name().data(), static_cast<int>(this->_internal_repository_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryModelUnloadRequest.repository_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_repository_name(), target);
  }

  // string model_name = 2;
  if (this->model_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.RepositoryModelUnloadRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
  if (!this->_internal_parameters().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.RepositoryModelUnloadRequest.ParametersEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_parameters().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::const_iterator
          it = this->_internal_parameters().begin();
          it != this->_internal_parameters().end(); ++it) {
        target = RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryModelUnloadRequest)
  return target;
}

size_t RepositoryModelUnloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryModelUnloadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.ModelRepositoryParameter> parameters = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::ModelRepositoryParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string repository_name = 1;
  if (this->repository_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_repository_name());
  }

  // string model_name = 2;
  if (this->model_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepositoryModelUnloadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.RepositoryModelUnloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RepositoryModelUnloadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RepositoryModelUnloadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.RepositoryModelUnloadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.RepositoryModelUnloadRequest)
    MergeFrom(*source);
  }
}

void RepositoryModelUnloadRequest::MergeFrom(const RepositoryModelUnloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryModelUnloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (from.repository_name().size() > 0) {
    _internal_set_repository_name(from._internal_repository_name());
  }
  if (from.model_name().size() > 0) {
    _internal_set_model_name(from._internal_model_name());
  }
}

void RepositoryModelUnloadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.RepositoryModelUnloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepositoryModelUnloadRequest::CopyFrom(const RepositoryModelUnloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryModelUnloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryModelUnloadRequest::IsInitialized() const {
  return true;
}

void RepositoryModelUnloadRequest::InternalSwap(RepositoryModelUnloadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parameters_.Swap(&other->parameters_);
  repository_name_.Swap(&other->repository_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_name_.Swap(&other->model_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelUnloadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RepositoryModelUnloadResponse::InitAsDefaultInstance() {
}
class RepositoryModelUnloadResponse::_Internal {
 public:
};

RepositoryModelUnloadResponse::RepositoryModelUnloadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.RepositoryModelUnloadResponse)
}
RepositoryModelUnloadResponse::RepositoryModelUnloadResponse(const RepositoryModelUnloadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.RepositoryModelUnloadResponse)
}

void RepositoryModelUnloadResponse::SharedCtor() {
}

RepositoryModelUnloadResponse::~RepositoryModelUnloadResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.RepositoryModelUnloadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RepositoryModelUnloadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RepositoryModelUnloadResponse::ArenaDtor(void* object) {
  RepositoryModelUnloadResponse* _this = reinterpret_cast< RepositoryModelUnloadResponse* >(object);
  (void)_this;
}
void RepositoryModelUnloadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepositoryModelUnloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepositoryModelUnloadResponse& RepositoryModelUnloadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RepositoryModelUnloadResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RepositoryModelUnloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.RepositoryModelUnloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryModelUnloadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RepositoryModelUnloadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.RepositoryModelUnloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.RepositoryModelUnloadResponse)
  return target;
}

size_t RepositoryModelUnloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.RepositoryModelUnloadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepositoryModelUnloadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.RepositoryModelUnloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RepositoryModelUnloadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RepositoryModelUnloadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.RepositoryModelUnloadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.RepositoryModelUnloadResponse)
    MergeFrom(*source);
  }
}

void RepositoryModelUnloadResponse::MergeFrom(const RepositoryModelUnloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.RepositoryModelUnloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RepositoryModelUnloadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.RepositoryModelUnloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepositoryModelUnloadResponse::CopyFrom(const RepositoryModelUnloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.RepositoryModelUnloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryModelUnloadResponse::IsInitialized() const {
  return true;
}

void RepositoryModelUnloadResponse::InternalSwap(RepositoryModelUnloadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelUnloadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SystemSharedMemoryStatusRequest::InitAsDefaultInstance() {
}
class SystemSharedMemoryStatusRequest::_Internal {
 public:
};

SystemSharedMemoryStatusRequest::SystemSharedMemoryStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryStatusRequest)
}
SystemSharedMemoryStatusRequest::SystemSharedMemoryStatusRequest(const SystemSharedMemoryStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryStatusRequest)
}

void SystemSharedMemoryStatusRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SystemSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SystemSharedMemoryStatusRequest::~SystemSharedMemoryStatusRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemSharedMemoryStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SystemSharedMemoryStatusRequest::ArenaDtor(void* object) {
  SystemSharedMemoryStatusRequest* _this = reinterpret_cast< SystemSharedMemoryStatusRequest* >(object);
  (void)_this;
}
void SystemSharedMemoryStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemSharedMemoryStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemSharedMemoryStatusRequest& SystemSharedMemoryStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SystemSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SystemSharedMemoryStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryStatusRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemSharedMemoryStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryStatusRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryStatusRequest)
  return target;
}

size_t SystemSharedMemoryStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemSharedMemoryStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.SystemSharedMemoryStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemSharedMemoryStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemSharedMemoryStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.SystemSharedMemoryStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.SystemSharedMemoryStatusRequest)
    MergeFrom(*source);
  }
}

void SystemSharedMemoryStatusRequest::MergeFrom(const SystemSharedMemoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void SystemSharedMemoryStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.SystemSharedMemoryStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemSharedMemoryStatusRequest::CopyFrom(const SystemSharedMemoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryStatusRequest::IsInitialized() const {
  return true;
}

void SystemSharedMemoryStatusRequest::InternalSwap(SystemSharedMemoryStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SystemSharedMemoryStatusResponse_RegionStatus::InitAsDefaultInstance() {
}
class SystemSharedMemoryStatusResponse_RegionStatus::_Internal {
 public:
};

SystemSharedMemoryStatusResponse_RegionStatus::SystemSharedMemoryStatusResponse_RegionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
}
SystemSharedMemoryStatusResponse_RegionStatus::SystemSharedMemoryStatusResponse_RegionStatus(const SystemSharedMemoryStatusResponse_RegionStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
}

void SystemSharedMemoryStatusResponse_RegionStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SystemSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
}

SystemSharedMemoryStatusResponse_RegionStatus::~SystemSharedMemoryStatusResponse_RegionStatus() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemSharedMemoryStatusResponse_RegionStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SystemSharedMemoryStatusResponse_RegionStatus::ArenaDtor(void* object) {
  SystemSharedMemoryStatusResponse_RegionStatus* _this = reinterpret_cast< SystemSharedMemoryStatusResponse_RegionStatus* >(object);
  (void)_this;
}
void SystemSharedMemoryStatusResponse_RegionStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemSharedMemoryStatusResponse_RegionStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemSharedMemoryStatusResponse_RegionStatus& SystemSharedMemoryStatusResponse_RegionStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SystemSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SystemSharedMemoryStatusResponse_RegionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryStatusResponse_RegionStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 byte_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemSharedMemoryStatusResponse_RegionStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_offset(), target);
  }

  // uint64 byte_size = 4;
  if (this->byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  return target;
}

size_t SystemSharedMemoryStatusResponse_RegionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_offset());
  }

  // uint64 byte_size = 4;
  if (this->byte_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_byte_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemSharedMemoryStatusResponse_RegionStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemSharedMemoryStatusResponse_RegionStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemSharedMemoryStatusResponse_RegionStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
    MergeFrom(*source);
  }
}

void SystemSharedMemoryStatusResponse_RegionStatus::MergeFrom(const SystemSharedMemoryStatusResponse_RegionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from.byte_size() != 0) {
    _internal_set_byte_size(from._internal_byte_size());
  }
}

void SystemSharedMemoryStatusResponse_RegionStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemSharedMemoryStatusResponse_RegionStatus::CopyFrom(const SystemSharedMemoryStatusResponse_RegionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryStatusResponse_RegionStatus::IsInitialized() const {
  return true;
}

void SystemSharedMemoryStatusResponse_RegionStatus::InternalSwap(SystemSharedMemoryStatusResponse_RegionStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemSharedMemoryStatusResponse_RegionStatus, byte_size_)
      + sizeof(SystemSharedMemoryStatusResponse_RegionStatus::byte_size_)
      - PROTOBUF_FIELD_OFFSET(SystemSharedMemoryStatusResponse_RegionStatus, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusResponse_RegionStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse() {}
SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::MergeFrom(const SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SystemSharedMemoryStatusResponse::InitAsDefaultInstance() {
}
class SystemSharedMemoryStatusResponse::_Internal {
 public:
};

SystemSharedMemoryStatusResponse::SystemSharedMemoryStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  regions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryStatusResponse)
}
SystemSharedMemoryStatusResponse::SystemSharedMemoryStatusResponse(const SystemSharedMemoryStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  regions_.MergeFrom(from.regions_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryStatusResponse)
}

void SystemSharedMemoryStatusResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SystemSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
}

SystemSharedMemoryStatusResponse::~SystemSharedMemoryStatusResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryStatusResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemSharedMemoryStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SystemSharedMemoryStatusResponse::ArenaDtor(void* object) {
  SystemSharedMemoryStatusResponse* _this = reinterpret_cast< SystemSharedMemoryStatusResponse* >(object);
  (void)_this;
}
void SystemSharedMemoryStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemSharedMemoryStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemSharedMemoryStatusResponse& SystemSharedMemoryStatusResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SystemSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SystemSharedMemoryStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus> regions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&regions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemSharedMemoryStatusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus> regions = 1;
  if (!this->_internal_regions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.SystemSharedMemoryStatusResponse.RegionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_regions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_regions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus >::const_iterator
          it = this->_internal_regions().begin();
          it != this->_internal_regions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus >::const_iterator
          it = this->_internal_regions().begin();
          it != this->_internal_regions().end(); ++it) {
        target = SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryStatusResponse)
  return target;
}

size_t SystemSharedMemoryStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryStatusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.SystemSharedMemoryStatusResponse.RegionStatus> regions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_regions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus >::const_iterator
      it = this->_internal_regions().begin();
      it != this->_internal_regions().end(); ++it) {
    total_size += SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemSharedMemoryStatusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.SystemSharedMemoryStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemSharedMemoryStatusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemSharedMemoryStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.SystemSharedMemoryStatusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.SystemSharedMemoryStatusResponse)
    MergeFrom(*source);
  }
}

void SystemSharedMemoryStatusResponse::MergeFrom(const SystemSharedMemoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
}

void SystemSharedMemoryStatusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.SystemSharedMemoryStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemSharedMemoryStatusResponse::CopyFrom(const SystemSharedMemoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryStatusResponse::IsInitialized() const {
  return true;
}

void SystemSharedMemoryStatusResponse::InternalSwap(SystemSharedMemoryStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  regions_.Swap(&other->regions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SystemSharedMemoryRegisterRequest::InitAsDefaultInstance() {
}
class SystemSharedMemoryRegisterRequest::_Internal {
 public:
};

SystemSharedMemoryRegisterRequest::SystemSharedMemoryRegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryRegisterRequest)
}
SystemSharedMemoryRegisterRequest::SystemSharedMemoryRegisterRequest(const SystemSharedMemoryRegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryRegisterRequest)
}

void SystemSharedMemoryRegisterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SystemSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
}

SystemSharedMemoryRegisterRequest::~SystemSharedMemoryRegisterRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryRegisterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemSharedMemoryRegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SystemSharedMemoryRegisterRequest::ArenaDtor(void* object) {
  SystemSharedMemoryRegisterRequest* _this = reinterpret_cast< SystemSharedMemoryRegisterRequest* >(object);
  (void)_this;
}
void SystemSharedMemoryRegisterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemSharedMemoryRegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemSharedMemoryRegisterRequest& SystemSharedMemoryRegisterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SystemSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SystemSharedMemoryRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryRegisterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryRegisterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryRegisterRequest.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 byte_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemSharedMemoryRegisterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryRegisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryRegisterRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_offset(), target);
  }

  // uint64 byte_size = 4;
  if (this->byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryRegisterRequest)
  return target;
}

size_t SystemSharedMemoryRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_offset());
  }

  // uint64 byte_size = 4;
  if (this->byte_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_byte_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemSharedMemoryRegisterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemSharedMemoryRegisterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemSharedMemoryRegisterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.SystemSharedMemoryRegisterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.SystemSharedMemoryRegisterRequest)
    MergeFrom(*source);
  }
}

void SystemSharedMemoryRegisterRequest::MergeFrom(const SystemSharedMemoryRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from.byte_size() != 0) {
    _internal_set_byte_size(from._internal_byte_size());
  }
}

void SystemSharedMemoryRegisterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemSharedMemoryRegisterRequest::CopyFrom(const SystemSharedMemoryRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryRegisterRequest::IsInitialized() const {
  return true;
}

void SystemSharedMemoryRegisterRequest::InternalSwap(SystemSharedMemoryRegisterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemSharedMemoryRegisterRequest, byte_size_)
      + sizeof(SystemSharedMemoryRegisterRequest::byte_size_)
      - PROTOBUF_FIELD_OFFSET(SystemSharedMemoryRegisterRequest, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryRegisterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SystemSharedMemoryRegisterResponse::InitAsDefaultInstance() {
}
class SystemSharedMemoryRegisterResponse::_Internal {
 public:
};

SystemSharedMemoryRegisterResponse::SystemSharedMemoryRegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryRegisterResponse)
}
SystemSharedMemoryRegisterResponse::SystemSharedMemoryRegisterResponse(const SystemSharedMemoryRegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryRegisterResponse)
}

void SystemSharedMemoryRegisterResponse::SharedCtor() {
}

SystemSharedMemoryRegisterResponse::~SystemSharedMemoryRegisterResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryRegisterResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemSharedMemoryRegisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SystemSharedMemoryRegisterResponse::ArenaDtor(void* object) {
  SystemSharedMemoryRegisterResponse* _this = reinterpret_cast< SystemSharedMemoryRegisterResponse* >(object);
  (void)_this;
}
void SystemSharedMemoryRegisterResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemSharedMemoryRegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemSharedMemoryRegisterResponse& SystemSharedMemoryRegisterResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SystemSharedMemoryRegisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SystemSharedMemoryRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryRegisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryRegisterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemSharedMemoryRegisterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryRegisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryRegisterResponse)
  return target;
}

size_t SystemSharedMemoryRegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryRegisterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemSharedMemoryRegisterResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.SystemSharedMemoryRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemSharedMemoryRegisterResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemSharedMemoryRegisterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.SystemSharedMemoryRegisterResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.SystemSharedMemoryRegisterResponse)
    MergeFrom(*source);
  }
}

void SystemSharedMemoryRegisterResponse::MergeFrom(const SystemSharedMemoryRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SystemSharedMemoryRegisterResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.SystemSharedMemoryRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemSharedMemoryRegisterResponse::CopyFrom(const SystemSharedMemoryRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryRegisterResponse::IsInitialized() const {
  return true;
}

void SystemSharedMemoryRegisterResponse::InternalSwap(SystemSharedMemoryRegisterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryRegisterResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SystemSharedMemoryUnregisterRequest::InitAsDefaultInstance() {
}
class SystemSharedMemoryUnregisterRequest::_Internal {
 public:
};

SystemSharedMemoryUnregisterRequest::SystemSharedMemoryUnregisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryUnregisterRequest)
}
SystemSharedMemoryUnregisterRequest::SystemSharedMemoryUnregisterRequest(const SystemSharedMemoryUnregisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryUnregisterRequest)
}

void SystemSharedMemoryUnregisterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SystemSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SystemSharedMemoryUnregisterRequest::~SystemSharedMemoryUnregisterRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryUnregisterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemSharedMemoryUnregisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SystemSharedMemoryUnregisterRequest::ArenaDtor(void* object) {
  SystemSharedMemoryUnregisterRequest* _this = reinterpret_cast< SystemSharedMemoryUnregisterRequest* >(object);
  (void)_this;
}
void SystemSharedMemoryUnregisterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemSharedMemoryUnregisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemSharedMemoryUnregisterRequest& SystemSharedMemoryUnregisterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SystemSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SystemSharedMemoryUnregisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryUnregisterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.SystemSharedMemoryUnregisterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemSharedMemoryUnregisterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.SystemSharedMemoryUnregisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryUnregisterRequest)
  return target;
}

size_t SystemSharedMemoryUnregisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemSharedMemoryUnregisterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemSharedMemoryUnregisterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemSharedMemoryUnregisterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.SystemSharedMemoryUnregisterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.SystemSharedMemoryUnregisterRequest)
    MergeFrom(*source);
  }
}

void SystemSharedMemoryUnregisterRequest::MergeFrom(const SystemSharedMemoryUnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void SystemSharedMemoryUnregisterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemSharedMemoryUnregisterRequest::CopyFrom(const SystemSharedMemoryUnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryUnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryUnregisterRequest::IsInitialized() const {
  return true;
}

void SystemSharedMemoryUnregisterRequest::InternalSwap(SystemSharedMemoryUnregisterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryUnregisterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SystemSharedMemoryUnregisterResponse::InitAsDefaultInstance() {
}
class SystemSharedMemoryUnregisterResponse::_Internal {
 public:
};

SystemSharedMemoryUnregisterResponse::SystemSharedMemoryUnregisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.SystemSharedMemoryUnregisterResponse)
}
SystemSharedMemoryUnregisterResponse::SystemSharedMemoryUnregisterResponse(const SystemSharedMemoryUnregisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.SystemSharedMemoryUnregisterResponse)
}

void SystemSharedMemoryUnregisterResponse::SharedCtor() {
}

SystemSharedMemoryUnregisterResponse::~SystemSharedMemoryUnregisterResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.SystemSharedMemoryUnregisterResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemSharedMemoryUnregisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SystemSharedMemoryUnregisterResponse::ArenaDtor(void* object) {
  SystemSharedMemoryUnregisterResponse* _this = reinterpret_cast< SystemSharedMemoryUnregisterResponse* >(object);
  (void)_this;
}
void SystemSharedMemoryUnregisterResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemSharedMemoryUnregisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemSharedMemoryUnregisterResponse& SystemSharedMemoryUnregisterResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SystemSharedMemoryUnregisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SystemSharedMemoryUnregisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.SystemSharedMemoryUnregisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryUnregisterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemSharedMemoryUnregisterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.SystemSharedMemoryUnregisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.SystemSharedMemoryUnregisterResponse)
  return target;
}

size_t SystemSharedMemoryUnregisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.SystemSharedMemoryUnregisterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemSharedMemoryUnregisterResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.SystemSharedMemoryUnregisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemSharedMemoryUnregisterResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemSharedMemoryUnregisterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.SystemSharedMemoryUnregisterResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.SystemSharedMemoryUnregisterResponse)
    MergeFrom(*source);
  }
}

void SystemSharedMemoryUnregisterResponse::MergeFrom(const SystemSharedMemoryUnregisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.SystemSharedMemoryUnregisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SystemSharedMemoryUnregisterResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.SystemSharedMemoryUnregisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemSharedMemoryUnregisterResponse::CopyFrom(const SystemSharedMemoryUnregisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.SystemSharedMemoryUnregisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryUnregisterResponse::IsInitialized() const {
  return true;
}

void SystemSharedMemoryUnregisterResponse::InternalSwap(SystemSharedMemoryUnregisterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryUnregisterResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CudaSharedMemoryStatusRequest::InitAsDefaultInstance() {
}
class CudaSharedMemoryStatusRequest::_Internal {
 public:
};

CudaSharedMemoryStatusRequest::CudaSharedMemoryStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryStatusRequest)
}
CudaSharedMemoryStatusRequest::CudaSharedMemoryStatusRequest(const CudaSharedMemoryStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryStatusRequest)
}

void CudaSharedMemoryStatusRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CudaSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CudaSharedMemoryStatusRequest::~CudaSharedMemoryStatusRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CudaSharedMemoryStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CudaSharedMemoryStatusRequest::ArenaDtor(void* object) {
  CudaSharedMemoryStatusRequest* _this = reinterpret_cast< CudaSharedMemoryStatusRequest* >(object);
  (void)_this;
}
void CudaSharedMemoryStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CudaSharedMemoryStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CudaSharedMemoryStatusRequest& CudaSharedMemoryStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CudaSharedMemoryStatusRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CudaSharedMemoryStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.CudaSharedMemoryStatusRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CudaSharedMemoryStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.CudaSharedMemoryStatusRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryStatusRequest)
  return target;
}

size_t CudaSharedMemoryStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CudaSharedMemoryStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.CudaSharedMemoryStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CudaSharedMemoryStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CudaSharedMemoryStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.CudaSharedMemoryStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.CudaSharedMemoryStatusRequest)
    MergeFrom(*source);
  }
}

void CudaSharedMemoryStatusRequest::MergeFrom(const CudaSharedMemoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void CudaSharedMemoryStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.CudaSharedMemoryStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CudaSharedMemoryStatusRequest::CopyFrom(const CudaSharedMemoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryStatusRequest::IsInitialized() const {
  return true;
}

void CudaSharedMemoryStatusRequest::InternalSwap(CudaSharedMemoryStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CudaSharedMemoryStatusResponse_RegionStatus::InitAsDefaultInstance() {
}
class CudaSharedMemoryStatusResponse_RegionStatus::_Internal {
 public:
};

CudaSharedMemoryStatusResponse_RegionStatus::CudaSharedMemoryStatusResponse_RegionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
}
CudaSharedMemoryStatusResponse_RegionStatus::CudaSharedMemoryStatusResponse_RegionStatus(const CudaSharedMemoryStatusResponse_RegionStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&device_id_, &from.device_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
}

void CudaSharedMemoryStatusResponse_RegionStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CudaSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
}

CudaSharedMemoryStatusResponse_RegionStatus::~CudaSharedMemoryStatusResponse_RegionStatus() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CudaSharedMemoryStatusResponse_RegionStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CudaSharedMemoryStatusResponse_RegionStatus::ArenaDtor(void* object) {
  CudaSharedMemoryStatusResponse_RegionStatus* _this = reinterpret_cast< CudaSharedMemoryStatusResponse_RegionStatus* >(object);
  (void)_this;
}
void CudaSharedMemoryStatusResponse_RegionStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CudaSharedMemoryStatusResponse_RegionStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CudaSharedMemoryStatusResponse_RegionStatus& CudaSharedMemoryStatusResponse_RegionStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CudaSharedMemoryStatusResponse_RegionStatus_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CudaSharedMemoryStatusResponse_RegionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryStatusResponse_RegionStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 device_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          device_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 byte_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CudaSharedMemoryStatusResponse_RegionStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint64 device_id = 2;
  if (this->device_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_device_id(), target);
  }

  // uint64 byte_size = 3;
  if (this->byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  return target;
}

size_t CudaSharedMemoryStatusResponse_RegionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 device_id = 2;
  if (this->device_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_device_id());
  }

  // uint64 byte_size = 3;
  if (this->byte_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_byte_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CudaSharedMemoryStatusResponse_RegionStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CudaSharedMemoryStatusResponse_RegionStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CudaSharedMemoryStatusResponse_RegionStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
    MergeFrom(*source);
  }
}

void CudaSharedMemoryStatusResponse_RegionStatus::MergeFrom(const CudaSharedMemoryStatusResponse_RegionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.device_id() != 0) {
    _internal_set_device_id(from._internal_device_id());
  }
  if (from.byte_size() != 0) {
    _internal_set_byte_size(from._internal_byte_size());
  }
}

void CudaSharedMemoryStatusResponse_RegionStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CudaSharedMemoryStatusResponse_RegionStatus::CopyFrom(const CudaSharedMemoryStatusResponse_RegionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryStatusResponse_RegionStatus::IsInitialized() const {
  return true;
}

void CudaSharedMemoryStatusResponse_RegionStatus::InternalSwap(CudaSharedMemoryStatusResponse_RegionStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CudaSharedMemoryStatusResponse_RegionStatus, byte_size_)
      + sizeof(CudaSharedMemoryStatusResponse_RegionStatus::byte_size_)
      - PROTOBUF_FIELD_OFFSET(CudaSharedMemoryStatusResponse_RegionStatus, device_id_)>(
          reinterpret_cast<char*>(&device_id_),
          reinterpret_cast<char*>(&other->device_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusResponse_RegionStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse() {}
CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::MergeFrom(const CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void CudaSharedMemoryStatusResponse::InitAsDefaultInstance() {
}
class CudaSharedMemoryStatusResponse::_Internal {
 public:
};

CudaSharedMemoryStatusResponse::CudaSharedMemoryStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  regions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryStatusResponse)
}
CudaSharedMemoryStatusResponse::CudaSharedMemoryStatusResponse(const CudaSharedMemoryStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  regions_.MergeFrom(from.regions_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryStatusResponse)
}

void CudaSharedMemoryStatusResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CudaSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
}

CudaSharedMemoryStatusResponse::~CudaSharedMemoryStatusResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryStatusResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CudaSharedMemoryStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CudaSharedMemoryStatusResponse::ArenaDtor(void* object) {
  CudaSharedMemoryStatusResponse* _this = reinterpret_cast< CudaSharedMemoryStatusResponse* >(object);
  (void)_this;
}
void CudaSharedMemoryStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CudaSharedMemoryStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CudaSharedMemoryStatusResponse& CudaSharedMemoryStatusResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CudaSharedMemoryStatusResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CudaSharedMemoryStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus> regions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&regions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CudaSharedMemoryStatusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus> regions = 1;
  if (!this->_internal_regions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.CudaSharedMemoryStatusResponse.RegionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_regions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_regions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus >::const_iterator
          it = this->_internal_regions().begin();
          it != this->_internal_regions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus >::const_iterator
          it = this->_internal_regions().begin();
          it != this->_internal_regions().end(); ++it) {
        target = CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryStatusResponse)
  return target;
}

size_t CudaSharedMemoryStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryStatusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.CudaSharedMemoryStatusResponse.RegionStatus> regions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_regions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus >::const_iterator
      it = this->_internal_regions().begin();
      it != this->_internal_regions().end(); ++it) {
    total_size += CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CudaSharedMemoryStatusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.CudaSharedMemoryStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CudaSharedMemoryStatusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CudaSharedMemoryStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.CudaSharedMemoryStatusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.CudaSharedMemoryStatusResponse)
    MergeFrom(*source);
  }
}

void CudaSharedMemoryStatusResponse::MergeFrom(const CudaSharedMemoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
}

void CudaSharedMemoryStatusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.CudaSharedMemoryStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CudaSharedMemoryStatusResponse::CopyFrom(const CudaSharedMemoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryStatusResponse::IsInitialized() const {
  return true;
}

void CudaSharedMemoryStatusResponse::InternalSwap(CudaSharedMemoryStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  regions_.Swap(&other->regions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CudaSharedMemoryRegisterRequest::InitAsDefaultInstance() {
}
class CudaSharedMemoryRegisterRequest::_Internal {
 public:
};

CudaSharedMemoryRegisterRequest::CudaSharedMemoryRegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryRegisterRequest)
}
CudaSharedMemoryRegisterRequest::CudaSharedMemoryRegisterRequest(const CudaSharedMemoryRegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  raw_handle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_raw_handle().empty()) {
    raw_handle_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_raw_handle(),
      GetArena());
  }
  ::memcpy(&device_id_, &from.device_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&byte_size_) -
    reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryRegisterRequest)
}

void CudaSharedMemoryRegisterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CudaSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  raw_handle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
}

CudaSharedMemoryRegisterRequest::~CudaSharedMemoryRegisterRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryRegisterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CudaSharedMemoryRegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  raw_handle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CudaSharedMemoryRegisterRequest::ArenaDtor(void* object) {
  CudaSharedMemoryRegisterRequest* _this = reinterpret_cast< CudaSharedMemoryRegisterRequest* >(object);
  (void)_this;
}
void CudaSharedMemoryRegisterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CudaSharedMemoryRegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CudaSharedMemoryRegisterRequest& CudaSharedMemoryRegisterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CudaSharedMemoryRegisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CudaSharedMemoryRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  raw_handle_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte_size_) -
      reinterpret_cast<char*>(&device_id_)) + sizeof(byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryRegisterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.CudaSharedMemoryRegisterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes raw_handle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_raw_handle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 device_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          device_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 byte_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CudaSharedMemoryRegisterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.CudaSharedMemoryRegisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes raw_handle = 2;
  if (this->raw_handle().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_raw_handle(), target);
  }

  // int64 device_id = 3;
  if (this->device_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_device_id(), target);
  }

  // uint64 byte_size = 4;
  if (this->byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryRegisterRequest)
  return target;
}

size_t CudaSharedMemoryRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes raw_handle = 2;
  if (this->raw_handle().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_raw_handle());
  }

  // int64 device_id = 3;
  if (this->device_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_device_id());
  }

  // uint64 byte_size = 4;
  if (this->byte_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_byte_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CudaSharedMemoryRegisterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CudaSharedMemoryRegisterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CudaSharedMemoryRegisterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.CudaSharedMemoryRegisterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.CudaSharedMemoryRegisterRequest)
    MergeFrom(*source);
  }
}

void CudaSharedMemoryRegisterRequest::MergeFrom(const CudaSharedMemoryRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.raw_handle().size() > 0) {
    _internal_set_raw_handle(from._internal_raw_handle());
  }
  if (from.device_id() != 0) {
    _internal_set_device_id(from._internal_device_id());
  }
  if (from.byte_size() != 0) {
    _internal_set_byte_size(from._internal_byte_size());
  }
}

void CudaSharedMemoryRegisterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CudaSharedMemoryRegisterRequest::CopyFrom(const CudaSharedMemoryRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryRegisterRequest::IsInitialized() const {
  return true;
}

void CudaSharedMemoryRegisterRequest::InternalSwap(CudaSharedMemoryRegisterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  raw_handle_.Swap(&other->raw_handle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CudaSharedMemoryRegisterRequest, byte_size_)
      + sizeof(CudaSharedMemoryRegisterRequest::byte_size_)
      - PROTOBUF_FIELD_OFFSET(CudaSharedMemoryRegisterRequest, device_id_)>(
          reinterpret_cast<char*>(&device_id_),
          reinterpret_cast<char*>(&other->device_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryRegisterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CudaSharedMemoryRegisterResponse::InitAsDefaultInstance() {
}
class CudaSharedMemoryRegisterResponse::_Internal {
 public:
};

CudaSharedMemoryRegisterResponse::CudaSharedMemoryRegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryRegisterResponse)
}
CudaSharedMemoryRegisterResponse::CudaSharedMemoryRegisterResponse(const CudaSharedMemoryRegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryRegisterResponse)
}

void CudaSharedMemoryRegisterResponse::SharedCtor() {
}

CudaSharedMemoryRegisterResponse::~CudaSharedMemoryRegisterResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryRegisterResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CudaSharedMemoryRegisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CudaSharedMemoryRegisterResponse::ArenaDtor(void* object) {
  CudaSharedMemoryRegisterResponse* _this = reinterpret_cast< CudaSharedMemoryRegisterResponse* >(object);
  (void)_this;
}
void CudaSharedMemoryRegisterResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CudaSharedMemoryRegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CudaSharedMemoryRegisterResponse& CudaSharedMemoryRegisterResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CudaSharedMemoryRegisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CudaSharedMemoryRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryRegisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryRegisterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CudaSharedMemoryRegisterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryRegisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryRegisterResponse)
  return target;
}

size_t CudaSharedMemoryRegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryRegisterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CudaSharedMemoryRegisterResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.CudaSharedMemoryRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CudaSharedMemoryRegisterResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CudaSharedMemoryRegisterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.CudaSharedMemoryRegisterResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.CudaSharedMemoryRegisterResponse)
    MergeFrom(*source);
  }
}

void CudaSharedMemoryRegisterResponse::MergeFrom(const CudaSharedMemoryRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CudaSharedMemoryRegisterResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.CudaSharedMemoryRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CudaSharedMemoryRegisterResponse::CopyFrom(const CudaSharedMemoryRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryRegisterResponse::IsInitialized() const {
  return true;
}

void CudaSharedMemoryRegisterResponse::InternalSwap(CudaSharedMemoryRegisterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryRegisterResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CudaSharedMemoryUnregisterRequest::InitAsDefaultInstance() {
}
class CudaSharedMemoryUnregisterRequest::_Internal {
 public:
};

CudaSharedMemoryUnregisterRequest::CudaSharedMemoryUnregisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryUnregisterRequest)
}
CudaSharedMemoryUnregisterRequest::CudaSharedMemoryUnregisterRequest(const CudaSharedMemoryUnregisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryUnregisterRequest)
}

void CudaSharedMemoryUnregisterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CudaSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CudaSharedMemoryUnregisterRequest::~CudaSharedMemoryUnregisterRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryUnregisterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CudaSharedMemoryUnregisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CudaSharedMemoryUnregisterRequest::ArenaDtor(void* object) {
  CudaSharedMemoryUnregisterRequest* _this = reinterpret_cast< CudaSharedMemoryUnregisterRequest* >(object);
  (void)_this;
}
void CudaSharedMemoryUnregisterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CudaSharedMemoryUnregisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CudaSharedMemoryUnregisterRequest& CudaSharedMemoryUnregisterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CudaSharedMemoryUnregisterRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CudaSharedMemoryUnregisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryUnregisterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.CudaSharedMemoryUnregisterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CudaSharedMemoryUnregisterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.CudaSharedMemoryUnregisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryUnregisterRequest)
  return target;
}

size_t CudaSharedMemoryUnregisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CudaSharedMemoryUnregisterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CudaSharedMemoryUnregisterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CudaSharedMemoryUnregisterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.CudaSharedMemoryUnregisterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.CudaSharedMemoryUnregisterRequest)
    MergeFrom(*source);
  }
}

void CudaSharedMemoryUnregisterRequest::MergeFrom(const CudaSharedMemoryUnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void CudaSharedMemoryUnregisterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CudaSharedMemoryUnregisterRequest::CopyFrom(const CudaSharedMemoryUnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryUnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryUnregisterRequest::IsInitialized() const {
  return true;
}

void CudaSharedMemoryUnregisterRequest::InternalSwap(CudaSharedMemoryUnregisterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryUnregisterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CudaSharedMemoryUnregisterResponse::InitAsDefaultInstance() {
}
class CudaSharedMemoryUnregisterResponse::_Internal {
 public:
};

CudaSharedMemoryUnregisterResponse::CudaSharedMemoryUnregisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.CudaSharedMemoryUnregisterResponse)
}
CudaSharedMemoryUnregisterResponse::CudaSharedMemoryUnregisterResponse(const CudaSharedMemoryUnregisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.CudaSharedMemoryUnregisterResponse)
}

void CudaSharedMemoryUnregisterResponse::SharedCtor() {
}

CudaSharedMemoryUnregisterResponse::~CudaSharedMemoryUnregisterResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.CudaSharedMemoryUnregisterResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CudaSharedMemoryUnregisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CudaSharedMemoryUnregisterResponse::ArenaDtor(void* object) {
  CudaSharedMemoryUnregisterResponse* _this = reinterpret_cast< CudaSharedMemoryUnregisterResponse* >(object);
  (void)_this;
}
void CudaSharedMemoryUnregisterResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CudaSharedMemoryUnregisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CudaSharedMemoryUnregisterResponse& CudaSharedMemoryUnregisterResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CudaSharedMemoryUnregisterResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CudaSharedMemoryUnregisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.CudaSharedMemoryUnregisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryUnregisterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CudaSharedMemoryUnregisterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.CudaSharedMemoryUnregisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.CudaSharedMemoryUnregisterResponse)
  return target;
}

size_t CudaSharedMemoryUnregisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.CudaSharedMemoryUnregisterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CudaSharedMemoryUnregisterResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.CudaSharedMemoryUnregisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CudaSharedMemoryUnregisterResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CudaSharedMemoryUnregisterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.CudaSharedMemoryUnregisterResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.CudaSharedMemoryUnregisterResponse)
    MergeFrom(*source);
  }
}

void CudaSharedMemoryUnregisterResponse::MergeFrom(const CudaSharedMemoryUnregisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.CudaSharedMemoryUnregisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CudaSharedMemoryUnregisterResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.CudaSharedMemoryUnregisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CudaSharedMemoryUnregisterResponse::CopyFrom(const CudaSharedMemoryUnregisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.CudaSharedMemoryUnregisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryUnregisterResponse::IsInitialized() const {
  return true;
}

void CudaSharedMemoryUnregisterResponse::InternalSwap(CudaSharedMemoryUnregisterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryUnregisterResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TraceSettingRequest_SettingValue::InitAsDefaultInstance() {
}
class TraceSettingRequest_SettingValue::_Internal {
 public:
};

TraceSettingRequest_SettingValue::TraceSettingRequest_SettingValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  value_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.TraceSettingRequest.SettingValue)
}
TraceSettingRequest_SettingValue::TraceSettingRequest_SettingValue(const TraceSettingRequest_SettingValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      value_(from.value_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.TraceSettingRequest.SettingValue)
}

void TraceSettingRequest_SettingValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TraceSettingRequest_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto.base);
}

TraceSettingRequest_SettingValue::~TraceSettingRequest_SettingValue() {
  // @@protoc_insertion_point(destructor:hercules.proto.TraceSettingRequest.SettingValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TraceSettingRequest_SettingValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TraceSettingRequest_SettingValue::ArenaDtor(void* object) {
  TraceSettingRequest_SettingValue* _this = reinterpret_cast< TraceSettingRequest_SettingValue* >(object);
  (void)_this;
}
void TraceSettingRequest_SettingValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TraceSettingRequest_SettingValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceSettingRequest_SettingValue& TraceSettingRequest_SettingValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TraceSettingRequest_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TraceSettingRequest_SettingValue::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.TraceSettingRequest.SettingValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingRequest_SettingValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.TraceSettingRequest.SettingValue.value"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TraceSettingRequest_SettingValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.TraceSettingRequest.SettingValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.TraceSettingRequest.SettingValue.value");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.TraceSettingRequest.SettingValue)
  return target;
}

size_t TraceSettingRequest_SettingValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.TraceSettingRequest.SettingValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(value_.size());
  for (int i = 0, n = value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      value_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceSettingRequest_SettingValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.TraceSettingRequest.SettingValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TraceSettingRequest_SettingValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TraceSettingRequest_SettingValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.TraceSettingRequest.SettingValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.TraceSettingRequest.SettingValue)
    MergeFrom(*source);
  }
}

void TraceSettingRequest_SettingValue::MergeFrom(const TraceSettingRequest_SettingValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.TraceSettingRequest.SettingValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void TraceSettingRequest_SettingValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.TraceSettingRequest.SettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TraceSettingRequest_SettingValue::CopyFrom(const TraceSettingRequest_SettingValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.TraceSettingRequest.SettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingRequest_SettingValue::IsInitialized() const {
  return true;
}

void TraceSettingRequest_SettingValue::InternalSwap(TraceSettingRequest_SettingValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.InternalSwap(&other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingRequest_SettingValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

TraceSettingRequest_SettingsEntry_DoNotUse::TraceSettingRequest_SettingsEntry_DoNotUse() {}
TraceSettingRequest_SettingsEntry_DoNotUse::TraceSettingRequest_SettingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TraceSettingRequest_SettingsEntry_DoNotUse::MergeFrom(const TraceSettingRequest_SettingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingRequest_SettingsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void TraceSettingRequest_SettingsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void TraceSettingRequest::InitAsDefaultInstance() {
}
class TraceSettingRequest::_Internal {
 public:
};

TraceSettingRequest::TraceSettingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  settings_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.TraceSettingRequest)
}
TraceSettingRequest::TraceSettingRequest(const TraceSettingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  settings_.MergeFrom(from.settings_);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_name().empty()) {
    model_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hercules.proto.TraceSettingRequest)
}

void TraceSettingRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TraceSettingRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TraceSettingRequest::~TraceSettingRequest() {
  // @@protoc_insertion_point(destructor:hercules.proto.TraceSettingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TraceSettingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TraceSettingRequest::ArenaDtor(void* object) {
  TraceSettingRequest* _this = reinterpret_cast< TraceSettingRequest* >(object);
  (void)_this;
}
void TraceSettingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TraceSettingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceSettingRequest& TraceSettingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TraceSettingRequest_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TraceSettingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.TraceSettingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  settings_.Clear();
  model_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .hercules.proto.TraceSettingRequest.SettingValue> settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&settings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.TraceSettingRequest.model_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TraceSettingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.TraceSettingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .hercules.proto.TraceSettingRequest.SettingValue> settings = 1;
  if (!this->_internal_settings().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingRequest_SettingValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.TraceSettingRequest.SettingsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_settings().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_settings().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingRequest_SettingValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingRequest_SettingValue >::const_iterator
          it = this->_internal_settings().begin();
          it != this->_internal_settings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = TraceSettingRequest_SettingsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingRequest_SettingValue >::const_iterator
          it = this->_internal_settings().begin();
          it != this->_internal_settings().end(); ++it) {
        target = TraceSettingRequest_SettingsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string model_name = 2;
  if (this->model_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.TraceSettingRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.TraceSettingRequest)
  return target;
}

size_t TraceSettingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.TraceSettingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.TraceSettingRequest.SettingValue> settings = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_settings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingRequest_SettingValue >::const_iterator
      it = this->_internal_settings().begin();
      it != this->_internal_settings().end(); ++it) {
    total_size += TraceSettingRequest_SettingsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string model_name = 2;
  if (this->model_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceSettingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.TraceSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TraceSettingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TraceSettingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.TraceSettingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.TraceSettingRequest)
    MergeFrom(*source);
  }
}

void TraceSettingRequest::MergeFrom(const TraceSettingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.TraceSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  settings_.MergeFrom(from.settings_);
  if (from.model_name().size() > 0) {
    _internal_set_model_name(from._internal_model_name());
  }
}

void TraceSettingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.TraceSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TraceSettingRequest::CopyFrom(const TraceSettingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.TraceSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingRequest::IsInitialized() const {
  return true;
}

void TraceSettingRequest::InternalSwap(TraceSettingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  settings_.Swap(&other->settings_);
  model_name_.Swap(&other->model_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TraceSettingResponse_SettingValue::InitAsDefaultInstance() {
}
class TraceSettingResponse_SettingValue::_Internal {
 public:
};

TraceSettingResponse_SettingValue::TraceSettingResponse_SettingValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  value_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.TraceSettingResponse.SettingValue)
}
TraceSettingResponse_SettingValue::TraceSettingResponse_SettingValue(const TraceSettingResponse_SettingValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      value_(from.value_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.TraceSettingResponse.SettingValue)
}

void TraceSettingResponse_SettingValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TraceSettingResponse_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto.base);
}

TraceSettingResponse_SettingValue::~TraceSettingResponse_SettingValue() {
  // @@protoc_insertion_point(destructor:hercules.proto.TraceSettingResponse.SettingValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TraceSettingResponse_SettingValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TraceSettingResponse_SettingValue::ArenaDtor(void* object) {
  TraceSettingResponse_SettingValue* _this = reinterpret_cast< TraceSettingResponse_SettingValue* >(object);
  (void)_this;
}
void TraceSettingResponse_SettingValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TraceSettingResponse_SettingValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceSettingResponse_SettingValue& TraceSettingResponse_SettingValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TraceSettingResponse_SettingValue_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TraceSettingResponse_SettingValue::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.TraceSettingResponse.SettingValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingResponse_SettingValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hercules.proto.TraceSettingResponse.SettingValue.value"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TraceSettingResponse_SettingValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.TraceSettingResponse.SettingValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hercules.proto.TraceSettingResponse.SettingValue.value");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.TraceSettingResponse.SettingValue)
  return target;
}

size_t TraceSettingResponse_SettingValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.TraceSettingResponse.SettingValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(value_.size());
  for (int i = 0, n = value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      value_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceSettingResponse_SettingValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.TraceSettingResponse.SettingValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TraceSettingResponse_SettingValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TraceSettingResponse_SettingValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.TraceSettingResponse.SettingValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.TraceSettingResponse.SettingValue)
    MergeFrom(*source);
  }
}

void TraceSettingResponse_SettingValue::MergeFrom(const TraceSettingResponse_SettingValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.TraceSettingResponse.SettingValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void TraceSettingResponse_SettingValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.TraceSettingResponse.SettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TraceSettingResponse_SettingValue::CopyFrom(const TraceSettingResponse_SettingValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.TraceSettingResponse.SettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingResponse_SettingValue::IsInitialized() const {
  return true;
}

void TraceSettingResponse_SettingValue::InternalSwap(TraceSettingResponse_SettingValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.InternalSwap(&other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingResponse_SettingValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

TraceSettingResponse_SettingsEntry_DoNotUse::TraceSettingResponse_SettingsEntry_DoNotUse() {}
TraceSettingResponse_SettingsEntry_DoNotUse::TraceSettingResponse_SettingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TraceSettingResponse_SettingsEntry_DoNotUse::MergeFrom(const TraceSettingResponse_SettingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingResponse_SettingsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void TraceSettingResponse_SettingsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void TraceSettingResponse::InitAsDefaultInstance() {
}
class TraceSettingResponse::_Internal {
 public:
};

TraceSettingResponse::TraceSettingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  settings_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hercules.proto.TraceSettingResponse)
}
TraceSettingResponse::TraceSettingResponse(const TraceSettingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  settings_.MergeFrom(from.settings_);
  // @@protoc_insertion_point(copy_constructor:hercules.proto.TraceSettingResponse)
}

void TraceSettingResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TraceSettingResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
}

TraceSettingResponse::~TraceSettingResponse() {
  // @@protoc_insertion_point(destructor:hercules.proto.TraceSettingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TraceSettingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TraceSettingResponse::ArenaDtor(void* object) {
  TraceSettingResponse* _this = reinterpret_cast< TraceSettingResponse* >(object);
  (void)_this;
}
void TraceSettingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TraceSettingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TraceSettingResponse& TraceSettingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TraceSettingResponse_hercules_2fproto_2fhercules_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TraceSettingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hercules.proto.TraceSettingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  settings_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .hercules.proto.TraceSettingResponse.SettingValue> settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&settings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TraceSettingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hercules.proto.TraceSettingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .hercules.proto.TraceSettingResponse.SettingValue> settings = 1;
  if (!this->_internal_settings().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingResponse_SettingValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hercules.proto.TraceSettingResponse.SettingsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_settings().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_settings().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingResponse_SettingValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingResponse_SettingValue >::const_iterator
          it = this->_internal_settings().begin();
          it != this->_internal_settings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = TraceSettingResponse_SettingsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingResponse_SettingValue >::const_iterator
          it = this->_internal_settings().begin();
          it != this->_internal_settings().end(); ++it) {
        target = TraceSettingResponse_SettingsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hercules.proto.TraceSettingResponse)
  return target;
}

size_t TraceSettingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hercules.proto.TraceSettingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .hercules.proto.TraceSettingResponse.SettingValue> settings = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_settings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::hercules::proto::TraceSettingResponse_SettingValue >::const_iterator
      it = this->_internal_settings().begin();
      it != this->_internal_settings().end(); ++it) {
    total_size += TraceSettingResponse_SettingsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceSettingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hercules.proto.TraceSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TraceSettingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TraceSettingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hercules.proto.TraceSettingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hercules.proto.TraceSettingResponse)
    MergeFrom(*source);
  }
}

void TraceSettingResponse::MergeFrom(const TraceSettingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hercules.proto.TraceSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  settings_.MergeFrom(from.settings_);
}

void TraceSettingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hercules.proto.TraceSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TraceSettingResponse::CopyFrom(const TraceSettingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hercules.proto.TraceSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingResponse::IsInitialized() const {
  return true;
}

void TraceSettingResponse::InternalSwap(TraceSettingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  settings_.Swap(&other->settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace hercules
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerLiveRequest* Arena::CreateMaybeMessage< ::hercules::proto::ServerLiveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerLiveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerLiveResponse* Arena::CreateMaybeMessage< ::hercules::proto::ServerLiveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerLiveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerReadyRequest* Arena::CreateMaybeMessage< ::hercules::proto::ServerReadyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerReadyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerReadyResponse* Arena::CreateMaybeMessage< ::hercules::proto::ServerReadyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerReadyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelReadyRequest* Arena::CreateMaybeMessage< ::hercules::proto::ModelReadyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelReadyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelReadyResponse* Arena::CreateMaybeMessage< ::hercules::proto::ModelReadyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelReadyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerMetadataRequest* Arena::CreateMaybeMessage< ::hercules::proto::ServerMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ServerMetadataResponse* Arena::CreateMaybeMessage< ::hercules::proto::ServerMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ServerMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelMetadataRequest* Arena::CreateMaybeMessage< ::hercules::proto::ModelMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelMetadataResponse_TensorMetadata* Arena::CreateMaybeMessage< ::hercules::proto::ModelMetadataResponse_TensorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelMetadataResponse_TensorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelMetadataResponse* Arena::CreateMaybeMessage< ::hercules::proto::ModelMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::InferParameter* Arena::CreateMaybeMessage< ::hercules::proto::InferParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::InferParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::InferTensorContents* Arena::CreateMaybeMessage< ::hercules::proto::InferTensorContents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::InferTensorContents >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest_InferInputTensor* Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest_InferInputTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest_InferInputTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor* Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest_InferRequestedOutputTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferRequest* Arena::CreateMaybeMessage< ::hercules::proto::ModelInferRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferResponse_InferOutputTensor* Arena::CreateMaybeMessage< ::hercules::proto::ModelInferResponse_InferOutputTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferResponse_InferOutputTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferResponse_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelInferResponse* Arena::CreateMaybeMessage< ::hercules::proto::ModelInferResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelInferResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelStreamInferResponse* Arena::CreateMaybeMessage< ::hercules::proto::ModelStreamInferResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelStreamInferResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelConfigRequest* Arena::CreateMaybeMessage< ::hercules::proto::ModelConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelConfigResponse* Arena::CreateMaybeMessage< ::hercules::proto::ModelConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelStatisticsRequest* Arena::CreateMaybeMessage< ::hercules::proto::ModelStatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelStatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::StatisticDuration* Arena::CreateMaybeMessage< ::hercules::proto::StatisticDuration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::StatisticDuration >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::InferStatistics* Arena::CreateMaybeMessage< ::hercules::proto::InferStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::InferStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::InferBatchStatistics* Arena::CreateMaybeMessage< ::hercules::proto::InferBatchStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::InferBatchStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelStatistics* Arena::CreateMaybeMessage< ::hercules::proto::ModelStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelStatisticsResponse* Arena::CreateMaybeMessage< ::hercules::proto::ModelStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::ModelRepositoryParameter* Arena::CreateMaybeMessage< ::hercules::proto::ModelRepositoryParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::ModelRepositoryParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryIndexRequest* Arena::CreateMaybeMessage< ::hercules::proto::RepositoryIndexRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryIndexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryIndexResponse_ModelIndex* Arena::CreateMaybeMessage< ::hercules::proto::RepositoryIndexResponse_ModelIndex >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryIndexResponse_ModelIndex >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryIndexResponse* Arena::CreateMaybeMessage< ::hercules::proto::RepositoryIndexResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryIndexResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelLoadRequest_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelLoadRequest* Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelLoadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelLoadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelLoadResponse* Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelLoadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelLoadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelUnloadRequest* Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelUnloadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelUnloadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::RepositoryModelUnloadResponse* Arena::CreateMaybeMessage< ::hercules::proto::RepositoryModelUnloadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::RepositoryModelUnloadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryStatusRequest* Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus* Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryStatusResponse_RegionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryStatusResponse* Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryRegisterRequest* Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryRegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryRegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryRegisterResponse* Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryRegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryRegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryUnregisterRequest* Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryUnregisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryUnregisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::SystemSharedMemoryUnregisterResponse* Arena::CreateMaybeMessage< ::hercules::proto::SystemSharedMemoryUnregisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::SystemSharedMemoryUnregisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryStatusRequest* Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus* Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryStatusResponse_RegionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryStatusResponse* Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryRegisterRequest* Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryRegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryRegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryRegisterResponse* Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryRegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryRegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryUnregisterRequest* Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryUnregisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryUnregisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::CudaSharedMemoryUnregisterResponse* Arena::CreateMaybeMessage< ::hercules::proto::CudaSharedMemoryUnregisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::CudaSharedMemoryUnregisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingRequest_SettingValue* Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingRequest_SettingValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingRequest_SettingValue >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingRequest_SettingsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingRequest* Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingResponse_SettingValue* Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingResponse_SettingValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingResponse_SettingValue >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse* Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingResponse_SettingsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hercules::proto::TraceSettingResponse* Arena::CreateMaybeMessage< ::hercules::proto::TraceSettingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hercules::proto::TraceSettingResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
